   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__addsf3
  11               	.global	__fixunssfsi
  12               	.global	__floatsisf
  13               		.section	.text.startup.main,"ax",@progbits
  14               	.global	main
  16               	main:
  17               	.LFB9:
  18               		.file 1 "main.c"
   1:main.c        **** /* firmware for some 3360 mouse
   2:main.c        ****  *
   3:main.c        ****  * Copyright (c) 2016 qsxcv
   4:main.c        ****  *
   5:main.c        ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   6:main.c        ****  * of this software and associated documentation files (the "Software"), to deal
   7:main.c        ****  * in the Software without restriction, including without limitation the rights
   8:main.c        ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:main.c        ****  * copies of the Software, and to permit persons to whom the Software is
  10:main.c        ****  * furnished to do so, subject to the following conditions:
  11:main.c        ****  *
  12:main.c        ****  * The above copyright notice and this permission notice shall be included in
  13:main.c        ****  * all copies or substantial portions of the Software.
  14:main.c        ****  *
  15:main.c        ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:main.c        ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:main.c        ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:main.c        ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:main.c        ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:main.c        ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:main.c        ****  * THE SOFTWARE.
  22:main.c        ****  */
  23:main.c        **** 
  24:main.c        **** // this code assumes
  25:main.c        **** 
  26:main.c        **** // 3360 NCS			<-> B0
  27:main.c        **** // 3360 SCLK		<-> B1
  28:main.c        **** // 3360 MOSI		<-> B2
  29:main.c        **** // 3360 MISO		<-> B3
  30:main.c        **** // 3360 NRESET set to high by pcb.
  31:main.c        **** // wheel B			<-> C6 (wheel up)
  32:main.c        **** // wheel A			<-> C7 (wheel down)
  33:main.c        **** // left button		<-> D0
  34:main.c        **** // right button		<-> D1
  35:main.c        **** // wheel button		<-> D2
  36:main.c        **** // L back side		<-> D3
  37:main.c        **** // L forwards side	<-> D4
  38:main.c        **** // dpi button		<-> D5
  39:main.c        **** // R LED			<-> B5
  40:main.c        **** // G LED			<-> B6
  41:main.c        **** // B LED			<-> D7
  42:main.c        **** 
  43:main.c        **** 
  44:main.c        **** #include <avr/io.h>
  45:main.c        **** #include <avr/pgmspace.h>
  46:main.c        **** #include <avr/interrupt.h>
  47:main.c        **** #include <avr/eeprom.h>
  48:main.c        **** #include "srom_3360_0x03.h"
  49:main.c        **** #include "usb_mouse.h"
  50:main.c        **** 
  51:main.c        **** #define delay_us(t) __builtin_avr_delay_cycles((t) * (F_CPU/1000000))
  52:main.c        **** #define delay_ms(t) __builtin_avr_delay_cycles((t) * (F_CPU/1000))
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** #define PORT_SPI PORTB
  56:main.c        **** #define DDR_SPI	DDRB
  57:main.c        **** 
  58:main.c        **** #define DD_SS	0 // aka NCS
  59:main.c        **** #define DD_SCK	1
  60:main.c        **** #define DD_MOSI	2
  61:main.c        **** #define DD_MISO	3
  62:main.c        **** 
  63:main.c        **** #define SS_LOW	(PORT_SPI &= ~(1<<DD_SS))
  64:main.c        **** #define SS_HIGH	(PORT_SPI |= (1<<DD_SS))
  65:main.c        **** 
  66:main.c        **** #define DEBOUNCE_TIME 32 // debounce time in units of 125us. only affects release latency.
  67:main.c        **** 
  68:main.c        **** // modify these and corresponding stuff in pins_init() as needed
  69:main.c        **** #define WHL_A_IS_HIGH	(!!(PINC & (1<<6)))
  70:main.c        **** #define WHL_B_IS_HIGH	(!!(PINC & (1<<7)))
  71:main.c        **** 
  72:main.c        **** // use this instead of bitshifts or LSB/MSB macros.
  73:main.c        **** union motion_data {
  74:main.c        **** 	int16_t all;
  75:main.c        **** 	struct { uint8_t lo, hi; };
  76:main.c        **** };
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** static void pins_init(void)
  80:main.c        **** {
  81:main.c        **** 	// buttons
  82:main.c        **** 	PORTD |= 0b00111111; // L, R, M, FSB, RSB, DPI
  83:main.c        **** 	
  84:main.c        **** 	// wheel (mechanical encoder, quadrature outputs A/B)
  85:main.c        **** 	DDRC &= ~((1<<6) | (1<<7)); // pullup inputs on C6, C7
  86:main.c        **** 	PORTC |= (1<<6) | (1<<7);
  87:main.c        **** 	
  88:main.c        **** 	// teensy LED
  89:main.c        **** 	DDRD |= (1<<6);
  90:main.c        **** 	
  91:main.c        **** 	// RGB LED
  92:main.c        **** 	DDRB |= (1<<5) | (1<<6);
  93:main.c        **** 	DDRD |= (1<<7);
  94:main.c        **** 	PORTB |= (1<<5); // Red (off)
  95:main.c        **** 	PORTB |= (1<<6); // Green (off)
  96:main.c        **** 	PORTD |= (1<<7); // Blue (off)
  97:main.c        **** 	
  98:main.c        **** 	// not necssary if NRESET is pulled high in PCB
  99:main.c        **** 	//DDRC |= (1<<7); PORTC |= (1<<7); // C7, NRESET high output
 100:main.c        **** 
 101:main.c        **** 	EICRA = 0b01010101; // generate interrupt request on any edge of D0/D1/D2/D3
 102:main.c        **** 	EIMSK = 0; // but don't enable any actual interrupts
 103:main.c        **** 	EIFR = 0b00001111; // clear EIFR
 104:main.c        **** }
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** // spi functions
 108:main.c        **** static void spi_init(void)
 109:main.c        **** {
 110:main.c        **** 	DDR_SPI |= (1<<DD_MOSI) | (1<<DD_SCK) | (1<<DD_SS); // outputs
 111:main.c        **** 	DDRB |= (1<<0); PORTB |= (1<<0); // set the hardware SS pin to low to enable SPI
 112:main.c        **** 	// MISO pullup input is already done in hardware
 113:main.c        **** 	// enable spi, master mode, mode 3, clock rate = fck/4 = 2MHz
 114:main.c        **** 	SPCR = (1<<SPE) | (1<<MSTR) | (1<<CPOL) | (1<<CPHA);
 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** static inline void spi_send(const uint8_t b)
 118:main.c        **** {
 119:main.c        **** 	SPDR = b;
 120:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 121:main.c        **** }
 122:main.c        **** 
 123:main.c        **** static inline uint8_t spi_recv(void)
 124:main.c        **** {
 125:main.c        **** 	spi_send(0x00);
 126:main.c        **** 	return SPDR;
 127:main.c        **** }
 128:main.c        **** 
 129:main.c        **** static inline void spi_write(const uint8_t addr, const uint8_t data)
 130:main.c        **** {
 131:main.c        **** 	spi_send(addr | 0x80);
 132:main.c        **** 	spi_send(data);
 133:main.c        **** 	delay_us(180); // maximum of t_SWW, t_SWR
 134:main.c        **** }
 135:main.c        **** 
 136:main.c        **** static inline uint8_t spi_read(const uint8_t addr)
 137:main.c        **** {
 138:main.c        **** 	spi_send(addr);
 139:main.c        **** 	delay_us(160); // t_SRAD
 140:main.c        **** 	uint8_t data = spi_recv();
 141:main.c        **** 	delay_us(20);
 142:main.c        **** 	return data;
 143:main.c        **** }
 144:main.c        **** 
 145:main.c        **** // dpi argument is what's written to register 0x0f
 146:main.c        **** // actual dpi value = (dpi + 1) * 100
 147:main.c        **** static void pmw3360_init(const uint8_t dpi)
 148:main.c        **** {
 149:main.c        **** 	const uint8_t *psrom = srom;
 150:main.c        **** 
 151:main.c        **** 	SS_HIGH;
 152:main.c        **** 	delay_ms(3);
 153:main.c        **** 
 154:main.c        **** 	// shutdown first
 155:main.c        **** 	SS_LOW;
 156:main.c        **** 	spi_write(0x3b, 0xb6);
 157:main.c        **** 	SS_HIGH;
 158:main.c        **** 	delay_ms(300);
 159:main.c        **** 
 160:main.c        **** 	// drop and raise ncs to reset spi port
 161:main.c        **** 	SS_LOW;
 162:main.c        **** 	delay_us(40);
 163:main.c        **** 	SS_HIGH;
 164:main.c        **** 	delay_us(40);
 165:main.c        **** 
 166:main.c        **** 	// power up reset
 167:main.c        **** 	SS_LOW;
 168:main.c        **** 	spi_write(0x3a, 0x5a);
 169:main.c        **** 	SS_HIGH;
 170:main.c        **** 	delay_ms(50);
 171:main.c        **** 
 172:main.c        **** 	// read from 0x02 to 0x06
 173:main.c        **** 	SS_LOW;
 174:main.c        **** 	spi_read(0x02);
 175:main.c        **** 	spi_read(0x03);
 176:main.c        **** 	spi_read(0x04);
 177:main.c        **** 	spi_read(0x05);
 178:main.c        **** 	spi_read(0x06);
 179:main.c        **** 
 180:main.c        **** 	// srom download
 181:main.c        **** 	spi_write(0x10, 0x00);
 182:main.c        **** 	spi_write(0x13, 0x1d);
 183:main.c        **** 	SS_HIGH;
 184:main.c        **** 	delay_ms(10);
 185:main.c        **** 	SS_LOW;
 186:main.c        **** 	spi_write(0x13, 0x18);
 187:main.c        **** 
 188:main.c        **** 	spi_send(0x62 | 0x80);
 189:main.c        **** 	for (uint16_t i = 0; i < SROM_LENGTH; i++) {
 190:main.c        **** 		delay_us(16);
 191:main.c        **** 		spi_send(pgm_read_byte(psrom++));
 192:main.c        **** 	}
 193:main.c        **** 	delay_us(18);
 194:main.c        **** 	SS_HIGH;
 195:main.c        **** 	delay_us(200);
 196:main.c        **** 
 197:main.c        **** 	// configuration/settings
 198:main.c        **** 	SS_LOW;
 199:main.c        **** 	spi_write(0x10, 0x00); // Rest mode & independant X/Y DPI disabled
 200:main.c        **** 	spi_write(0x0d, 0x00); // Camera angle
 201:main.c        **** 	spi_write(0x11, 0x00); // Camera angle fine tuning
 202:main.c        **** 	spi_write(0x0f, dpi); // DPI
 203:main.c        **** 	// LOD Stuff
 204:main.c        **** 	spi_write(0x63, 0x02); // LOD: 0x00 disable lift detection, 0x02 = 2mm, 0x03 = 3mm
 205:main.c        **** 	spi_write(0x2b, 0x10); // Minimum SQUAL for zero motion data (default: 0x10)
 206:main.c        **** 	spi_write(0x2c, 0x0a); // Minimum Valid features (reduce SQUAL score) (default: 0x0a)
 207:main.c        **** 	SS_HIGH;
 208:main.c        **** 	delay_us(200);
 209:main.c        **** }
 210:main.c        **** 
 211:main.c        **** // angle snapping
 212:main.c        **** static void angle_init(const uint8_t angle) {
 213:main.c        **** 	SS_LOW;
 214:main.c        **** 	spi_write(0x42, angle); // Angle snapping: 0x00 = off, 0x80 = on
 215:main.c        **** 	SS_HIGH;
 216:main.c        **** }
 217:main.c        **** 
 218:main.c        **** 
 219:main.c        **** int main(void)
 220:main.c        **** {
  19               		.loc 1 220 0
  20               		.cfi_startproc
  21 0000 CF93      		push r28
  22               	.LCFI0:
  23               		.cfi_def_cfa_offset 3
  24               		.cfi_offset 28, -2
  25 0002 DF93      		push r29
  26               	.LCFI1:
  27               		.cfi_def_cfa_offset 4
  28               		.cfi_offset 29, -3
  29 0004 CDB7      		in r28,__SP_L__
  30 0006 DEB7      		in r29,__SP_H__
  31               	.LCFI2:
  32               		.cfi_def_cfa_register 28
  33 0008 2C97      		sbiw r28,12
  34               	.LCFI3:
  35               		.cfi_def_cfa_offset 16
  36 000a 0FB6      		in __tmp_reg__,__SREG__
  37 000c F894      		cli
  38 000e DEBF      		out __SP_H__,r29
  39 0010 0FBE      		out __SREG__,__tmp_reg__
  40 0012 CDBF      		out __SP_L__,r28
  41               	/* prologue: function */
  42               	/* frame size = 12 */
  43               	/* stack size = 14 */
  44               	.L__stack_usage = 14
 221:main.c        **** 	union motion_data x, y;
 222:main.c        **** 
 223:main.c        **** 	// set clock prescaler for 16MHz
 224:main.c        **** 	CLKPR = 0x80;
  45               		.loc 1 224 0
  46 0014 80E8      		ldi r24,lo8(-128)
  47 0016 8093 6100 		sts 97,r24
 225:main.c        **** 	CLKPR = 0x00;
  48               		.loc 1 225 0
  49 001a 1092 6100 		sts 97,__zero_reg__
  50               	.LBB326:
  51               	.LBB327:
  82:main.c        **** 	
  52               		.loc 1 82 0
  53 001e 8BB1      		in r24,0xb
  54 0020 8F63      		ori r24,lo8(63)
  55 0022 8BB9      		out 0xb,r24
  85:main.c        **** 	PORTC |= (1<<6) | (1<<7);
  56               		.loc 1 85 0
  57 0024 87B1      		in r24,0x7
  58 0026 8F73      		andi r24,lo8(63)
  59 0028 87B9      		out 0x7,r24
  86:main.c        **** 	
  60               		.loc 1 86 0
  61 002a 88B1      		in r24,0x8
  62 002c 806C      		ori r24,lo8(-64)
  63 002e 88B9      		out 0x8,r24
  89:main.c        **** 	
  64               		.loc 1 89 0
  65 0030 569A      		sbi 0xa,6
  92:main.c        **** 	DDRD |= (1<<7);
  66               		.loc 1 92 0
  67 0032 84B1      		in r24,0x4
  68 0034 8066      		ori r24,lo8(96)
  69 0036 84B9      		out 0x4,r24
  93:main.c        **** 	PORTB |= (1<<5); // Red (off)
  70               		.loc 1 93 0
  71 0038 579A      		sbi 0xa,7
  94:main.c        **** 	PORTB |= (1<<6); // Green (off)
  72               		.loc 1 94 0
  73 003a 2D9A      		sbi 0x5,5
  95:main.c        **** 	PORTD |= (1<<7); // Blue (off)
  74               		.loc 1 95 0
  75 003c 2E9A      		sbi 0x5,6
  96:main.c        **** 	
  76               		.loc 1 96 0
  77 003e 5F9A      		sbi 0xb,7
 101:main.c        **** 	EIMSK = 0; // but don't enable any actual interrupts
  78               		.loc 1 101 0
  79 0040 85E5      		ldi r24,lo8(85)
  80 0042 8093 6900 		sts 105,r24
 102:main.c        **** 	EIFR = 0b00001111; // clear EIFR
  81               		.loc 1 102 0
  82 0046 1DBA      		out 0x1d,__zero_reg__
 103:main.c        **** }
  83               		.loc 1 103 0
  84 0048 8FE0      		ldi r24,lo8(15)
  85 004a 8CBB      		out 0x1c,r24
  86               	.LBE327:
  87               	.LBE326:
 226:main.c        **** 
 227:main.c        **** 	pins_init();
 228:main.c        **** 
 229:main.c        **** 	// previous state to compare against for debouncing
 230:main.c        **** 	uint8_t btn_prev = (~PIND) & 0b00111111; // read L, R, M, FSB, RSB, DPI
  88               		.loc 1 230 0
  89 004c 89B1      		in r24,0x9
  90 004e 8095      		com r24
  91 0050 8F73      		andi r24,lo8(63)
  92 0052 F82E      		mov r15,r24
  93               	.LVL0:
 231:main.c        **** 	// time (in 125us) button has been unpressed.
 232:main.c        **** 	// consider button to be released if this time exceeds DEBOUNCE_TIME.
 233:main.c        **** 	uint8_t btn_time[8] = {0, 0, 0, 0, 0, 0, 0, 0};
 234:main.c        **** 	// RGB Timers
 235:main.c        **** 	uint8_t led_max_timer = 16; // Timer maximum
 236:main.c        **** 	uint8_t led_r_timer = 0; // Red LED Timer initial value
 237:main.c        **** 	uint8_t led_g_timer = 0; // Green LED Timer initial value
 238:main.c        **** 	uint8_t led_b_timer = 0; // Blue LED Timer initial value
 239:main.c        **** 	// RGB Brightness
 240:main.c        **** 	uint8_t led_bright_index = 4;
 241:main.c        **** 	float led_bright[] = {0, 0.25, 0.5, 0.75, 1};
 242:main.c        **** 	float led_rgb_brightness = led_bright[led_bright_index];
 243:main.c        **** 	// RGB Initial Values
 244:main.c        **** 	uint8_t led_r_value = 0; // Red LED brightness: 0-255
 245:main.c        **** 	uint8_t led_g_value = 0; // Green LED brightness: 0-255
 246:main.c        **** 	uint8_t led_b_value = 0; // Blue LED brightness: 0-255
 247:main.c        **** 	// RGB Colour Selection
 248:main.c        **** 	uint8_t led_colours_index = 1;
 249:main.c        **** 	uint8_t led_colours[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
 250:main.c        **** 	uint8_t led_colour = led_colours[led_colours_index]; 
 251:main.c        **** 	// Profiles Intitial Values
 252:main.c        **** 	uint8_t p1_led_colour = 1; // Red
 253:main.c        **** 	uint8_t p2_led_colour = 2; // Pink
 254:main.c        **** 	uint8_t p3_led_colour = 4; // Purple
 255:main.c        **** 	uint8_t p1_led_brightness = 4; // 0 = 0, 1 = 0.25, 2 = 0.5, 3 = 0.75, 4 = 1
 256:main.c        **** 	uint8_t p2_led_brightness = 4;
 257:main.c        **** 	uint8_t p3_led_brightness = 4;
 258:main.c        **** 	// binary OR of all button states since previous usb transmission
 259:main.c        **** 	uint8_t btn_usb = 0x00;
 260:main.c        **** 	// previously transmitted button state
 261:main.c        **** 	uint8_t btn_usb_prev = 0x00;
 262:main.c        **** 	// if dpi button is pressed when plugging in, jump to bootloader
 263:main.c        **** 	// see https://www.pjrc.com/teensy/jump_to_bootloader.html
 264:main.c        **** 	delay_ms(50);
  94               		.loc 1 264 0
  95 0054 2FEF      		ldi r18,lo8(159999)
  96 0056 30E7      		ldi r19,hi8(159999)
  97 0058 82E0      		ldi r24,hlo8(159999)
  98 005a 2150      	1:	subi r18,1
  99 005c 3040      		sbci r19,0
 100 005e 8040      		sbci r24,0
 101 0060 01F4      		brne 1b
 102 0062 00C0      		rjmp .
 103 0064 0000      		nop
 265:main.c        **** 	if (!(PIND & (1<<2)))
 104               		.loc 1 265 0
 105 0066 4A99      		sbic 0x9,2
 106 0068 00C0      		rjmp .L2
 266:main.c        **** 		__asm__ volatile ("jmp 0x7e00");
 107               		.loc 1 266 0
 108               	/* #APP */
 109               	 ;  266 "main.c" 1
 110 006a 0C94 003F 		jmp 0x7e00
 111               	 ;  0 "" 2
 112               	/* #NOAPP */
 113               	.L2:
 114               	.LVL1:
 115               	.LBB328:
 116               	.LBB329:
 110:main.c        **** 	DDRB |= (1<<0); PORTB |= (1<<0); // set the hardware SS pin to low to enable SPI
 117               		.loc 1 110 0
 118 006e 84B1      		in r24,0x4
 119 0070 8760      		ori r24,lo8(7)
 120 0072 84B9      		out 0x4,r24
 111:main.c        **** 	// MISO pullup input is already done in hardware
 121               		.loc 1 111 0
 122 0074 209A      		sbi 0x4,0
 123 0076 289A      		sbi 0x5,0
 114:main.c        **** }
 124               		.loc 1 114 0
 125 0078 8CE5      		ldi r24,lo8(92)
 126 007a 8CBD      		out 0x2c,r24
 127               	.LVL2:
 128               	.LBE329:
 129               	.LBE328:
 267:main.c        **** 	
 268:main.c        **** 	// wheel stuff
 269:main.c        **** 	uint8_t whl_prev_same = 0; // what A was the last time A == B
 270:main.c        **** 	uint8_t whl_prev_diff = 0; // what A was the last time A != B
 271:main.c        **** 	int8_t whl = 0; // scrolls since previous usb transmission
 272:main.c        **** 
 273:main.c        **** 	spi_init();
 274:main.c        **** 	
 275:main.c        **** 	// Angle snapping settings
 276:main.c        **** 	uint8_t angle_index = 0;
 277:main.c        **** 	uint8_t angles[] = {0x00, 0x80}; // Off, On
 278:main.c        **** 	
 279:main.c        **** 	// Initial profile
 280:main.c        **** 	uint8_t profile = 1;
 281:main.c        **** 	
 282:main.c        **** 	// dpi settings
 283:main.c        **** 	uint8_t dpi_index = 1;
 284:main.c        **** 	uint8_t dpis[] = {3, 7, 15};
 285:main.c        **** 	
 286:main.c        **** 	// Profile switching when mouse is plugged in
 287:main.c        **** 	delay_ms(50);
 130               		.loc 1 287 0
 131 007c 9FEF      		ldi r25,lo8(159999)
 132 007e E0E7      		ldi r30,hi8(159999)
 133 0080 F2E0      		ldi r31,hlo8(159999)
 134 0082 9150      	1:	subi r25,1
 135 0084 E040      		sbci r30,0
 136 0086 F040      		sbci r31,0
 137 0088 01F4      		brne 1b
 138 008a 00C0      		rjmp .
 139 008c 0000      		nop
 288:main.c        **** 	if (!(PIND & (1<<3))) {
 140               		.loc 1 288 0
 141 008e 4B9B      		sbis 0x9,3
 142 0090 00C0      		rjmp .L96
 289:main.c        **** 		// Initial profile
 290:main.c        **** 		profile = 2;
 291:main.c        **** 		// dpi settings
 292:main.c        **** 		dpi_index = 0;
 293:main.c        **** 	}
 294:main.c        **** 		
 295:main.c        **** 	else if (!(PIND & (1<<4))) {
 143               		.loc 1 295 0
 144 0092 4C99      		sbic 0x9,4
 145 0094 00C0      		rjmp .L97
 146 0096 8FE0      		ldi r24,lo8(15)
 296:main.c        **** 		// Initial profile
 297:main.c        **** 		profile = 3;
 147               		.loc 1 297 0
 148 0098 23E0      		ldi r18,lo8(3)
 149 009a 2A83      		std Y+2,r18
 150               	.L3:
 151               	.LVL3:
 152               	.LBB330:
 153               	.LBB331:
 151:main.c        **** 	delay_ms(3);
 154               		.loc 1 151 0
 155 009c 289A      		sbi 0x5,0
 152:main.c        **** 
 156               		.loc 1 152 0
 157 009e EFED      		ldi r30,lo8(11999)
 158 00a0 FEE2      		ldi r31,hi8(11999)
 159 00a2 3197      	1:	sbiw r30,1
 160 00a4 01F4      		brne 1b
 161 00a6 00C0      		rjmp .
 162 00a8 0000      		nop
 155:main.c        **** 	spi_write(0x3b, 0xb6);
 163               		.loc 1 155 0
 164 00aa 2898      		cbi 0x5,0
 165               	.LVL4:
 166               	.LBB332:
 167               	.LBB333:
 168               	.LBB334:
 169               	.LBB335:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 170               		.loc 1 119 0
 171 00ac 9BEB      		ldi r25,lo8(-69)
 172 00ae 9EBD      		out 0x2e,r25
 173               	.LVL5:
 174               	.L4:
 120:main.c        **** }
 175               		.loc 1 120 0
 176 00b0 0DB4      		in __tmp_reg__,0x2d
 177 00b2 07FE      		sbrs __tmp_reg__,7
 178 00b4 00C0      		rjmp .L4
 179               	.LVL6:
 180               	.LBE335:
 181               	.LBE334:
 182               	.LBB336:
 183               	.LBB337:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 184               		.loc 1 119 0
 185 00b6 96EB      		ldi r25,lo8(-74)
 186 00b8 9EBD      		out 0x2e,r25
 187               	.L5:
 120:main.c        **** }
 188               		.loc 1 120 0
 189 00ba 0DB4      		in __tmp_reg__,0x2d
 190 00bc 07FE      		sbrs __tmp_reg__,7
 191 00be 00C0      		rjmp .L5
 192               	.LBE337:
 193               	.LBE336:
 133:main.c        **** }
 194               		.loc 1 133 0
 195 00c0 EFEC      		ldi r30,lo8(719)
 196 00c2 F2E0      		ldi r31,hi8(719)
 197 00c4 3197      	1:	sbiw r30,1
 198 00c6 01F4      		brne 1b
 199 00c8 00C0      		rjmp .
 200 00ca 0000      		nop
 201               	.LBE333:
 202               	.LBE332:
 157:main.c        **** 	delay_ms(300);
 203               		.loc 1 157 0
 204 00cc 289A      		sbi 0x5,0
 158:main.c        **** 
 205               		.loc 1 158 0
 206 00ce FFEF      		ldi r31,lo8(959999)
 207 00d0 25EA      		ldi r18,hi8(959999)
 208 00d2 3EE0      		ldi r19,hlo8(959999)
 209 00d4 F150      	1:	subi r31,1
 210 00d6 2040      		sbci r18,0
 211 00d8 3040      		sbci r19,0
 212 00da 01F4      		brne 1b
 213 00dc 00C0      		rjmp .
 214 00de 0000      		nop
 161:main.c        **** 	delay_us(40);
 215               		.loc 1 161 0
 216 00e0 2898      		cbi 0x5,0
 162:main.c        **** 	SS_HIGH;
 217               		.loc 1 162 0
 218 00e2 95ED      		ldi r25,lo8(-43)
 219 00e4 9A95      	1:	dec r25
 220 00e6 01F4      		brne 1b
 221 00e8 0000      		nop
 163:main.c        **** 	delay_us(40);
 222               		.loc 1 163 0
 223 00ea 289A      		sbi 0x5,0
 164:main.c        **** 
 224               		.loc 1 164 0
 225 00ec E5ED      		ldi r30,lo8(-43)
 226 00ee EA95      	1:	dec r30
 227 00f0 01F4      		brne 1b
 228 00f2 0000      		nop
 167:main.c        **** 	spi_write(0x3a, 0x5a);
 229               		.loc 1 167 0
 230 00f4 2898      		cbi 0x5,0
 231               	.LVL7:
 232               	.LBB338:
 233               	.LBB339:
 234               	.LBB340:
 235               	.LBB341:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 236               		.loc 1 119 0
 237 00f6 9AEB      		ldi r25,lo8(-70)
 238 00f8 9EBD      		out 0x2e,r25
 239               	.L6:
 120:main.c        **** }
 240               		.loc 1 120 0
 241 00fa 0DB4      		in __tmp_reg__,0x2d
 242 00fc 07FE      		sbrs __tmp_reg__,7
 243 00fe 00C0      		rjmp .L6
 244               	.LVL8:
 245               	.LBE341:
 246               	.LBE340:
 247               	.LBB342:
 248               	.LBB343:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 249               		.loc 1 119 0
 250 0100 9AE5      		ldi r25,lo8(90)
 251 0102 9EBD      		out 0x2e,r25
 252               	.L7:
 120:main.c        **** }
 253               		.loc 1 120 0
 254 0104 0DB4      		in __tmp_reg__,0x2d
 255 0106 07FE      		sbrs __tmp_reg__,7
 256 0108 00C0      		rjmp .L7
 257               	.LBE343:
 258               	.LBE342:
 133:main.c        **** }
 259               		.loc 1 133 0
 260 010a EFEC      		ldi r30,lo8(719)
 261 010c F2E0      		ldi r31,hi8(719)
 262 010e 3197      	1:	sbiw r30,1
 263 0110 01F4      		brne 1b
 264 0112 00C0      		rjmp .
 265 0114 0000      		nop
 266               	.LBE339:
 267               	.LBE338:
 169:main.c        **** 	delay_ms(50);
 268               		.loc 1 169 0
 269 0116 289A      		sbi 0x5,0
 170:main.c        **** 
 270               		.loc 1 170 0
 271 0118 FFEF      		ldi r31,lo8(159999)
 272 011a 20E7      		ldi r18,hi8(159999)
 273 011c 32E0      		ldi r19,hlo8(159999)
 274 011e F150      	1:	subi r31,1
 275 0120 2040      		sbci r18,0
 276 0122 3040      		sbci r19,0
 277 0124 01F4      		brne 1b
 278 0126 00C0      		rjmp .
 279 0128 0000      		nop
 173:main.c        **** 	spi_read(0x02);
 280               		.loc 1 173 0
 281 012a 2898      		cbi 0x5,0
 282               	.LVL9:
 283               	.LBB344:
 284               	.LBB345:
 285               	.LBB346:
 286               	.LBB347:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 287               		.loc 1 119 0
 288 012c 92E0      		ldi r25,lo8(2)
 289 012e 9EBD      		out 0x2e,r25
 290               	.L8:
 120:main.c        **** }
 291               		.loc 1 120 0
 292 0130 0DB4      		in __tmp_reg__,0x2d
 293 0132 07FE      		sbrs __tmp_reg__,7
 294 0134 00C0      		rjmp .L8
 295               	.LBE347:
 296               	.LBE346:
 139:main.c        **** 	uint8_t data = spi_recv();
 297               		.loc 1 139 0
 298 0136 EFE7      		ldi r30,lo8(639)
 299 0138 F2E0      		ldi r31,hi8(639)
 300 013a 3197      	1:	sbiw r30,1
 301 013c 01F4      		brne 1b
 302 013e 00C0      		rjmp .
 303 0140 0000      		nop
 304               	.LVL10:
 305               	.LBB348:
 306               	.LBB349:
 307               	.LBB350:
 308               	.LBB351:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 309               		.loc 1 119 0
 310 0142 1EBC      		out 0x2e,__zero_reg__
 311               	.L9:
 120:main.c        **** }
 312               		.loc 1 120 0
 313 0144 0DB4      		in __tmp_reg__,0x2d
 314 0146 07FE      		sbrs __tmp_reg__,7
 315 0148 00C0      		rjmp .L9
 316               	.LBE351:
 317               	.LBE350:
 126:main.c        **** }
 318               		.loc 1 126 0
 319 014a 9EB5      		in r25,0x2e
 320               	.LBE349:
 321               	.LBE348:
 141:main.c        **** 	return data;
 322               		.loc 1 141 0
 323 014c FAE6      		ldi r31,lo8(106)
 324 014e FA95      	1:	dec r31
 325 0150 01F4      		brne 1b
 326 0152 00C0      		rjmp .
 327               	.LVL11:
 328               	.LBE345:
 329               	.LBE344:
 330               	.LBB352:
 331               	.LBB353:
 332               	.LBB354:
 333               	.LBB355:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 334               		.loc 1 119 0
 335 0154 93E0      		ldi r25,lo8(3)
 336 0156 9EBD      		out 0x2e,r25
 337               	.L10:
 120:main.c        **** }
 338               		.loc 1 120 0
 339 0158 0DB4      		in __tmp_reg__,0x2d
 340 015a 07FE      		sbrs __tmp_reg__,7
 341 015c 00C0      		rjmp .L10
 342               	.LBE355:
 343               	.LBE354:
 139:main.c        **** 	uint8_t data = spi_recv();
 344               		.loc 1 139 0
 345 015e EFE7      		ldi r30,lo8(639)
 346 0160 F2E0      		ldi r31,hi8(639)
 347 0162 3197      	1:	sbiw r30,1
 348 0164 01F4      		brne 1b
 349 0166 00C0      		rjmp .
 350 0168 0000      		nop
 351               	.LVL12:
 352               	.LBB356:
 353               	.LBB357:
 354               	.LBB358:
 355               	.LBB359:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 356               		.loc 1 119 0
 357 016a 1EBC      		out 0x2e,__zero_reg__
 358               	.L11:
 120:main.c        **** }
 359               		.loc 1 120 0
 360 016c 0DB4      		in __tmp_reg__,0x2d
 361 016e 07FE      		sbrs __tmp_reg__,7
 362 0170 00C0      		rjmp .L11
 363               	.LBE359:
 364               	.LBE358:
 126:main.c        **** }
 365               		.loc 1 126 0
 366 0172 9EB5      		in r25,0x2e
 367               	.LBE357:
 368               	.LBE356:
 141:main.c        **** 	return data;
 369               		.loc 1 141 0
 370 0174 FAE6      		ldi r31,lo8(106)
 371 0176 FA95      	1:	dec r31
 372 0178 01F4      		brne 1b
 373 017a 00C0      		rjmp .
 374               	.LVL13:
 375               	.LBE353:
 376               	.LBE352:
 377               	.LBB360:
 378               	.LBB361:
 379               	.LBB362:
 380               	.LBB363:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 381               		.loc 1 119 0
 382 017c 94E0      		ldi r25,lo8(4)
 383 017e 9EBD      		out 0x2e,r25
 384               	.L12:
 120:main.c        **** }
 385               		.loc 1 120 0
 386 0180 0DB4      		in __tmp_reg__,0x2d
 387 0182 07FE      		sbrs __tmp_reg__,7
 388 0184 00C0      		rjmp .L12
 389               	.LBE363:
 390               	.LBE362:
 139:main.c        **** 	uint8_t data = spi_recv();
 391               		.loc 1 139 0
 392 0186 EFE7      		ldi r30,lo8(639)
 393 0188 F2E0      		ldi r31,hi8(639)
 394 018a 3197      	1:	sbiw r30,1
 395 018c 01F4      		brne 1b
 396 018e 00C0      		rjmp .
 397 0190 0000      		nop
 398               	.LVL14:
 399               	.LBB364:
 400               	.LBB365:
 401               	.LBB366:
 402               	.LBB367:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 403               		.loc 1 119 0
 404 0192 1EBC      		out 0x2e,__zero_reg__
 405               	.L13:
 120:main.c        **** }
 406               		.loc 1 120 0
 407 0194 0DB4      		in __tmp_reg__,0x2d
 408 0196 07FE      		sbrs __tmp_reg__,7
 409 0198 00C0      		rjmp .L13
 410               	.LBE367:
 411               	.LBE366:
 126:main.c        **** }
 412               		.loc 1 126 0
 413 019a 9EB5      		in r25,0x2e
 414               	.LBE365:
 415               	.LBE364:
 141:main.c        **** 	return data;
 416               		.loc 1 141 0
 417 019c FAE6      		ldi r31,lo8(106)
 418 019e FA95      	1:	dec r31
 419 01a0 01F4      		brne 1b
 420 01a2 00C0      		rjmp .
 421               	.LVL15:
 422               	.LBE361:
 423               	.LBE360:
 424               	.LBB368:
 425               	.LBB369:
 426               	.LBB370:
 427               	.LBB371:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 428               		.loc 1 119 0
 429 01a4 95E0      		ldi r25,lo8(5)
 430 01a6 9EBD      		out 0x2e,r25
 431               	.L14:
 120:main.c        **** }
 432               		.loc 1 120 0
 433 01a8 0DB4      		in __tmp_reg__,0x2d
 434 01aa 07FE      		sbrs __tmp_reg__,7
 435 01ac 00C0      		rjmp .L14
 436               	.LBE371:
 437               	.LBE370:
 139:main.c        **** 	uint8_t data = spi_recv();
 438               		.loc 1 139 0
 439 01ae EFE7      		ldi r30,lo8(639)
 440 01b0 F2E0      		ldi r31,hi8(639)
 441 01b2 3197      	1:	sbiw r30,1
 442 01b4 01F4      		brne 1b
 443 01b6 00C0      		rjmp .
 444 01b8 0000      		nop
 445               	.LVL16:
 446               	.LBB372:
 447               	.LBB373:
 448               	.LBB374:
 449               	.LBB375:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 450               		.loc 1 119 0
 451 01ba 1EBC      		out 0x2e,__zero_reg__
 452               	.L15:
 120:main.c        **** }
 453               		.loc 1 120 0
 454 01bc 0DB4      		in __tmp_reg__,0x2d
 455 01be 07FE      		sbrs __tmp_reg__,7
 456 01c0 00C0      		rjmp .L15
 457               	.LBE375:
 458               	.LBE374:
 126:main.c        **** }
 459               		.loc 1 126 0
 460 01c2 9EB5      		in r25,0x2e
 461               	.LBE373:
 462               	.LBE372:
 141:main.c        **** 	return data;
 463               		.loc 1 141 0
 464 01c4 FAE6      		ldi r31,lo8(106)
 465 01c6 FA95      	1:	dec r31
 466 01c8 01F4      		brne 1b
 467 01ca 00C0      		rjmp .
 468               	.LVL17:
 469               	.LBE369:
 470               	.LBE368:
 471               	.LBB376:
 472               	.LBB377:
 473               	.LBB378:
 474               	.LBB379:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 475               		.loc 1 119 0
 476 01cc 96E0      		ldi r25,lo8(6)
 477 01ce 9EBD      		out 0x2e,r25
 478               	.L16:
 120:main.c        **** }
 479               		.loc 1 120 0
 480 01d0 0DB4      		in __tmp_reg__,0x2d
 481 01d2 07FE      		sbrs __tmp_reg__,7
 482 01d4 00C0      		rjmp .L16
 483               	.LBE379:
 484               	.LBE378:
 139:main.c        **** 	uint8_t data = spi_recv();
 485               		.loc 1 139 0
 486 01d6 EFE7      		ldi r30,lo8(639)
 487 01d8 F2E0      		ldi r31,hi8(639)
 488 01da 3197      	1:	sbiw r30,1
 489 01dc 01F4      		brne 1b
 490 01de 00C0      		rjmp .
 491 01e0 0000      		nop
 492               	.LVL18:
 493               	.LBB380:
 494               	.LBB381:
 495               	.LBB382:
 496               	.LBB383:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 497               		.loc 1 119 0
 498 01e2 1EBC      		out 0x2e,__zero_reg__
 499               	.L17:
 120:main.c        **** }
 500               		.loc 1 120 0
 501 01e4 0DB4      		in __tmp_reg__,0x2d
 502 01e6 07FE      		sbrs __tmp_reg__,7
 503 01e8 00C0      		rjmp .L17
 504               	.LBE383:
 505               	.LBE382:
 126:main.c        **** }
 506               		.loc 1 126 0
 507 01ea 9EB5      		in r25,0x2e
 508               	.LBE381:
 509               	.LBE380:
 141:main.c        **** 	return data;
 510               		.loc 1 141 0
 511 01ec FAE6      		ldi r31,lo8(106)
 512 01ee FA95      	1:	dec r31
 513 01f0 01F4      		brne 1b
 514 01f2 00C0      		rjmp .
 515               	.LVL19:
 516               	.LBE377:
 517               	.LBE376:
 518               	.LBB384:
 519               	.LBB385:
 520               	.LBB386:
 521               	.LBB387:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 522               		.loc 1 119 0
 523 01f4 90E9      		ldi r25,lo8(-112)
 524 01f6 9EBD      		out 0x2e,r25
 525               	.L18:
 120:main.c        **** }
 526               		.loc 1 120 0
 527 01f8 0DB4      		in __tmp_reg__,0x2d
 528 01fa 07FE      		sbrs __tmp_reg__,7
 529 01fc 00C0      		rjmp .L18
 530               	.LVL20:
 531               	.LBE387:
 532               	.LBE386:
 533               	.LBB388:
 534               	.LBB389:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 535               		.loc 1 119 0
 536 01fe 1EBC      		out 0x2e,__zero_reg__
 537               	.L19:
 120:main.c        **** }
 538               		.loc 1 120 0
 539 0200 0DB4      		in __tmp_reg__,0x2d
 540 0202 07FE      		sbrs __tmp_reg__,7
 541 0204 00C0      		rjmp .L19
 542               	.LBE389:
 543               	.LBE388:
 133:main.c        **** }
 544               		.loc 1 133 0
 545 0206 EFEC      		ldi r30,lo8(719)
 546 0208 F2E0      		ldi r31,hi8(719)
 547 020a 3197      	1:	sbiw r30,1
 548 020c 01F4      		brne 1b
 549 020e 00C0      		rjmp .
 550 0210 0000      		nop
 551               	.LVL21:
 552               	.LBE385:
 553               	.LBE384:
 554               	.LBB390:
 555               	.LBB391:
 556               	.LBB392:
 557               	.LBB393:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 558               		.loc 1 119 0
 559 0212 93E9      		ldi r25,lo8(-109)
 560 0214 9EBD      		out 0x2e,r25
 561               	.L20:
 120:main.c        **** }
 562               		.loc 1 120 0
 563 0216 0DB4      		in __tmp_reg__,0x2d
 564 0218 07FE      		sbrs __tmp_reg__,7
 565 021a 00C0      		rjmp .L20
 566               	.LVL22:
 567               	.LBE393:
 568               	.LBE392:
 569               	.LBB394:
 570               	.LBB395:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 571               		.loc 1 119 0
 572 021c 9DE1      		ldi r25,lo8(29)
 573 021e 9EBD      		out 0x2e,r25
 574               	.L21:
 120:main.c        **** }
 575               		.loc 1 120 0
 576 0220 0DB4      		in __tmp_reg__,0x2d
 577 0222 07FE      		sbrs __tmp_reg__,7
 578 0224 00C0      		rjmp .L21
 579               	.LBE395:
 580               	.LBE394:
 133:main.c        **** }
 581               		.loc 1 133 0
 582 0226 EFEC      		ldi r30,lo8(719)
 583 0228 F2E0      		ldi r31,hi8(719)
 584 022a 3197      	1:	sbiw r30,1
 585 022c 01F4      		brne 1b
 586 022e 00C0      		rjmp .
 587 0230 0000      		nop
 588               	.LBE391:
 589               	.LBE390:
 183:main.c        **** 	delay_ms(10);
 590               		.loc 1 183 0
 591 0232 289A      		sbi 0x5,0
 184:main.c        **** 	SS_LOW;
 592               		.loc 1 184 0
 593 0234 EFE3      		ldi r30,lo8(-25537)
 594 0236 FCE9      		ldi r31,hi8(-25537)
 595 0238 3197      	1:	sbiw r30,1
 596 023a 01F4      		brne 1b
 597 023c 00C0      		rjmp .
 598 023e 0000      		nop
 185:main.c        **** 	spi_write(0x13, 0x18);
 599               		.loc 1 185 0
 600 0240 2898      		cbi 0x5,0
 601               	.LVL23:
 602               	.LBB396:
 603               	.LBB397:
 604               	.LBB398:
 605               	.LBB399:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 606               		.loc 1 119 0
 607 0242 93E9      		ldi r25,lo8(-109)
 608 0244 9EBD      		out 0x2e,r25
 609               	.L22:
 120:main.c        **** }
 610               		.loc 1 120 0
 611 0246 0DB4      		in __tmp_reg__,0x2d
 612 0248 07FE      		sbrs __tmp_reg__,7
 613 024a 00C0      		rjmp .L22
 614               	.LVL24:
 615               	.LBE399:
 616               	.LBE398:
 617               	.LBB400:
 618               	.LBB401:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 619               		.loc 1 119 0
 620 024c 98E1      		ldi r25,lo8(24)
 621 024e 9EBD      		out 0x2e,r25
 622               	.L23:
 120:main.c        **** }
 623               		.loc 1 120 0
 624 0250 0DB4      		in __tmp_reg__,0x2d
 625 0252 07FE      		sbrs __tmp_reg__,7
 626 0254 00C0      		rjmp .L23
 627               	.LBE401:
 628               	.LBE400:
 133:main.c        **** }
 629               		.loc 1 133 0
 630 0256 EFEC      		ldi r30,lo8(719)
 631 0258 F2E0      		ldi r31,hi8(719)
 632 025a 3197      	1:	sbiw r30,1
 633 025c 01F4      		brne 1b
 634 025e 00C0      		rjmp .
 635 0260 0000      		nop
 636               	.LVL25:
 637               	.LBE397:
 638               	.LBE396:
 639               	.LBB402:
 640               	.LBB403:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 641               		.loc 1 119 0
 642 0262 92EE      		ldi r25,lo8(-30)
 643 0264 9EBD      		out 0x2e,r25
 644               	.L24:
 120:main.c        **** }
 645               		.loc 1 120 0
 646 0266 0DB4      		in __tmp_reg__,0x2d
 647 0268 07FE      		sbrs __tmp_reg__,7
 648 026a 00C0      		rjmp .L24
 649 026c E0E0      		ldi r30,lo8(srom)
 650 026e F0E0      		ldi r31,hi8(srom)
 651               	.LVL26:
 652               	.L26:
 653               	.LBE403:
 654               	.LBE402:
 655               	.LBB404:
 190:main.c        **** 		spi_send(pgm_read_byte(psrom++));
 656               		.loc 1 190 0
 657 0270 25E5      		ldi r18,lo8(85)
 658 0272 2A95      	1:	dec r18
 659 0274 01F4      		brne 1b
 660 0276 0000      		nop
 661               	.LVL27:
 662               	.LBB405:
 191:main.c        **** 	}
 663               		.loc 1 191 0
 664               	/* #APP */
 665               	 ;  191 "main.c" 1
 666 0278 9491      		lpm r25, Z
 667               		
 668               	 ;  0 "" 2
 669               	.LVL28:
 670               	/* #NOAPP */
 671               	.LBE405:
 672               	.LBB406:
 673               	.LBB407:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 674               		.loc 1 119 0
 675 027a 9EBD      		out 0x2e,r25
 676               	.L25:
 120:main.c        **** }
 677               		.loc 1 120 0
 678 027c 0DB4      		in __tmp_reg__,0x2d
 679 027e 07FE      		sbrs __tmp_reg__,7
 680 0280 00C0      		rjmp .L25
 681               	.LVL29:
 682 0282 3196      		adiw r30,1
 683               	.LVL30:
 684               	.LBE407:
 685               	.LBE406:
 189:main.c        **** 		delay_us(16);
 686               		.loc 1 189 0
 687 0284 30E0      		ldi r19,hi8(srom+4094)
 688 0286 E030      		cpi r30,lo8(srom+4094)
 689 0288 F307      		cpc r31,r19
 690 028a 01F4      		brne .L26
 691               	.LBE404:
 193:main.c        **** 	SS_HIGH;
 692               		.loc 1 193 0
 693 028c 90E6      		ldi r25,lo8(96)
 694 028e 9A95      	1:	dec r25
 695 0290 01F4      		brne 1b
 696               	.LVL31:
 194:main.c        **** 	delay_us(200);
 697               		.loc 1 194 0
 698 0292 289A      		sbi 0x5,0
 195:main.c        **** 
 699               		.loc 1 195 0
 700 0294 EFE1      		ldi r30,lo8(799)
 701 0296 F3E0      		ldi r31,hi8(799)
 702 0298 3197      	1:	sbiw r30,1
 703 029a 01F4      		brne 1b
 704               	.LVL32:
 705 029c 00C0      		rjmp .
 706 029e 0000      		nop
 198:main.c        **** 	spi_write(0x10, 0x00); // Rest mode & independant X/Y DPI disabled
 707               		.loc 1 198 0
 708 02a0 2898      		cbi 0x5,0
 709               	.LVL33:
 710               	.LBB408:
 711               	.LBB409:
 712               	.LBB410:
 713               	.LBB411:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 714               		.loc 1 119 0
 715 02a2 90E9      		ldi r25,lo8(-112)
 716 02a4 9EBD      		out 0x2e,r25
 717               	.LVL34:
 718               	.L27:
 120:main.c        **** }
 719               		.loc 1 120 0
 720 02a6 0DB4      		in __tmp_reg__,0x2d
 721 02a8 07FE      		sbrs __tmp_reg__,7
 722 02aa 00C0      		rjmp .L27
 723               	.LVL35:
 724               	.LBE411:
 725               	.LBE410:
 726               	.LBB412:
 727               	.LBB413:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 728               		.loc 1 119 0
 729 02ac 1EBC      		out 0x2e,__zero_reg__
 730               	.L28:
 120:main.c        **** }
 731               		.loc 1 120 0
 732 02ae 0DB4      		in __tmp_reg__,0x2d
 733 02b0 07FE      		sbrs __tmp_reg__,7
 734 02b2 00C0      		rjmp .L28
 735               	.LBE413:
 736               	.LBE412:
 133:main.c        **** }
 737               		.loc 1 133 0
 738 02b4 EFEC      		ldi r30,lo8(719)
 739 02b6 F2E0      		ldi r31,hi8(719)
 740 02b8 3197      	1:	sbiw r30,1
 741 02ba 01F4      		brne 1b
 742 02bc 00C0      		rjmp .
 743 02be 0000      		nop
 744               	.LVL36:
 745               	.LBE409:
 746               	.LBE408:
 747               	.LBB414:
 748               	.LBB415:
 749               	.LBB416:
 750               	.LBB417:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 751               		.loc 1 119 0
 752 02c0 9DE8      		ldi r25,lo8(-115)
 753 02c2 9EBD      		out 0x2e,r25
 754               	.L29:
 120:main.c        **** }
 755               		.loc 1 120 0
 756 02c4 0DB4      		in __tmp_reg__,0x2d
 757 02c6 07FE      		sbrs __tmp_reg__,7
 758 02c8 00C0      		rjmp .L29
 759               	.LVL37:
 760               	.LBE417:
 761               	.LBE416:
 762               	.LBB418:
 763               	.LBB419:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 764               		.loc 1 119 0
 765 02ca 1EBC      		out 0x2e,__zero_reg__
 766               	.L30:
 120:main.c        **** }
 767               		.loc 1 120 0
 768 02cc 0DB4      		in __tmp_reg__,0x2d
 769 02ce 07FE      		sbrs __tmp_reg__,7
 770 02d0 00C0      		rjmp .L30
 771               	.LBE419:
 772               	.LBE418:
 133:main.c        **** }
 773               		.loc 1 133 0
 774 02d2 EFEC      		ldi r30,lo8(719)
 775 02d4 F2E0      		ldi r31,hi8(719)
 776 02d6 3197      	1:	sbiw r30,1
 777 02d8 01F4      		brne 1b
 778 02da 00C0      		rjmp .
 779 02dc 0000      		nop
 780               	.LVL38:
 781               	.LBE415:
 782               	.LBE414:
 783               	.LBB420:
 784               	.LBB421:
 785               	.LBB422:
 786               	.LBB423:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 787               		.loc 1 119 0
 788 02de 91E9      		ldi r25,lo8(-111)
 789 02e0 9EBD      		out 0x2e,r25
 790               	.L31:
 120:main.c        **** }
 791               		.loc 1 120 0
 792 02e2 0DB4      		in __tmp_reg__,0x2d
 793 02e4 07FE      		sbrs __tmp_reg__,7
 794 02e6 00C0      		rjmp .L31
 795               	.LVL39:
 796               	.LBE423:
 797               	.LBE422:
 798               	.LBB424:
 799               	.LBB425:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 800               		.loc 1 119 0
 801 02e8 1EBC      		out 0x2e,__zero_reg__
 802               	.L32:
 120:main.c        **** }
 803               		.loc 1 120 0
 804 02ea 0DB4      		in __tmp_reg__,0x2d
 805 02ec 07FE      		sbrs __tmp_reg__,7
 806 02ee 00C0      		rjmp .L32
 807               	.LBE425:
 808               	.LBE424:
 133:main.c        **** }
 809               		.loc 1 133 0
 810 02f0 EFEC      		ldi r30,lo8(719)
 811 02f2 F2E0      		ldi r31,hi8(719)
 812 02f4 3197      	1:	sbiw r30,1
 813 02f6 01F4      		brne 1b
 814 02f8 00C0      		rjmp .
 815 02fa 0000      		nop
 816               	.LVL40:
 817               	.LBE421:
 818               	.LBE420:
 819               	.LBB426:
 820               	.LBB427:
 821               	.LBB428:
 822               	.LBB429:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 823               		.loc 1 119 0
 824 02fc 9FE8      		ldi r25,lo8(-113)
 825 02fe 9EBD      		out 0x2e,r25
 826               	.L33:
 120:main.c        **** }
 827               		.loc 1 120 0
 828 0300 0DB4      		in __tmp_reg__,0x2d
 829 0302 07FE      		sbrs __tmp_reg__,7
 830 0304 00C0      		rjmp .L33
 831               	.LVL41:
 832               	.LBE429:
 833               	.LBE428:
 834               	.LBB430:
 835               	.LBB431:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 836               		.loc 1 119 0
 837 0306 8EBD      		out 0x2e,r24
 838               	.L34:
 120:main.c        **** }
 839               		.loc 1 120 0
 840 0308 0DB4      		in __tmp_reg__,0x2d
 841 030a 07FE      		sbrs __tmp_reg__,7
 842 030c 00C0      		rjmp .L34
 843               	.LBE431:
 844               	.LBE430:
 133:main.c        **** }
 845               		.loc 1 133 0
 846 030e 8FEC      		ldi r24,lo8(719)
 847 0310 92E0      		ldi r25,hi8(719)
 848 0312 0197      	1:	sbiw r24,1
 849 0314 01F4      		brne 1b
 850               	.LVL42:
 851 0316 00C0      		rjmp .
 852 0318 0000      		nop
 853               	.LVL43:
 854               	.LBE427:
 855               	.LBE426:
 856               	.LBB432:
 857               	.LBB433:
 858               	.LBB434:
 859               	.LBB435:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 860               		.loc 1 119 0
 861 031a 83EE      		ldi r24,lo8(-29)
 862 031c 8EBD      		out 0x2e,r24
 863               	.LVL44:
 864               	.L35:
 120:main.c        **** }
 865               		.loc 1 120 0
 866 031e 0DB4      		in __tmp_reg__,0x2d
 867 0320 07FE      		sbrs __tmp_reg__,7
 868 0322 00C0      		rjmp .L35
 869               	.LVL45:
 870               	.LBE435:
 871               	.LBE434:
 872               	.LBB436:
 873               	.LBB437:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 874               		.loc 1 119 0
 875 0324 82E0      		ldi r24,lo8(2)
 876 0326 8EBD      		out 0x2e,r24
 877               	.L36:
 120:main.c        **** }
 878               		.loc 1 120 0
 879 0328 0DB4      		in __tmp_reg__,0x2d
 880 032a 07FE      		sbrs __tmp_reg__,7
 881 032c 00C0      		rjmp .L36
 882               	.LBE437:
 883               	.LBE436:
 133:main.c        **** }
 884               		.loc 1 133 0
 885 032e EFEC      		ldi r30,lo8(719)
 886 0330 F2E0      		ldi r31,hi8(719)
 887 0332 3197      	1:	sbiw r30,1
 888 0334 01F4      		brne 1b
 889 0336 00C0      		rjmp .
 890 0338 0000      		nop
 891               	.LVL46:
 892               	.LBE433:
 893               	.LBE432:
 894               	.LBB438:
 895               	.LBB439:
 896               	.LBB440:
 897               	.LBB441:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 898               		.loc 1 119 0
 899 033a 8BEA      		ldi r24,lo8(-85)
 900 033c 8EBD      		out 0x2e,r24
 901               	.L37:
 120:main.c        **** }
 902               		.loc 1 120 0
 903 033e 0DB4      		in __tmp_reg__,0x2d
 904 0340 07FE      		sbrs __tmp_reg__,7
 905 0342 00C0      		rjmp .L37
 906               	.LVL47:
 907               	.LBE441:
 908               	.LBE440:
 909               	.LBB442:
 910               	.LBB443:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 911               		.loc 1 119 0
 912 0344 80E1      		ldi r24,lo8(16)
 913 0346 8EBD      		out 0x2e,r24
 914               	.L38:
 120:main.c        **** }
 915               		.loc 1 120 0
 916 0348 0DB4      		in __tmp_reg__,0x2d
 917 034a 07FE      		sbrs __tmp_reg__,7
 918 034c 00C0      		rjmp .L38
 919               	.LBE443:
 920               	.LBE442:
 133:main.c        **** }
 921               		.loc 1 133 0
 922 034e 8FEC      		ldi r24,lo8(719)
 923 0350 92E0      		ldi r25,hi8(719)
 924 0352 0197      	1:	sbiw r24,1
 925 0354 01F4      		brne 1b
 926 0356 00C0      		rjmp .
 927 0358 0000      		nop
 928               	.LVL48:
 929               	.LBE439:
 930               	.LBE438:
 931               	.LBB444:
 932               	.LBB445:
 933               	.LBB446:
 934               	.LBB447:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 935               		.loc 1 119 0
 936 035a 8CEA      		ldi r24,lo8(-84)
 937 035c 8EBD      		out 0x2e,r24
 938               	.L39:
 120:main.c        **** }
 939               		.loc 1 120 0
 940 035e 0DB4      		in __tmp_reg__,0x2d
 941 0360 07FE      		sbrs __tmp_reg__,7
 942 0362 00C0      		rjmp .L39
 943               	.LVL49:
 944               	.LBE447:
 945               	.LBE446:
 946               	.LBB448:
 947               	.LBB449:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 948               		.loc 1 119 0
 949 0364 8AE0      		ldi r24,lo8(10)
 950 0366 8EBD      		out 0x2e,r24
 951               	.L40:
 120:main.c        **** }
 952               		.loc 1 120 0
 953 0368 0DB4      		in __tmp_reg__,0x2d
 954 036a 07FE      		sbrs __tmp_reg__,7
 955 036c 00C0      		rjmp .L40
 956               	.LBE449:
 957               	.LBE448:
 133:main.c        **** }
 958               		.loc 1 133 0
 959 036e EFEC      		ldi r30,lo8(719)
 960 0370 F2E0      		ldi r31,hi8(719)
 961 0372 3197      	1:	sbiw r30,1
 962 0374 01F4      		brne 1b
 963 0376 00C0      		rjmp .
 964 0378 0000      		nop
 965               	.LBE445:
 966               	.LBE444:
 207:main.c        **** 	delay_us(200);
 967               		.loc 1 207 0
 968 037a 289A      		sbi 0x5,0
 208:main.c        **** }
 969               		.loc 1 208 0
 970 037c 8FE1      		ldi r24,lo8(799)
 971 037e 93E0      		ldi r25,hi8(799)
 972 0380 0197      	1:	sbiw r24,1
 973 0382 01F4      		brne 1b
 974 0384 00C0      		rjmp .
 975 0386 0000      		nop
 976               	.LVL50:
 977               	.LBE331:
 978               	.LBE330:
 979               	.LBB450:
 980               	.LBB451:
 213:main.c        **** 	spi_write(0x42, angle); // Angle snapping: 0x00 = off, 0x80 = on
 981               		.loc 1 213 0
 982 0388 2898      		cbi 0x5,0
 983               	.LVL51:
 984               	.LBB452:
 985               	.LBB453:
 986               	.LBB454:
 987               	.LBB455:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 988               		.loc 1 119 0
 989 038a 82EC      		ldi r24,lo8(-62)
 990 038c 8EBD      		out 0x2e,r24
 991               	.L41:
 120:main.c        **** }
 992               		.loc 1 120 0
 993 038e 0DB4      		in __tmp_reg__,0x2d
 994 0390 07FE      		sbrs __tmp_reg__,7
 995 0392 00C0      		rjmp .L41
 996               	.LVL52:
 997               	.LBE455:
 998               	.LBE454:
 999               	.LBB456:
 1000               	.LBB457:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1001               		.loc 1 119 0
 1002 0394 1EBC      		out 0x2e,__zero_reg__
 1003               	.L42:
 120:main.c        **** }
 1004               		.loc 1 120 0
 1005 0396 0DB4      		in __tmp_reg__,0x2d
 1006 0398 07FE      		sbrs __tmp_reg__,7
 1007 039a 00C0      		rjmp .L42
 1008               	.LBE457:
 1009               	.LBE456:
 133:main.c        **** }
 1010               		.loc 1 133 0
 1011 039c EFEC      		ldi r30,lo8(719)
 1012 039e F2E0      		ldi r31,hi8(719)
 1013 03a0 3197      	1:	sbiw r30,1
 1014 03a2 01F4      		brne 1b
 1015 03a4 00C0      		rjmp .
 1016 03a6 0000      		nop
 1017               	.LBE453:
 1018               	.LBE452:
 215:main.c        **** }
 1019               		.loc 1 215 0
 1020 03a8 289A      		sbi 0x5,0
 1021               	.LBE451:
 1022               	.LBE450:
 298:main.c        **** 		// dpi settings
 299:main.c        **** 		dpi_index = 2;
 300:main.c        **** 	}	
 301:main.c        **** 	
 302:main.c        **** 	// Init 3360
 303:main.c        **** 	pmw3360_init(dpis[dpi_index]);
 304:main.c        **** 
 305:main.c        **** 	// Init angle snapping
 306:main.c        **** 	angle_init(angles[angle_index]);
 307:main.c        **** 	
 308:main.c        **** 	usb_init();
 1023               		.loc 1 308 0
 1024 03aa 0E94 0000 		call usb_init
 1025               	.LVL53:
 1026               	.L43:
 309:main.c        **** 	while (!usb_configured());
 1027               		.loc 1 309 0 discriminator 1
 1028 03ae 0E94 0000 		call usb_configured
 1029               	.LVL54:
 1030 03b2 8823      		tst r24
 1031 03b4 01F0      		breq .L43
 310:main.c        **** 	delay_ms(456); // arbitrary
 1032               		.loc 1 310 0
 1033 03b6 FFEF      		ldi r31,lo8(1459199)
 1034 03b8 23E4      		ldi r18,hi8(1459199)
 1035 03ba 36E1      		ldi r19,hlo8(1459199)
 1036 03bc F150      	1:	subi r31,1
 1037 03be 2040      		sbci r18,0
 1038 03c0 3040      		sbci r19,0
 1039 03c2 01F4      		brne 1b
 1040 03c4 00C0      		rjmp .
 1041 03c6 0000      		nop
 311:main.c        **** 
 312:main.c        **** 	// set up timer0 to set OCF0A in TIFR0 every 125us
 313:main.c        **** 	TCCR0A = 0x02; // CTC
 1042               		.loc 1 313 0
 1043 03c8 82E0      		ldi r24,lo8(2)
 1044 03ca 84BD      		out 0x24,r24
 314:main.c        **** 	TCCR0B = 0x02; // prescaler 1/8 = 1us period
 1045               		.loc 1 314 0
 1046 03cc 85BD      		out 0x25,r24
 315:main.c        **** 	OCR0A = 124; // = 125 - 1
 1047               		.loc 1 315 0
 1048 03ce 8CE7      		ldi r24,lo8(124)
 1049 03d0 87BD      		out 0x27,r24
 316:main.c        **** 
 317:main.c        **** 	cli();
 1050               		.loc 1 317 0
 1051               	/* #APP */
 1052               	 ;  317 "main.c" 1
 1053 03d2 F894      		cli
 1054               	 ;  0 "" 2
 233:main.c        **** 	// RGB Timers
 1055               		.loc 1 233 0
 1056               	/* #NOAPP */
 1057 03d4 1886      		std Y+8,__zero_reg__
 1058 03d6 1F82      		std Y+7,__zero_reg__
 1059 03d8 1B82      		std Y+3,__zero_reg__
 1060 03da 1C82      		std Y+4,__zero_reg__
 1061 03dc 1D82      		std Y+5,__zero_reg__
 1062 03de 1E82      		std Y+6,__zero_reg__
 271:main.c        **** 
 1063               		.loc 1 271 0
 1064 03e0 00E0      		ldi r16,0
 270:main.c        **** 	int8_t whl = 0; // scrolls since previous usb transmission
 1065               		.loc 1 270 0
 1066 03e2 1986      		std Y+9,__zero_reg__
 269:main.c        **** 	uint8_t whl_prev_diff = 0; // what A was the last time A != B
 1067               		.loc 1 269 0
 1068 03e4 1A86      		std Y+10,__zero_reg__
 261:main.c        **** 	// if dpi button is pressed when plugging in, jump to bootloader
 1069               		.loc 1 261 0
 1070 03e6 412C      		mov r4,__zero_reg__
 259:main.c        **** 	// previously transmitted button state
 1071               		.loc 1 259 0
 1072 03e8 10E0      		ldi r17,0
 250:main.c        **** 	// Profiles Intitial Values
 1073               		.loc 1 250 0
 1074 03ea 92E0      		ldi r25,lo8(2)
 1075 03ec 9983      		std Y+1,r25
 238:main.c        **** 	// RGB Brightness
 1076               		.loc 1 238 0
 1077 03ee 712C      		mov r7,__zero_reg__
 237:main.c        **** 	uint8_t led_b_timer = 0; // Blue LED Timer initial value
 1078               		.loc 1 237 0
 1079 03f0 812C      		mov r8,__zero_reg__
 236:main.c        **** 	uint8_t led_g_timer = 0; // Green LED Timer initial value
 1080               		.loc 1 236 0
 1081 03f2 912C      		mov r9,__zero_reg__
 1082               	.LBB458:
 1083               	.LBB459:
 1084 03f4 E42C      		mov r14,r4
 1085               	.LVL55:
 1086 03f6 462C      		mov r4,r6
 1087 03f8 6F2C      		mov r6,r15
 1088               	.LVL56:
 1089               	.L89:
 1090               	.LBE459:
 318:main.c        **** 	while (1) {
 319:main.c        **** 		for (uint8_t i = 0; i < 8; i++) {
 1091               		.loc 1 319 0
 1092 03fa F12C      		mov r15,__zero_reg__
 1093 03fc FC86      		std Y+12,r15
 1094 03fe FE2C      		mov r15,r14
 1095               	.LVL57:
 1096               	.LBB482:
 320:main.c        **** 		// synchronization to usb frames and 125us intervals
 321:main.c        **** 			// polling interrupt flags gives 5 clock cycles or so of
 322:main.c        **** 			// jitter. possible to eliminate by going into sleep
 323:main.c        **** 			// mode and waking up using interrupts, but whatever.
 324:main.c        **** 			if (i == 0) {
 1097               		.loc 1 324 0
 1098 0400 EC85      		ldd r30,Y+12
 1099 0402 EE23      		tst r30
 1100 0404 01F4      		brne .+2
 1101 0406 00C0      		rjmp .L217
 1102               	.LVL58:
 1103               	.L208:
 1104 0408 8C85      		ldd r24,Y+12
 1105               	.L187:
 325:main.c        **** 				// sync to usb frames (1ms)
 326:main.c        **** 				UDINT &= ~(1<<SOFI);
 327:main.c        **** 				while(!(UDINT & (1<<SOFI)));
 328:main.c        **** 				// reset prescaler phase, not really necessary
 329:main.c        **** 				GTCCR |= (1<<PSRSYNC);
 330:main.c        **** 				TCNT0 = 0;
 331:main.c        **** 			} else {
 332:main.c        **** 				// sync to 125us intervals using timer0
 333:main.c        **** 				while (!(TIFR0 & (1<<OCF0A)));
 1106               		.loc 1 333 0 discriminator 1
 1107 040a A99B      		sbis 0x15,1
 1108 040c 00C0      		rjmp .L187
 1109 040e 8C87      		std Y+12,r24
 334:main.c        **** 			}
 335:main.c        **** 			TIFR0 |= (1<<OCF0A); // 0CF0A is cleared by writing 1
 1110               		.loc 1 335 0
 1111 0410 A99A      		sbi 0x15,1
 336:main.c        **** 		
 337:main.c        **** 			// RGB ------------------------------
 338:main.c        **** 			
 339:main.c        **** 			// Colours
 340:main.c        **** 			// Brightness values 0-255. When adding new colours here, add their number to led_colours[] and 
 341:main.c        **** 			// White
 342:main.c        **** 			if (led_colour == 1) {
 343:main.c        **** 				led_r_value = 180;
 344:main.c        **** 				led_g_value = 255;
 345:main.c        **** 				led_b_value = 255;
 346:main.c        **** 			}
 347:main.c        **** 			// Red
 348:main.c        **** 			if (led_colour == 2) {
 1112               		.loc 1 348 0
 1113 0412 2981      		ldd r18,Y+1
 1114 0414 2230      		cpi r18,lo8(2)
 1115 0416 01F4      		brne .+2
 1116 0418 00C0      		rjmp .L98
 1117               	.LVL59:
 1118               	.L227:
 349:main.c        **** 				led_r_value = 255;
 350:main.c        **** 				led_g_value = 0;
 351:main.c        **** 				led_b_value = 0;
 352:main.c        **** 			}
 353:main.c        **** 			// Pink
 354:main.c        **** 			if (led_colour == 3) {
 1119               		.loc 1 354 0
 1120 041a 2330      		cpi r18,lo8(3)
 1121 041c 01F4      		brne .+2
 1122 041e 00C0      		rjmp .L99
 355:main.c        **** 				led_r_value = 255;
 356:main.c        **** 				led_g_value = 0;
 357:main.c        **** 				led_b_value = 60;
 358:main.c        **** 			}
 359:main.c        **** 			// Magenta
 360:main.c        **** 			if (led_colour == 4) {
 1123               		.loc 1 360 0
 1124 0420 2430      		cpi r18,lo8(4)
 1125 0422 01F0      		breq .+2
 1126 0424 00C0      		rjmp .L218
 361:main.c        **** 				led_r_value = 255;
 362:main.c        **** 				led_g_value = 0;
 363:main.c        **** 				led_b_value = 255;
 1127               		.loc 1 363 0
 1128 0426 8FEF      		ldi r24,lo8(-1)
 1129 0428 8983      		std Y+1,r24
 1130               	.L48:
 1131               	.LVL60:
 1132 042a 60E0      		ldi r22,0
 1133 042c 70E0      		ldi r23,0
 1134 042e 88E7      		ldi r24,lo8(120)
 1135 0430 91E4      		ldi r25,lo8(65)
 1136 0432 0E94 0000 		call __fixunssfsi
 1137               	.LVL61:
 1138 0436 70E0      		ldi r23,0
 1139 0438 80E0      		ldi r24,0
 1140 043a 90E0      		ldi r25,0
 1141 043c 0E94 0000 		call __floatsisf
 1142               	.LVL62:
 1143 0440 20E0      		ldi r18,0
 1144 0442 30E0      		ldi r19,0
 1145 0444 40E0      		ldi r20,0
 1146 0446 5FE3      		ldi r21,lo8(63)
 1147 0448 0E94 0000 		call __addsf3
 1148               	.LVL63:
 1149 044c 0E94 0000 		call __fixunssfsi
 1150               	.LVL64:
 1151 0450 E62E      		mov r14,r22
 1152 0452 60E0      		ldi r22,0
 1153 0454 70E0      		ldi r23,0
 1154 0456 80E0      		ldi r24,0
 1155 0458 9FE3      		ldi r25,lo8(63)
 1156 045a 0E94 0000 		call __fixunssfsi
 1157               	.LVL65:
 1158 045e 70E0      		ldi r23,0
 1159 0460 80E0      		ldi r24,0
 1160 0462 90E0      		ldi r25,0
 1161 0464 0E94 0000 		call __floatsisf
 1162               	.LVL66:
 1163 0468 20E0      		ldi r18,0
 1164 046a 30E0      		ldi r19,0
 1165 046c 40E0      		ldi r20,0
 1166 046e 5FE3      		ldi r21,lo8(63)
 1167 0470 0E94 0000 		call __addsf3
 1168               	.LVL67:
 1169 0474 0E94 0000 		call __fixunssfsi
 1170               	.LVL68:
 1171 0478 6B87      		std Y+11,r22
 1172 047a 6981      		ldd r22,Y+1
 1173 047c 6295      		swap r22
 1174 047e 6F70      		andi r22,lo8(15)
 1175 0480 70E0      		ldi r23,0
 1176 0482 80E0      		ldi r24,0
 1177 0484 90E0      		ldi r25,0
 1178 0486 0E94 0000 		call __floatsisf
 1179               	.LVL69:
 1180 048a 20E0      		ldi r18,0
 1181 048c 30E0      		ldi r19,0
 1182 048e 40E0      		ldi r20,0
 1183 0490 5FE3      		ldi r21,lo8(63)
 1184 0492 0E94 0000 		call __addsf3
 1185               	.LVL70:
 1186 0496 0E94 0000 		call __fixunssfsi
 1187               	.LVL71:
 1188 049a 70E0      		ldi r23,0
 1189 049c 80E0      		ldi r24,0
 1190 049e 90E0      		ldi r25,0
 1191 04a0 0E94 0000 		call __floatsisf
 1192               	.LVL72:
 1193 04a4 20E0      		ldi r18,0
 1194 04a6 30E0      		ldi r19,0
 1195 04a8 40E0      		ldi r20,0
 1196 04aa 5FE3      		ldi r21,lo8(63)
 1197 04ac 0E94 0000 		call __addsf3
 1198               	.LVL73:
 1199 04b0 0E94 0000 		call __fixunssfsi
 1200               	.LVL74:
 1201 04b4 21E0      		ldi r18,lo8(1)
 1202 04b6 2E0D      		add r18,r14
 1203 04b8 9B85      		ldd r25,Y+11
 1204 04ba 9F5F      		subi r25,lo8(-(1))
 1205 04bc 81E0      		ldi r24,lo8(1)
 1206 04be 860F      		add r24,r22
 1207               	.LVL75:
 364:main.c        **** 			}
 365:main.c        **** 			// Violet
 366:main.c        **** 			if (led_colour == 5) {
 367:main.c        **** 				led_r_value = 100;
 368:main.c        **** 				led_g_value = 0;
 369:main.c        **** 				led_b_value = 255;
 370:main.c        **** 			}
 371:main.c        **** 			// Blue
 372:main.c        **** 			if (led_colour == 6) {
 373:main.c        **** 				led_r_value = 0;
 374:main.c        **** 				led_g_value = 0;
 375:main.c        **** 				led_b_value = 255;
 376:main.c        **** 			}
 377:main.c        **** 			// Sky Blue
 378:main.c        **** 			if (led_colour == 7) {
 379:main.c        **** 				led_r_value = 0;
 380:main.c        **** 				led_g_value = 90;
 381:main.c        **** 				led_b_value = 255;
 382:main.c        **** 			}
 383:main.c        **** 			// Cyan
 384:main.c        **** 			if (led_colour == 8) {
 385:main.c        **** 				led_r_value = 0;
 386:main.c        **** 				led_g_value = 255;
 387:main.c        **** 				led_b_value = 255;
 388:main.c        **** 			}
 389:main.c        **** 			// Green
 390:main.c        **** 			if (led_colour == 9) {
 391:main.c        **** 				led_r_value = 0;
 392:main.c        **** 				led_g_value = 255;
 393:main.c        **** 				led_b_value = 0;
 394:main.c        **** 			}
 395:main.c        **** 			// Toxic Green
 396:main.c        **** 			if (led_colour == 10) {
 397:main.c        **** 				led_r_value = 0;
 398:main.c        **** 				led_g_value = 255;
 399:main.c        **** 				led_b_value = 64;
 400:main.c        **** 			}
 401:main.c        **** 			// Yellow
 402:main.c        **** 			if (led_colour == 11) {
 403:main.c        **** 				led_r_value = 200;
 404:main.c        **** 				led_g_value = 255;
 405:main.c        **** 				led_b_value = 0;
 406:main.c        **** 			}
 407:main.c        **** 			// Orange
 408:main.c        **** 			if (led_colour == 12) {
 409:main.c        **** 				led_r_value = 255;
 410:main.c        **** 				led_g_value = 100;
 411:main.c        **** 				led_b_value = 0;
 412:main.c        **** 			}
 413:main.c        **** 			
 414:main.c        **** 			
 415:main.c        **** 			
 416:main.c        **** 			// Convert RGB values from x/255 to same percentage as max timer value
 417:main.c        **** 			uint8_t led_r_intensity = ((led_r_value / led_max_timer) + 0.5); 
 418:main.c        **** 			uint8_t led_g_intensity = ((led_g_value / led_max_timer) + 0.5);
 419:main.c        **** 			uint8_t led_b_intensity = ((led_b_value / led_max_timer) + 0.5);
 420:main.c        **** 			
 421:main.c        **** 			// // RGB Brightness * individual LED brightness
 422:main.c        **** 			uint8_t led_r_on = ((led_rgb_brightness * led_r_intensity) + 0.5); 
 423:main.c        **** 			uint8_t led_g_on = ((led_rgb_brightness * led_g_intensity) + 0.5);
 424:main.c        **** 			uint8_t led_b_on = ((led_rgb_brightness * led_b_intensity) + 0.5);
 425:main.c        **** 			
 426:main.c        **** 			// Calculates number to turn off LED
 427:main.c        **** 			uint8_t led_r_off = (led_r_on + 1); 
 428:main.c        **** 			uint8_t led_g_off = (led_g_on + 1);
 429:main.c        **** 			uint8_t led_b_off = (led_b_on + 1);
 430:main.c        **** 			
 431:main.c        **** 			// Red LED PWM
 432:main.c        **** 			// Turn off LED if led_x_on is 0
 433:main.c        **** 			if (led_r_on == 0) {
 1208               		.loc 1 433 0
 1209 04c0 EE20      		tst r14
 1210 04c2 01F4      		brne .+2
 1211 04c4 00C0      		rjmp .L209
 1212               	.LVL76:
 1213               	.L50:
 434:main.c        **** 				PORTB |= (1<<5);
 435:main.c        **** 			}
 436:main.c        **** 			// If led_x_on is greater than zero, enable the timer
 437:main.c        **** 			if (led_r_on > 0) {
 438:main.c        **** 				// LED Timer
 439:main.c        **** 				led_r_timer++;
 1214               		.loc 1 439 0
 1215 04c6 9394      		inc r9
 1216               	.LVL77:
 440:main.c        **** 				// Reset Timer
 441:main.c        **** 				if (led_r_timer == led_max_timer) {
 1217               		.loc 1 441 0
 1218 04c8 F0E1      		ldi r31,lo8(16)
 1219 04ca 9F16      		cp r9,r31
 1220 04cc 01F4      		brne .+2
 1221 04ce 00C0      		rjmp .L219
 442:main.c        **** 					led_r_timer = 0;
 443:main.c        **** 				}
 444:main.c        **** 				// Turn on LED at led_x_on value
 445:main.c        **** 				if (led_r_timer <= led_r_on) {
 1222               		.loc 1 445 0
 1223 04d0 E914      		cp r14,r9
 1224 04d2 00F0      		brlo .+2
 1225 04d4 00C0      		rjmp .L90
 1226               	.L52:
 446:main.c        **** 					PORTB &= ~(1<<5);
 447:main.c        **** 				}
 448:main.c        **** 				// Turn off LED at led_x_off value
 449:main.c        **** 				if (led_r_timer >= led_r_off) {
 1227               		.loc 1 449 0
 1228 04d6 9216      		cp r9,r18
 1229 04d8 00F0      		brlo .+2
 1230 04da 00C0      		rjmp .L209
 1231               	.L51:
 450:main.c        **** 					PORTB |= (1<<5);
 451:main.c        **** 				}
 452:main.c        **** 			}
 453:main.c        **** 			
 454:main.c        **** 			// Green LED PWM
 455:main.c        **** 			// Turn off LED if led_x_on is 0
 456:main.c        **** 			if (led_g_on == 0) {
 1232               		.loc 1 456 0
 1233 04dc EB85      		ldd r30,Y+11
 1234 04de EE23      		tst r30
 1235 04e0 01F4      		brne .+2
 1236 04e2 00C0      		rjmp .L210
 457:main.c        **** 				PORTB |= (1<<6);
 458:main.c        **** 			}
 459:main.c        **** 			// If led_x_on is greater than zero, enable the timer
 460:main.c        **** 			if (led_g_on > 0) {
 461:main.c        **** 				// LED Timer
 462:main.c        **** 				led_g_timer++;
 1237               		.loc 1 462 0
 1238 04e4 8394      		inc r8
 1239               	.LVL78:
 463:main.c        **** 				// Reset Timer
 464:main.c        **** 				if (led_g_timer == led_max_timer) {
 1240               		.loc 1 464 0
 1241 04e6 20E1      		ldi r18,lo8(16)
 1242               	.LVL79:
 1243 04e8 8216      		cp r8,r18
 1244 04ea 01F4      		brne .+2
 1245 04ec 00C0      		rjmp .L220
 465:main.c        **** 					led_g_timer = 0;
 466:main.c        **** 				}
 467:main.c        **** 				// Turn on LED at led_x_on value
 468:main.c        **** 				if (led_g_timer <= led_g_on) {
 1246               		.loc 1 468 0
 1247 04ee FB85      		ldd r31,Y+11
 1248 04f0 F815      		cp r31,r8
 1249 04f2 00F0      		brlo .+2
 1250 04f4 00C0      		rjmp .L92
 1251               	.L55:
 469:main.c        **** 					PORTB &= ~(1<<6);
 470:main.c        **** 				}
 471:main.c        **** 				// Turn off LED at led_x_off value
 472:main.c        **** 				if (led_g_timer >= led_g_off) {
 1252               		.loc 1 472 0
 1253 04f6 8916      		cp r8,r25
 1254 04f8 00F0      		brlo .+2
 1255 04fa 00C0      		rjmp .L210
 1256               	.L54:
 473:main.c        **** 					PORTB |= (1<<6);
 474:main.c        **** 				}
 475:main.c        **** 			}
 476:main.c        **** 			
 477:main.c        **** 			// Blue LED PWM
 478:main.c        **** 			// Turn off LED if led_x_on is 0
 479:main.c        **** 			if (led_b_on == 0) {
 1257               		.loc 1 479 0
 1258 04fc 6623      		tst r22
 1259 04fe 01F4      		brne .+2
 1260 0500 00C0      		rjmp .L211
 480:main.c        **** 				PORTD |= (1<<7);
 481:main.c        **** 			}
 482:main.c        **** 			// If led_x_on is greater than zero, enable the timer
 483:main.c        **** 			if (led_b_on > 0) {
 484:main.c        **** 				// LED Timer
 485:main.c        **** 				led_b_timer++;
 1261               		.loc 1 485 0
 1262 0502 7394      		inc r7
 1263               	.LVL80:
 486:main.c        **** 				// Reset Timer
 487:main.c        **** 				if (led_b_timer == led_max_timer) {
 1264               		.loc 1 487 0
 1265 0504 30E1      		ldi r19,lo8(16)
 1266 0506 7316      		cp r7,r19
 1267 0508 01F4      		brne .+2
 1268 050a 00C0      		rjmp .L221
 488:main.c        **** 					led_b_timer = 0;
 489:main.c        **** 				}
 490:main.c        **** 				// Turn on LED at led_x_on value
 491:main.c        **** 				if (led_b_timer <= led_b_on) {
 1269               		.loc 1 491 0
 1270 050c 6715      		cp r22,r7
 1271 050e 00F0      		brlo .+2
 1272 0510 00C0      		rjmp .L94
 1273               	.L58:
 492:main.c        **** 					PORTD &= ~(1<<7);
 493:main.c        **** 				}
 494:main.c        **** 				// Turn off LED at led_x_off value
 495:main.c        **** 				if (led_b_timer >= led_b_off) {
 1274               		.loc 1 495 0
 1275 0512 7816      		cp r7,r24
 1276 0514 00F0      		brlo .+2
 1277 0516 00C0      		rjmp .L211
 1278               	.L57:
 496:main.c        **** 					PORTD |= (1<<7);
 497:main.c        **** 				}
 498:main.c        **** 			}
 499:main.c        **** 			
 500:main.c        **** 		// sensor stuff
 501:main.c        **** 			union motion_data _x, _y;
 502:main.c        **** 			SS_LOW;
 1279               		.loc 1 502 0
 1280 0518 2898      		cbi 0x5,0
 1281               	.LVL81:
 1282               	.LBB460:
 1283               	.LBB461:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1284               		.loc 1 119 0
 1285 051a 20E5      		ldi r18,lo8(80)
 1286 051c 2EBD      		out 0x2e,r18
 1287 051e 8C85      		ldd r24,Y+12
 1288               	.LVL82:
 1289               	.L59:
 120:main.c        **** }
 1290               		.loc 1 120 0
 1291 0520 0DB4      		in __tmp_reg__,0x2d
 1292 0522 07FE      		sbrs __tmp_reg__,7
 1293 0524 00C0      		rjmp .L59
 1294 0526 8C87      		std Y+12,r24
 1295               	.LBE461:
 1296               	.LBE460:
 503:main.c        **** 			spi_send(0x50);
 504:main.c        **** 			delay_us(35);
 1297               		.loc 1 504 0
 1298 0528 3AEB      		ldi r19,lo8(-70)
 1299 052a 3A95      	1:	dec r19
 1300 052c 01F4      		brne 1b
 1301 052e 00C0      		rjmp .
 1302               	.LVL83:
 1303               	.LBB462:
 1304               	.LBB463:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1305               		.loc 1 119 0
 1306 0530 1EBC      		out 0x2e,__zero_reg__
 1307 0532 8C85      		ldd r24,Y+12
 1308               	.L60:
 120:main.c        **** }
 1309               		.loc 1 120 0
 1310 0534 0DB4      		in __tmp_reg__,0x2d
 1311 0536 07FE      		sbrs __tmp_reg__,7
 1312 0538 00C0      		rjmp .L60
 1313 053a 8C87      		std Y+12,r24
 1314               	.LVL84:
 1315               	.LBE463:
 1316               	.LBE462:
 1317               	.LBB464:
 1318               	.LBB465:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1319               		.loc 1 119 0
 1320 053c 1EBC      		out 0x2e,__zero_reg__
 1321 053e 8C85      		ldd r24,Y+12
 1322               	.L61:
 120:main.c        **** }
 1323               		.loc 1 120 0
 1324 0540 0DB4      		in __tmp_reg__,0x2d
 1325 0542 07FE      		sbrs __tmp_reg__,7
 1326 0544 00C0      		rjmp .L61
 1327 0546 8C87      		std Y+12,r24
 1328               	.LVL85:
 1329               	.LBE465:
 1330               	.LBE464:
 1331               	.LBB466:
 1332               	.LBB467:
 1333               	.LBB468:
 1334               	.LBB469:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1335               		.loc 1 119 0
 1336 0548 1EBC      		out 0x2e,__zero_reg__
 1337 054a 8C85      		ldd r24,Y+12
 1338               	.L62:
 120:main.c        **** }
 1339               		.loc 1 120 0
 1340 054c 0DB4      		in __tmp_reg__,0x2d
 1341 054e 07FE      		sbrs __tmp_reg__,7
 1342 0550 00C0      		rjmp .L62
 1343 0552 8C87      		std Y+12,r24
 1344               	.LBE469:
 1345               	.LBE468:
 126:main.c        **** }
 1346               		.loc 1 126 0
 1347 0554 8EB5      		in r24,0x2e
 1348               	.LBE467:
 1349               	.LBE466:
 505:main.c        **** 			spi_send(0x00); // motion, not used
 506:main.c        **** 			spi_send(0x00); // observation, not used
 507:main.c        **** 			_x.lo = spi_recv();
 1350               		.loc 1 507 0
 1351 0556 C82E      		mov r12,r24
 1352               	.LVL86:
 1353               	.LBB470:
 1354               	.LBB471:
 1355               	.LBB472:
 1356               	.LBB473:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1357               		.loc 1 119 0
 1358 0558 1EBC      		out 0x2e,__zero_reg__
 1359 055a 8C85      		ldd r24,Y+12
 1360               	.L63:
 120:main.c        **** }
 1361               		.loc 1 120 0
 1362 055c 0DB4      		in __tmp_reg__,0x2d
 1363 055e 07FE      		sbrs __tmp_reg__,7
 1364 0560 00C0      		rjmp .L63
 1365 0562 8C87      		std Y+12,r24
 1366               	.LBE473:
 1367               	.LBE472:
 126:main.c        **** }
 1368               		.loc 1 126 0
 1369 0564 8EB5      		in r24,0x2e
 1370               	.LBE471:
 1371               	.LBE470:
 508:main.c        **** 			_x.hi = spi_recv();
 1372               		.loc 1 508 0
 1373 0566 D82E      		mov r13,r24
 1374               	.LVL87:
 1375               	.LBB474:
 1376               	.LBB475:
 1377               	.LBB476:
 1378               	.LBB477:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1379               		.loc 1 119 0
 1380 0568 1EBC      		out 0x2e,__zero_reg__
 1381 056a 8C85      		ldd r24,Y+12
 1382               	.L64:
 120:main.c        **** }
 1383               		.loc 1 120 0
 1384 056c 0DB4      		in __tmp_reg__,0x2d
 1385 056e 07FE      		sbrs __tmp_reg__,7
 1386 0570 00C0      		rjmp .L64
 1387 0572 8C87      		std Y+12,r24
 1388               	.LBE477:
 1389               	.LBE476:
 126:main.c        **** }
 1390               		.loc 1 126 0
 1391 0574 8EB5      		in r24,0x2e
 1392               	.LBE475:
 1393               	.LBE474:
 509:main.c        **** 			_y.lo = spi_recv();
 1394               		.loc 1 509 0
 1395 0576 A82E      		mov r10,r24
 1396               	.LVL88:
 1397               	.LBB478:
 1398               	.LBB479:
 1399               	.LBB480:
 1400               	.LBB481:
 119:main.c        **** 	while (!(SPSR & (1<<SPIF)));
 1401               		.loc 1 119 0
 1402 0578 1EBC      		out 0x2e,__zero_reg__
 1403 057a 8C85      		ldd r24,Y+12
 1404               	.L65:
 120:main.c        **** }
 1405               		.loc 1 120 0
 1406 057c 0DB4      		in __tmp_reg__,0x2d
 1407 057e 07FE      		sbrs __tmp_reg__,7
 1408 0580 00C0      		rjmp .L65
 1409 0582 8C87      		std Y+12,r24
 1410               	.LBE481:
 1411               	.LBE480:
 126:main.c        **** }
 1412               		.loc 1 126 0
 1413 0584 8EB5      		in r24,0x2e
 1414               	.LBE479:
 1415               	.LBE478:
 510:main.c        **** 			_y.hi = spi_recv();
 1416               		.loc 1 510 0
 1417 0586 B82E      		mov r11,r24
 511:main.c        **** 			SS_HIGH;
 1418               		.loc 1 511 0
 1419 0588 289A      		sbi 0x5,0
 1420               	.LVL89:
 512:main.c        **** 
 513:main.c        **** 		// wheel stuff
 514:main.c        **** 			int8_t _whl = 0; // number of scrolls this 125us
 515:main.c        **** 			const uint8_t whl_a = WHL_A_IS_HIGH;
 1421               		.loc 1 515 0
 1422 058a 86B1      		in r24,0x6
 1423 058c 86FB      		bst r24,6
 1424 058e 8827      		clr r24
 1425 0590 80F9      		bld r24,0
 1426               	.LVL90:
 516:main.c        **** 			const uint8_t whl_b = WHL_B_IS_HIGH;
 1427               		.loc 1 516 0
 1428 0592 96B1      		in r25,0x6
 1429               	.LVL91:
 1430 0594 991F      		rol r25
 1431 0596 9927      		clr r25
 1432 0598 991F      		rol r25
 517:main.c        **** 			// calculate number of scrolls
 518:main.c        **** 			if (whl_a != whl_b)
 1433               		.loc 1 518 0
 1434 059a 8917      		cp r24,r25
 1435 059c 01F4      		brne .+2
 1436 059e 00C0      		rjmp .L222
 1437 05a0 8987      		std Y+9,r24
 514:main.c        **** 			const uint8_t whl_a = WHL_A_IS_HIGH;
 1438               		.loc 1 514 0
 1439 05a2 E12C      		mov r14,__zero_reg__
 1440               	.LVL92:
 1441               	.L66:
 519:main.c        **** 				whl_prev_diff = whl_a;
 520:main.c        **** 			else if (whl_a != whl_prev_same) {
 521:main.c        **** 				_whl = 2 * (whl_a ^ whl_prev_diff) - 1;
 522:main.c        **** 				whl_prev_same = whl_a;
 523:main.c        **** 			}
 524:main.c        **** 
 525:main.c        **** 		// button stuff
 526:main.c        **** 			//high = not pressed, low = pressed
 527:main.c        **** 			//PIND 0 EIFR 0: low, no edges -> is low
 528:main.c        **** 			//PIND 0 EIFR 1: low, edge -> is low
 529:main.c        **** 			//PIND 1 EIFR 0: high, no edges -> always high during last 125us
 530:main.c        **** 			//PIND 1 EIFR 1: high, edge -> low at some point in the last 125us
 531:main.c        **** 			const uint8_t btn_unpressed = PIND & (~(EIFR) | 0b00110000);
 1442               		.loc 1 531 0
 1443 05a4 99B1      		in r25,0x9
 1444 05a6 8CB3      		in r24,0x1c
 1445               	.LVL93:
 1446 05a8 8095      		com r24
 1447 05aa 8063      		ori r24,lo8(48)
 1448 05ac 8923      		and r24,r25
 1449               	.LVL94:
 532:main.c        **** 			EIFR = 0b00001111; // clear EIFR
 1450               		.loc 1 532 0
 1451 05ae EFE0      		ldi r30,lo8(15)
 1452 05b0 ECBB      		out 0x1c,r30
 1453               	.LVL95:
 533:main.c        **** 			// manual loop debouncing for every button
 534:main.c        **** 
 535:main.c        **** 			// button debouncing logic
 536:main.c        **** 			//          >input<           |        >output<
 537:main.c        **** 			//------------------------------------------------------
 538:main.c        **** 			// previous    | current      | unclicked  | current
 539:main.c        **** 			// dbncd state | actual state | time       | dbncd state
 540:main.c        **** 			//-------------+--------------+------------+------------
 541:main.c        **** 			//    btn_prev |   ~unpressed | btn_time   |   btn_dbncd
 542:main.c        **** 			//-------------+--------------+------------+------------
 543:main.c        **** 			//           0 |            0 |         =0 |          =0
 544:main.c        **** 			//           0 |            1 |         =0 |          =1
 545:main.c        **** 			//           1 |            0 |         ++ | (time < DEBOUNCE_TIME)
 546:main.c        **** 			//           1 |            1 |         =0 |          =1
 547:main.c        **** 			uint8_t btn_dbncd = 0x00;
 548:main.c        **** 
 549:main.c        **** 			#define DEBOUNCE(index) \
 550:main.c        **** 			if ((btn_prev & (1<<index)) && (btn_unpressed & (1<<index))) { \
 551:main.c        **** 				btn_time[index]++; \
 552:main.c        **** 				if (btn_time[index] < DEBOUNCE_TIME) \
 553:main.c        **** 					btn_dbncd |= (1<<index); \
 554:main.c        **** 			} else { \
 555:main.c        **** 				btn_time[index] = 0; \
 556:main.c        **** 				btn_dbncd |= (~btn_unpressed) & (1<<index); \
 557:main.c        **** 			}
 558:main.c        **** 
 559:main.c        **** 			DEBOUNCE(0); // L
 1454               		.loc 1 559 0
 1455 05b2 582F      		mov r21,r24
 1456 05b4 5170      		andi r21,lo8(1)
 1457 05b6 60FE      		sbrs r6,0
 1458 05b8 00C0      		rjmp .L68
 1459               		.loc 1 559 0 is_stmt 0 discriminator 1
 1460 05ba 80FF      		sbrs r24,0
 1461 05bc 00C0      		rjmp .L68
 1462               		.loc 1 559 0 discriminator 3
 1463 05be FE81      		ldd r31,Y+6
 1464 05c0 FF5F      		subi r31,lo8(-(1))
 1465 05c2 FE83      		std Y+6,r31
 1466               	.LVL96:
 1467 05c4 51E0      		ldi r21,lo8(1)
 1468 05c6 F032      		cpi r31,lo8(32)
 1469 05c8 00F0      		brlo .L70
 1470 05ca 50E0      		ldi r21,0
 1471               	.LVL97:
 1472               	.L70:
 560:main.c        **** 			DEBOUNCE(1); // R
 1473               		.loc 1 560 0 is_stmt 1
 1474 05cc 61FE      		sbrs r6,1
 1475 05ce 00C0      		rjmp .L71
 1476               		.loc 1 560 0 is_stmt 0 discriminator 1
 1477 05d0 81FF      		sbrs r24,1
 1478 05d2 00C0      		rjmp .L71
 1479               		.loc 1 560 0 discriminator 3
 1480 05d4 3D81      		ldd r19,Y+5
 1481 05d6 3F5F      		subi r19,lo8(-(1))
 1482 05d8 3D83      		std Y+5,r19
 1483               	.LVL98:
 1484 05da 3032      		cpi r19,lo8(32)
 1485 05dc 00F4      		brsh .L72
 1486               		.loc 1 560 0 discriminator 5
 1487 05de 5260      		ori r21,lo8(2)
 1488               	.LVL99:
 1489               	.L72:
 561:main.c        **** 			DEBOUNCE(2); // M
 1490               		.loc 1 561 0 is_stmt 1
 1491 05e0 62FE      		sbrs r6,2
 1492 05e2 00C0      		rjmp .L73
 1493               		.loc 1 561 0 is_stmt 0 discriminator 1
 1494 05e4 82FF      		sbrs r24,2
 1495 05e6 00C0      		rjmp .L73
 1496               		.loc 1 561 0 discriminator 3
 1497 05e8 9C81      		ldd r25,Y+4
 1498 05ea 9F5F      		subi r25,lo8(-(1))
 1499 05ec 9C83      		std Y+4,r25
 1500               	.LVL100:
 1501 05ee 9032      		cpi r25,lo8(32)
 1502 05f0 00F4      		brsh .L74
 1503               		.loc 1 561 0 discriminator 5
 1504 05f2 5460      		ori r21,lo8(4)
 1505               	.LVL101:
 1506               	.L74:
 562:main.c        **** 			DEBOUNCE(3); // RSB
 1507               		.loc 1 562 0 is_stmt 1
 1508 05f4 63FE      		sbrs r6,3
 1509 05f6 00C0      		rjmp .L75
 1510               		.loc 1 562 0 is_stmt 0 discriminator 1
 1511 05f8 83FF      		sbrs r24,3
 1512 05fa 00C0      		rjmp .L75
 1513               		.loc 1 562 0 discriminator 3
 1514 05fc EB81      		ldd r30,Y+3
 1515 05fe EF5F      		subi r30,lo8(-(1))
 1516 0600 EB83      		std Y+3,r30
 1517               	.LVL102:
 1518 0602 E032      		cpi r30,lo8(32)
 1519 0604 00F4      		brsh .L76
 1520               		.loc 1 562 0 discriminator 5
 1521 0606 5860      		ori r21,lo8(8)
 1522               	.LVL103:
 1523               	.L76:
 563:main.c        **** 			DEBOUNCE(4); // FSB
 1524               		.loc 1 563 0 is_stmt 1
 1525 0608 64FE      		sbrs r6,4
 1526 060a 00C0      		rjmp .L77
 1527               		.loc 1 563 0 is_stmt 0 discriminator 1
 1528 060c 84FF      		sbrs r24,4
 1529 060e 00C0      		rjmp .L77
 1530               		.loc 1 563 0 discriminator 3
 1531 0610 FF81      		ldd r31,Y+7
 1532 0612 FF5F      		subi r31,lo8(-(1))
 1533 0614 FF83      		std Y+7,r31
 1534               	.LVL104:
 1535 0616 F032      		cpi r31,lo8(32)
 1536 0618 00F4      		brsh .L78
 1537               		.loc 1 563 0 discriminator 5
 1538 061a 5061      		ori r21,lo8(16)
 1539               	.LVL105:
 1540               	.L78:
 564:main.c        **** 			DEBOUNCE(5); // DPI
 1541               		.loc 1 564 0 is_stmt 1
 1542 061c 65FE      		sbrs r6,5
 1543 061e 00C0      		rjmp .L79
 1544               		.loc 1 564 0 is_stmt 0 discriminator 1
 1545 0620 85FF      		sbrs r24,5
 1546 0622 00C0      		rjmp .L79
 1547               		.loc 1 564 0 discriminator 3
 1548 0624 2885      		ldd r18,Y+8
 1549 0626 2F5F      		subi r18,lo8(-(1))
 1550 0628 2887      		std Y+8,r18
 1551               	.LVL106:
 1552 062a 2032      		cpi r18,lo8(32)
 1553 062c 00F4      		brsh .L80
 1554               		.loc 1 564 0 discriminator 5
 1555 062e 5062      		ori r21,lo8(32)
 1556               	.LVL107:
 1557               	.L80:
 565:main.c        **** 			
 566:main.c        **** 			#undef DEBOUNCE
 567:main.c        **** 			
 568:main.c        **** 			// Profiles ------------------------
 569:main.c        **** 			if (profile == 1) {	
 1558               		.loc 1 569 0 is_stmt 1
 1559 0630 3A81      		ldd r19,Y+2
 1560 0632 3130      		cpi r19,lo8(1)
 1561 0634 01F4      		brne .+2
 1562 0636 00C0      		rjmp .L103
 1563               	.LVL108:
 1564               	.L228:
 570:main.c        **** 				led_colours_index = p1_led_colour;
 571:main.c        **** 				led_colour = led_colours[led_colours_index];
 572:main.c        **** 				led_bright_index = p1_led_brightness;
 573:main.c        **** 				led_rgb_brightness = led_bright[led_bright_index];
 574:main.c        **** 			}
 575:main.c        **** 
 576:main.c        **** 			if (profile == 2) {
 1565               		.loc 1 576 0
 1566 0638 3230      		cpi r19,lo8(2)
 1567 063a 01F4      		brne .+2
 1568 063c 00C0      		rjmp .L223
 1569               	.LVL109:
 577:main.c        **** 				led_colours_index = p2_led_colour;
 578:main.c        **** 				led_colour = led_colours[led_colours_index];
 579:main.c        **** 				led_bright_index = p2_led_brightness;
 580:main.c        **** 				led_rgb_brightness = led_bright[led_bright_index];
 581:main.c        **** 			}
 582:main.c        **** 
 583:main.c        **** 			if (profile == 3) {
 584:main.c        **** 				led_colours_index = p3_led_colour;
 585:main.c        **** 				led_colour = led_colours[led_colours_index];
 1570               		.loc 1 585 0
 1571 063e 35E0      		ldi r19,lo8(5)
 1572 0640 3983      		std Y+1,r19
 1573               	.LVL110:
 1574               	.L81:
 586:main.c        **** 				led_bright_index = p3_led_brightness;
 587:main.c        **** 				led_rgb_brightness = led_bright[led_bright_index];
 588:main.c        **** 			}
 589:main.c        **** 			
 590:main.c        **** 			// usb
 591:main.c        **** 			// first make sure it's configured
 592:main.c        **** 			sei();
 1575               		.loc 1 592 0
 1576               	/* #APP */
 1577               	 ;  592 "main.c" 1
 1578 0642 7894      		sei
 1579               	 ;  0 "" 2
 1580               	/* #NOAPP */
 1581 0644 5B87      		std Y+11,r21
 1582               	.LVL111:
 1583               	.L82:
 593:main.c        **** 			while (!usb_configured());
 1584               		.loc 1 593 0 discriminator 1
 1585 0646 0E94 0000 		call usb_configured
 1586               	.LVL112:
 1587 064a 8823      		tst r24
 1588 064c 01F0      		breq .L82
 1589 064e 5B85      		ldd r21,Y+11
 594:main.c        **** 			cli();
 1590               		.loc 1 594 0
 1591               	/* #APP */
 1592               	 ;  594 "main.c" 1
 1593 0650 F894      		cli
 1594               	 ;  0 "" 2
 595:main.c        **** 
 596:main.c        **** 			// this stuff is very intricate and confusing
 597:main.c        **** 			// i'm fairly certain all of it is correct.
 598:main.c        **** 
 599:main.c        **** 			// mask dpi button state for usb
 600:main.c        **** 			const uint8_t btn_dbncd_mask = btn_dbncd & 0b00011111;
 1595               		.loc 1 600 0
 1596               	/* #NOAPP */
 1597 0652 452F      		mov r20,r21
 1598 0654 4F71      		andi r20,lo8(31)
 1599               	.LVL113:
 601:main.c        **** 
 602:main.c        **** 			// there's nothing to do if nothing's changed in this 125us cycle
 603:main.c        **** 			if ((btn_dbncd_mask != (btn_prev & 0b00011111)) || _x.all || _y.all || _whl) {
 1600               		.loc 1 603 0
 1601 0656 242F      		mov r18,r20
 1602 0658 30E0      		ldi r19,0
 1603 065a 862D      		mov r24,r6
 1604 065c 8F71      		andi r24,lo8(31)
 1605 065e 90E0      		ldi r25,0
 1606 0660 2817      		cp r18,r24
 1607 0662 3907      		cpc r19,r25
 1608 0664 01F4      		brne .+2
 1609 0666 00C0      		rjmp .L224
 1610               	.LVL114:
 1611               	.L83:
 604:main.c        **** 				UENUM = MOUSE_ENDPOINT;
 1612               		.loc 1 604 0
 1613 0668 83E0      		ldi r24,lo8(3)
 1614 066a 8093 E900 		sts 233,r24
 1615               	.LVL115:
 605:main.c        **** 				if (UESTA0X & (1<<NBUSYBK0)) { // untransmitted data still in bank
 1616               		.loc 1 605 0
 1617 066e 8091 EE00 		lds r24,238
 1618 0672 80FF      		sbrs r24,0
 1619 0674 00C0      		rjmp .L105
 606:main.c        **** 					UEINTX |= (1<<RXOUTI); // kill bank; RXOUTI == KILLBK
 1620               		.loc 1 606 0
 1621 0676 8091 E800 		lds r24,232
 1622 067a 8460      		ori r24,lo8(4)
 1623 067c 8093 E800 		sts 232,r24
 1624 0680 9C85      		ldd r25,Y+12
 1625               	.L86:
 607:main.c        **** 					while (UEINTX & (1<<RXOUTI));
 1626               		.loc 1 607 0 discriminator 1
 1627 0682 8091 E800 		lds r24,232
 1628 0686 82FD      		sbrc r24,2
 1629 0688 00C0      		rjmp .L86
 1630 068a 9C87      		std Y+12,r25
 1631 068c C201      		movw r24,r4
 1632               	.LVL116:
 1633 068e 232D      		mov r18,r3
 1634               	.LVL117:
 1635 0690 322D      		mov r19,r2
 1636               	.LVL118:
 1637               	.L85:
 608:main.c        **** 				} else {
 609:main.c        **** 					// transmission's finished, or the data that should be in the
 610:main.c        **** 					// bank is exactly the same as what was previously transmitted
 611:main.c        **** 					// so that there was nothing worth transmitting before.
 612:main.c        **** 					btn_usb_prev = btn_usb;
 613:main.c        **** 					btn_usb = 0x00;
 614:main.c        **** 					x.all = 0;
 615:main.c        **** 					y.all = 0;
 616:main.c        **** 					whl = 0;
 617:main.c        **** 				}
 618:main.c        **** 				
 619:main.c        **** 				btn_usb |= btn_dbncd_mask & 0b00011111; // L, R, M, FSB, RSB
 1638               		.loc 1 619 0
 1639 0692 142B      		or r17,r20
 1640               	.LVL119:
 620:main.c        **** 				x.all += _x.all;
 1641               		.loc 1 620 0
 1642 0694 8C0D      		add r24,r12
 1643 0696 9D1D      		adc r25,r13
 1644 0698 2C01      		movw r4,r24
 621:main.c        **** 				y.all += _y.all;
 1645               		.loc 1 621 0
 1646 069a 2A0D      		add r18,r10
 1647 069c 3B1D      		adc r19,r11
 1648 069e 322E      		mov r3,r18
 1649               	.LVL120:
 1650 06a0 232E      		mov r2,r19
 622:main.c        **** 				whl += _whl;
 1651               		.loc 1 622 0
 1652 06a2 0E0D      		add r16,r14
 1653               	.LVL121:
 623:main.c        **** 				// only load bank with data if there's something worth transmitting
 624:main.c        **** 				if ((btn_usb != btn_usb_prev) || x.all || y.all || whl) {
 1654               		.loc 1 624 0
 1655 06a4 1F15      		cp r17,r15
 1656 06a6 01F4      		brne .+2
 1657 06a8 00C0      		rjmp .L225
 1658               	.L87:
 625:main.c        **** 					UEDATX = btn_usb;
 1659               		.loc 1 625 0
 1660 06aa 1093 F100 		sts 241,r17
 626:main.c        **** 					UEDATX = x.lo;
 1661               		.loc 1 626 0
 1662 06ae 8093 F100 		sts 241,r24
 627:main.c        **** 					UEDATX = x.hi;
 1663               		.loc 1 627 0
 1664 06b2 9093 F100 		sts 241,r25
 628:main.c        **** 					UEDATX = y.lo;
 1665               		.loc 1 628 0
 1666 06b6 2093 F100 		sts 241,r18
 629:main.c        **** 					UEDATX = y.hi;
 1667               		.loc 1 629 0
 1668 06ba 3093 F100 		sts 241,r19
 630:main.c        **** 					UEDATX = whl; // wheel scrolls
 1669               		.loc 1 630 0
 1670 06be 0093 F100 		sts 241,r16
 631:main.c        **** 					UEINTX = 0x3a;
 1671               		.loc 1 631 0
 1672 06c2 9AE3      		ldi r25,lo8(58)
 1673 06c4 9093 E800 		sts 232,r25
 1674               	.L84:
 1675               	.LVL122:
 1676               	.LBE482:
 319:main.c        **** 		// synchronization to usb frames and 125us intervals
 1677               		.loc 1 319 0 discriminator 2
 1678 06c8 EC85      		ldd r30,Y+12
 1679 06ca EF5F      		subi r30,lo8(-(1))
 1680 06cc EC87      		std Y+12,r30
 1681               	.LVL123:
 1682 06ce E830      		cpi r30,lo8(8)
 1683 06d0 01F4      		brne .+2
 1684 06d2 00C0      		rjmp .L226
 1685               	.L107:
 1686 06d4 652E      		mov r6,r21
 1687               	.LVL124:
 1688               	.LBB483:
 324:main.c        **** 				// sync to usb frames (1ms)
 1689               		.loc 1 324 0
 1690 06d6 EC85      		ldd r30,Y+12
 1691 06d8 E111      		cpse r30,__zero_reg__
 1692 06da 00C0      		rjmp .L208
 1693               	.LVL125:
 1694               	.L217:
 326:main.c        **** 				while(!(UDINT & (1<<SOFI)));
 1695               		.loc 1 326 0
 1696 06dc 8091 E100 		lds r24,225
 1697 06e0 8B7F      		andi r24,lo8(-5)
 1698 06e2 8093 E100 		sts 225,r24
 1699 06e6 9C85      		ldd r25,Y+12
 1700               	.LVL126:
 1701               	.L45:
 327:main.c        **** 				// reset prescaler phase, not really necessary
 1702               		.loc 1 327 0 discriminator 1
 1703 06e8 8091 E100 		lds r24,225
 1704 06ec 82FF      		sbrs r24,2
 1705 06ee 00C0      		rjmp .L45
 1706 06f0 9C87      		std Y+12,r25
 329:main.c        **** 				TCNT0 = 0;
 1707               		.loc 1 329 0
 1708 06f2 83B5      		in r24,0x23
 1709 06f4 8160      		ori r24,lo8(1)
 1710 06f6 83BD      		out 0x23,r24
 330:main.c        **** 			} else {
 1711               		.loc 1 330 0
 1712 06f8 16BC      		out 0x26,__zero_reg__
 335:main.c        **** 		
 1713               		.loc 1 335 0
 1714 06fa A99A      		sbi 0x15,1
 348:main.c        **** 				led_r_value = 255;
 1715               		.loc 1 348 0
 1716 06fc 2981      		ldd r18,Y+1
 1717 06fe 2230      		cpi r18,lo8(2)
 1718 0700 01F0      		breq .+2
 1719 0702 00C0      		rjmp .L227
 1720               	.L98:
 1721 0704 1982      		std Y+1,__zero_reg__
 1722 0706 00C0      		rjmp .L48
 1723               	.LVL127:
 1724               	.L96:
 1725               	.LBE483:
 1726               	.LBE458:
 1727 0708 83E0      		ldi r24,lo8(3)
 290:main.c        **** 		// dpi settings
 1728               		.loc 1 290 0
 1729 070a 32E0      		ldi r19,lo8(2)
 1730 070c 3A83      		std Y+2,r19
 1731 070e 00C0      		rjmp .L3
 1732               	.L97:
 1733 0710 87E0      		ldi r24,lo8(7)
 280:main.c        **** 	
 1734               		.loc 1 280 0
 1735 0712 91E0      		ldi r25,lo8(1)
 1736 0714 9A83      		std Y+2,r25
 1737 0716 00C0      		rjmp .L3
 1738               	.LVL128:
 1739               	.L211:
 1740               	.LBB486:
 1741               	.LBB484:
 496:main.c        **** 				}
 1742               		.loc 1 496 0
 1743 0718 5F9A      		sbi 0xb,7
 1744 071a 00C0      		rjmp .L57
 1745               	.L210:
 473:main.c        **** 				}
 1746               		.loc 1 473 0
 1747 071c 2E9A      		sbi 0x5,6
 1748 071e 00C0      		rjmp .L54
 1749               	.LVL129:
 1750               	.L209:
 450:main.c        **** 				}
 1751               		.loc 1 450 0
 1752 0720 2D9A      		sbi 0x5,5
 1753 0722 00C0      		rjmp .L51
 1754               	.LVL130:
 1755               	.L79:
 564:main.c        **** 			
 1756               		.loc 1 564 0 discriminator 4
 1757 0724 8095      		com r24
 1758               	.LVL131:
 1759 0726 8072      		andi r24,lo8(32)
 1760               	.LVL132:
 1761 0728 582B      		or r21,r24
 1762               	.LVL133:
 1763 072a 1886      		std Y+8,__zero_reg__
 1764               	.LVL134:
 569:main.c        **** 				led_colours_index = p1_led_colour;
 1765               		.loc 1 569 0 discriminator 4
 1766 072c 3A81      		ldd r19,Y+2
 1767 072e 3130      		cpi r19,lo8(1)
 1768 0730 01F0      		breq .+2
 1769 0732 00C0      		rjmp .L228
 1770               	.L103:
 1771               	.LVL135:
 571:main.c        **** 				led_bright_index = p1_led_brightness;
 1772               		.loc 1 571 0
 1773 0734 22E0      		ldi r18,lo8(2)
 1774 0736 2983      		std Y+1,r18
 1775 0738 00C0      		rjmp .L81
 1776               	.LVL136:
 1777               	.L77:
 563:main.c        **** 			DEBOUNCE(5); // DPI
 1778               		.loc 1 563 0 discriminator 4
 1779 073a 982F      		mov r25,r24
 1780 073c 9095      		com r25
 1781 073e 9071      		andi r25,lo8(16)
 1782 0740 592B      		or r21,r25
 1783               	.LVL137:
 1784 0742 1F82      		std Y+7,__zero_reg__
 1785 0744 00C0      		rjmp .L78
 1786               	.LVL138:
 1787               	.L75:
 562:main.c        **** 			DEBOUNCE(4); // FSB
 1788               		.loc 1 562 0 discriminator 4
 1789 0746 982F      		mov r25,r24
 1790 0748 9095      		com r25
 1791 074a 9870      		andi r25,lo8(8)
 1792 074c 592B      		or r21,r25
 1793               	.LVL139:
 1794 074e 1B82      		std Y+3,__zero_reg__
 1795 0750 00C0      		rjmp .L76
 1796               	.LVL140:
 1797               	.L73:
 561:main.c        **** 			DEBOUNCE(3); // RSB
 1798               		.loc 1 561 0 discriminator 4
 1799 0752 982F      		mov r25,r24
 1800 0754 9095      		com r25
 1801 0756 9470      		andi r25,lo8(4)
 1802 0758 592B      		or r21,r25
 1803               	.LVL141:
 1804 075a 1C82      		std Y+4,__zero_reg__
 1805 075c 00C0      		rjmp .L74
 1806               	.LVL142:
 1807               	.L71:
 560:main.c        **** 			DEBOUNCE(2); // M
 1808               		.loc 1 560 0 discriminator 4
 1809 075e 982F      		mov r25,r24
 1810 0760 9095      		com r25
 1811 0762 9270      		andi r25,lo8(2)
 1812 0764 592B      		or r21,r25
 1813               	.LVL143:
 1814 0766 1D82      		std Y+5,__zero_reg__
 1815 0768 00C0      		rjmp .L72
 1816               	.LVL144:
 1817               	.L68:
 1818 076a 21E0      		ldi r18,lo8(1)
 1819 076c 5227      		eor r21,r18
 1820               	.LVL145:
 559:main.c        **** 			DEBOUNCE(1); // R
 1821               		.loc 1 559 0 discriminator 4
 1822 076e 1E82      		std Y+6,__zero_reg__
 1823 0770 00C0      		rjmp .L70
 1824               	.LVL146:
 1825               	.L105:
 1826 0772 F12E      		mov r15,r17
 1827               	.LVL147:
 1828 0774 00E0      		ldi r16,0
 1829               	.LVL148:
 1830 0776 20E0      		ldi r18,0
 1831 0778 30E0      		ldi r19,0
 1832               	.LVL149:
 1833 077a 80E0      		ldi r24,0
 1834 077c 90E0      		ldi r25,0
 1835 077e 10E0      		ldi r17,0
 1836               	.LVL150:
 1837 0780 00C0      		rjmp .L85
 1838               	.LVL151:
 1839               	.L224:
 603:main.c        **** 				UENUM = MOUSE_ENDPOINT;
 1840               		.loc 1 603 0 discriminator 1
 1841 0782 C114      		cp r12,__zero_reg__
 1842 0784 D104      		cpc r13,__zero_reg__
 1843 0786 01F0      		breq .+2
 1844 0788 00C0      		rjmp .L83
 1845               	.LVL152:
 603:main.c        **** 				UENUM = MOUSE_ENDPOINT;
 1846               		.loc 1 603 0 is_stmt 0 discriminator 2
 1847 078a A114      		cp r10,__zero_reg__
 1848 078c B104      		cpc r11,__zero_reg__
 1849 078e 01F0      		breq .+2
 1850 0790 00C0      		rjmp .L83
 603:main.c        **** 				UENUM = MOUSE_ENDPOINT;
 1851               		.loc 1 603 0 discriminator 3
 1852 0792 E110      		cpse r14,__zero_reg__
 1853 0794 00C0      		rjmp .L83
 1854               	.LVL153:
 1855               	.LBE484:
 319:main.c        **** 		// synchronization to usb frames and 125us intervals
 1856               		.loc 1 319 0 is_stmt 1
 1857 0796 EC85      		ldd r30,Y+12
 1858 0798 EF5F      		subi r30,lo8(-(1))
 1859 079a EC87      		std Y+12,r30
 1860               	.LVL154:
 1861 079c E830      		cpi r30,lo8(8)
 1862 079e 01F0      		breq .+2
 1863 07a0 00C0      		rjmp .L107
 1864               	.LVL155:
 1865               	.L226:
 1866 07a2 EF2C      		mov r14,r15
 1867               	.LVL156:
 1868 07a4 652E      		mov r6,r21
 1869 07a6 00C0      		rjmp .L89
 1870               	.LVL157:
 1871               	.L223:
 1872               	.LBB485:
 578:main.c        **** 				led_bright_index = p2_led_brightness;
 1873               		.loc 1 578 0
 1874 07a8 93E0      		ldi r25,lo8(3)
 1875 07aa 9983      		std Y+1,r25
 1876 07ac 00C0      		rjmp .L81
 1877               	.LVL158:
 1878               	.L99:
 357:main.c        **** 			}
 1879               		.loc 1 357 0
 1880 07ae 3CE3      		ldi r19,lo8(60)
 1881 07b0 3983      		std Y+1,r19
 1882               	.LVL159:
 1883 07b2 00C0      		rjmp .L48
 1884               	.LVL160:
 1885               	.L222:
 520:main.c        **** 				_whl = 2 * (whl_a ^ whl_prev_diff) - 1;
 1886               		.loc 1 520 0
 1887 07b4 9A85      		ldd r25,Y+10
 1888 07b6 8917      		cp r24,r25
 1889 07b8 01F0      		breq .L102
 521:main.c        **** 				whl_prev_same = whl_a;
 1890               		.loc 1 521 0
 1891 07ba E984      		ldd r14,Y+9
 1892               	.LVL161:
 1893 07bc E826      		eor r14,r24
 1894 07be EE0C      		lsl r14
 1895 07c0 EA94      		dec r14
 1896               	.LVL162:
 1897 07c2 8A87      		std Y+10,r24
 1898 07c4 00C0      		rjmp .L66
 1899               	.LVL163:
 1900               	.L225:
 624:main.c        **** 					UEDATX = btn_usb;
 1901               		.loc 1 624 0 discriminator 1
 1902 07c6 0097      		sbiw r24,0
 1903 07c8 01F0      		breq .+2
 1904 07ca 00C0      		rjmp .L87
 624:main.c        **** 					UEDATX = btn_usb;
 1905               		.loc 1 624 0 is_stmt 0 discriminator 2
 1906 07cc 2115      		cp r18,__zero_reg__
 1907 07ce 3105      		cpc r19,__zero_reg__
 1908 07d0 01F0      		breq .+2
 1909 07d2 00C0      		rjmp .L87
 624:main.c        **** 					UEDATX = btn_usb;
 1910               		.loc 1 624 0 discriminator 3
 1911 07d4 0023      		tst r16
 1912 07d6 01F4      		brne .+2
 1913 07d8 00C0      		rjmp .L84
 1914 07da 00C0      		rjmp .L87
 1915               	.LVL164:
 1916               	.L221:
 488:main.c        **** 				}
 1917               		.loc 1 488 0 is_stmt 1
 1918 07dc 712C      		mov r7,__zero_reg__
 1919               	.LVL165:
 1920               	.L94:
 492:main.c        **** 				}
 1921               		.loc 1 492 0
 1922 07de 5F98      		cbi 0xb,7
 1923 07e0 00C0      		rjmp .L58
 1924               	.LVL166:
 1925               	.L219:
 442:main.c        **** 				}
 1926               		.loc 1 442 0
 1927 07e2 912C      		mov r9,__zero_reg__
 1928               	.LVL167:
 1929               	.L90:
 446:main.c        **** 				}
 1930               		.loc 1 446 0
 1931 07e4 2D98      		cbi 0x5,5
 1932 07e6 00C0      		rjmp .L52
 1933               	.LVL168:
 1934               	.L220:
 465:main.c        **** 				}
 1935               		.loc 1 465 0
 1936 07e8 812C      		mov r8,__zero_reg__
 1937               	.LVL169:
 1938               	.L92:
 469:main.c        **** 				}
 1939               		.loc 1 469 0
 1940 07ea 2E98      		cbi 0x5,6
 1941 07ec 00C0      		rjmp .L55
 1942               	.LVL170:
 1943               	.L218:
 1944 07ee 80E1      		ldi r24,lo8(16)
 1945 07f0 91E0      		ldi r25,lo8(1)
 1946 07f2 27E0      		ldi r18,lo8(7)
 1947 07f4 6FE0      		ldi r22,lo8(15)
 1948 07f6 1B86      		std Y+11,__zero_reg__
 1949 07f8 36E0      		ldi r19,lo8(6)
 1950 07fa E32E      		mov r14,r19
 1951 07fc 00C0      		rjmp .L50
 1952               	.LVL171:
 1953               	.L102:
 514:main.c        **** 			const uint8_t whl_a = WHL_A_IS_HIGH;
 1954               		.loc 1 514 0
 1955 07fe E12C      		mov r14,__zero_reg__
 1956               	.LVL172:
 1957 0800 00C0      		rjmp .L66
 1958               	.LBE485:
 1959               	.LBE486:
 1960               		.cfi_endproc
 1961               	.LFE9:
 1963               	.global	srom
 1964               		.section	.progmem.data,"a",@progbits
 1967               	srom:
 1968 0000 01        		.byte	1
 1969 0001 03        		.byte	3
 1970 0002 87        		.byte	-121
 1971 0003 8A        		.byte	-118
 1972 0004 56        		.byte	86
 1973 0005 0F        		.byte	15
 1974 0006 DE        		.byte	-34
 1975 0007 3E        		.byte	62
 1976 0008 FE        		.byte	-2
 1977 0009 5F        		.byte	95
 1978 000a 1D        		.byte	29
 1979 000b B8        		.byte	-72
 1980 000c F2        		.byte	-14
 1981 000d 66        		.byte	102
 1982 000e 4E        		.byte	78
 1983 000f FF        		.byte	-1
 1984 0010 7C        		.byte	124
 1985 0011 7A        		.byte	122
 1986 0012 76        		.byte	118
 1987 0013 4E        		.byte	78
 1988 0014 1C        		.byte	28
 1989 0015 B8        		.byte	-72
 1990 0016 D7        		.byte	-41
 1991 0017 0D        		.byte	13
 1992 0018 79        		.byte	121
 1993 0019 70        		.byte	112
 1994 001a 62        		.byte	98
 1995 001b 27        		.byte	39
 1996 001c CC        		.byte	-52
 1997 001d 1A        		.byte	26
 1998 001e B6        		.byte	-74
 1999 001f EE        		.byte	-18
 2000 0020 3F        		.byte	63
 2001 0021 FC        		.byte	-4
 2002 0022 7A        		.byte	122
 2003 0023 76        		.byte	118
 2004 0024 4F        		.byte	79
 2005 0025 1C        		.byte	28
 2006 0026 9B        		.byte	-101
 2007 0027 B4        		.byte	-76
 2008 0028 CB        		.byte	-53
 2009 0029 F5        		.byte	-11
 2010 002a 49        		.byte	73
 2011 002b 10        		.byte	16
 2012 002c 83        		.byte	-125
 2013 002d 84        		.byte	-124
 2014 002e 8A        		.byte	-118
 2015 002f 96        		.byte	-106
 2016 0030 8F        		.byte	-113
 2017 0031 7D        		.byte	125
 2018 0032 78        		.byte	120
 2019 0033 72        		.byte	114
 2020 0034 66        		.byte	102
 2021 0035 4D        		.byte	77
 2022 0036 1E        		.byte	30
 2023 0037 BE        		.byte	-66
 2024 0038 DF        		.byte	-33
 2025 0039 1D        		.byte	29
 2026 003a 99        		.byte	-103
 2027 003b B0        		.byte	-80
 2028 003c E2        		.byte	-30
 2029 003d 46        		.byte	70
 2030 003e 0E        		.byte	14
 2031 003f 9E        		.byte	-98
 2032 0040 BE        		.byte	-66
 2033 0041 FE        		.byte	-2
 2034 0042 7E        		.byte	126
 2035 0043 7E        		.byte	126
 2036 0044 7E        		.byte	126
 2037 0045 7E        		.byte	126
 2038 0046 5F        		.byte	95
 2039 0047 1D        		.byte	29
 2040 0048 BC        		.byte	-68
 2041 0049 F2        		.byte	-14
 2042 004a 47        		.byte	71
 2043 004b 0C        		.byte	12
 2044 004c 9A        		.byte	-102
 2045 004d B6        		.byte	-74
 2046 004e CF        		.byte	-49
 2047 004f 1C        		.byte	28
 2048 0050 9B        		.byte	-101
 2049 0051 B4        		.byte	-76
 2050 0052 CB        		.byte	-53
 2051 0053 F5        		.byte	-11
 2052 0054 49        		.byte	73
 2053 0055 10        		.byte	16
 2054 0056 83        		.byte	-125
 2055 0057 65        		.byte	101
 2056 0058 48        		.byte	72
 2057 0059 12        		.byte	18
 2058 005a 87        		.byte	-121
 2059 005b 6D        		.byte	109
 2060 005c 58        		.byte	88
 2061 005d 32        		.byte	50
 2062 005e C7        		.byte	-57
 2063 005f 0C        		.byte	12
 2064 0060 9A        		.byte	-102
 2065 0061 B6        		.byte	-74
 2066 0062 CF        		.byte	-49
 2067 0063 1C        		.byte	28
 2068 0064 BA        		.byte	-70
 2069 0065 F6        		.byte	-10
 2070 0066 6E        		.byte	110
 2071 0067 5E        		.byte	94
 2072 0068 1F        		.byte	31
 2073 0069 BC        		.byte	-68
 2074 006a DB        		.byte	-37
 2075 006b 34        		.byte	52
 2076 006c CB        		.byte	-53
 2077 006d 14        		.byte	20
 2078 006e 8B        		.byte	-117
 2079 006f 94        		.byte	-108
 2080 0070 AA        		.byte	-86
 2081 0071 B7        		.byte	-73
 2082 0072 CD        		.byte	-51
 2083 0073 F9        		.byte	-7
 2084 0074 70        		.byte	112
 2085 0075 43        		.byte	67
 2086 0076 04        		.byte	4
 2087 0077 B7        		.byte	-73
 2088 0078 71        		.byte	113
 2089 0079 BC        		.byte	-68
 2090 007a BB        		.byte	-69
 2091 007b 4D        		.byte	77
 2092 007c 30        		.byte	48
 2093 007d 19        		.byte	25
 2094 007e 01        		.byte	1
 2095 007f 73        		.byte	115
 2096 0080 3F        		.byte	63
 2097 0081 D7        		.byte	-41
 2098 0082 B9        		.byte	-71
 2099 0083 00        		.byte	0
 2100 0084 10        		.byte	16
 2101 0085 96        		.byte	-106
 2102 0086 CD        		.byte	-51
 2103 0087 16        		.byte	22
 2104 0088 D5        		.byte	-43
 2105 0089 5F        		.byte	95
 2106 008a ED        		.byte	-19
 2107 008b 63        		.byte	99
 2108 008c 14        		.byte	20
 2109 008d F7        		.byte	-9
 2110 008e 61        		.byte	97
 2111 008f 6A        		.byte	106
 2112 0090 4E        		.byte	78
 2113 0091 B3        		.byte	-77
 2114 0092 8E        		.byte	-114
 2115 0093 70        		.byte	112
 2116 0094 6E        		.byte	110
 2117 0095 79        		.byte	121
 2118 0096 9A        		.byte	-102
 2119 0097 51        		.byte	81
 2120 0098 24        		.byte	36
 2121 0099 B4        		.byte	-76
 2122 009a C7        		.byte	-57
 2123 009b CA        		.byte	-54
 2124 009c 58        		.byte	88
 2125 009d 33        		.byte	51
 2126 009e EE        		.byte	-18
 2127 009f 94        		.byte	-108
 2128 00a0 C1        		.byte	-63
 2129 00a1 2E        		.byte	46
 2130 00a2 50        		.byte	80
 2131 00a3 4C        		.byte	76
 2132 00a4 EC        		.byte	-20
 2133 00a5 74        		.byte	116
 2134 00a6 6C        		.byte	108
 2135 00a7 4B        		.byte	75
 2136 00a8 E4        		.byte	-28
 2137 00a9 5A        		.byte	90
 2138 00aa F0        		.byte	-16
 2139 00ab BB        		.byte	-69
 2140 00ac B0        		.byte	-80
 2141 00ad BA        		.byte	-70
 2142 00ae 38        		.byte	56
 2143 00af 06        		.byte	6
 2144 00b0 F7        		.byte	-9
 2145 00b1 9B        		.byte	-101
 2146 00b2 AC        		.byte	-84
 2147 00b3 DE        		.byte	-34
 2148 00b4 47        		.byte	71
 2149 00b5 C2        		.byte	-62
 2150 00b6 F7        		.byte	-9
 2151 00b7 3E        		.byte	62
 2152 00b8 A7        		.byte	-89
 2153 00b9 4A        		.byte	74
 2154 00ba 33        		.byte	51
 2155 00bb 9D        		.byte	-99
 2156 00bc 97        		.byte	-105
 2157 00bd 3D        		.byte	61
 2158 00be 89        		.byte	-119
 2159 00bf 9D        		.byte	-99
 2160 00c0 F7        		.byte	-9
 2161 00c1 28        		.byte	40
 2162 00c2 8A        		.byte	-118
 2163 00c3 B2        		.byte	-78
 2164 00c4 44        		.byte	68
 2165 00c5 44        		.byte	68
 2166 00c6 49        		.byte	73
 2167 00c7 AE        		.byte	-82
 2168 00c8 E1        		.byte	-31
 2169 00c9 F9        		.byte	-7
 2170 00ca EB        		.byte	-21
 2171 00cb 36        		.byte	54
 2172 00cc D2        		.byte	-46
 2173 00cd 5D        		.byte	93
 2174 00ce 43        		.byte	67
 2175 00cf 85        		.byte	-123
 2176 00d0 55        		.byte	85
 2177 00d1 88        		.byte	-120
 2178 00d2 E8        		.byte	-24
 2179 00d3 A9        		.byte	-87
 2180 00d4 81        		.byte	-127
 2181 00d5 EA        		.byte	-22
 2182 00d6 F7        		.byte	-9
 2183 00d7 52        		.byte	82
 2184 00d8 7D        		.byte	125
 2185 00d9 D4        		.byte	-44
 2186 00da 88        		.byte	-120
 2187 00db 07        		.byte	7
 2188 00dc DA        		.byte	-38
 2189 00dd D8        		.byte	-40
 2190 00de CE        		.byte	-50
 2191 00df 3F        		.byte	63
 2192 00e0 E2        		.byte	-30
 2193 00e1 ED        		.byte	-19
 2194 00e2 6E        		.byte	110
 2195 00e3 7F        		.byte	127
 2196 00e4 28        		.byte	40
 2197 00e5 85        		.byte	-123
 2198 00e6 6F        		.byte	111
 2199 00e7 AD        		.byte	-83
 2200 00e8 DD        		.byte	-35
 2201 00e9 F1        		.byte	-15
 2202 00ea F4        		.byte	-12
 2203 00eb 23        		.byte	35
 2204 00ec 6B        		.byte	107
 2205 00ed DD        		.byte	-35
 2206 00ee 7C        		.byte	124
 2207 00ef 33        		.byte	51
 2208 00f0 03        		.byte	3
 2209 00f1 B8        		.byte	-72
 2210 00f2 2B        		.byte	43
 2211 00f3 5C        		.byte	92
 2212 00f4 33        		.byte	51
 2213 00f5 F9        		.byte	-7
 2214 00f6 49        		.byte	73
 2215 00f7 0E        		.byte	14
 2216 00f8 70        		.byte	112
 2217 00f9 4E        		.byte	78
 2218 00fa D8        		.byte	-40
 2219 00fb EB        		.byte	-21
 2220 00fc 50        		.byte	80
 2221 00fd 5B        		.byte	91
 2222 00fe 85        		.byte	-123
 2223 00ff D0        		.byte	-48
 2224 0100 81        		.byte	-127
 2225 0101 72        		.byte	114
 2226 0102 BC        		.byte	-68
 2227 0103 58        		.byte	88
 2228 0104 84        		.byte	-124
 2229 0105 DB        		.byte	-37
 2230 0106 76        		.byte	118
 2231 0107 7B        		.byte	123
 2232 0108 A2        		.byte	-94
 2233 0109 85        		.byte	-123
 2234 010a 5F        		.byte	95
 2235 010b 7F        		.byte	127
 2236 010c F9        		.byte	-7
 2237 010d F2        		.byte	-14
 2238 010e E2        		.byte	-30
 2239 010f 27        		.byte	39
 2240 0110 6A        		.byte	106
 2241 0111 82        		.byte	-126
 2242 0112 25        		.byte	37
 2243 0113 B8        		.byte	-72
 2244 0114 4D        		.byte	77
 2245 0115 49        		.byte	73
 2246 0116 B3        		.byte	-77
 2247 0117 FA        		.byte	-6
 2248 0118 B6        		.byte	-74
 2249 0119 7F        		.byte	127
 2250 011a BF        		.byte	-65
 2251 011b B2        		.byte	-78
 2252 011c 65        		.byte	101
 2253 011d 83        		.byte	-125
 2254 011e 70        		.byte	112
 2255 011f C0        		.byte	-64
 2256 0120 51        		.byte	81
 2257 0121 9D        		.byte	-99
 2258 0122 E2        		.byte	-30
 2259 0123 FF        		.byte	-1
 2260 0124 0C        		.byte	12
 2261 0125 7C        		.byte	124
 2262 0126 C3        		.byte	-61
 2263 0127 93        		.byte	-109
 2264 0128 2C        		.byte	44
 2265 0129 62        		.byte	98
 2266 012a FD        		.byte	-3
 2267 012b 87        		.byte	-121
 2268 012c C8        		.byte	-56
 2269 012d F4        		.byte	-12
 2270 012e 56        		.byte	86
 2271 012f 15        		.byte	21
 2272 0130 09        		.byte	9
 2273 0131 B5        		.byte	-75
 2274 0132 B0        		.byte	-80
 2275 0133 94        		.byte	-108
 2276 0134 A7        		.byte	-89
 2277 0135 1C        		.byte	28
 2278 0136 94        		.byte	-108
 2279 0137 79        		.byte	121
 2280 0138 6C        		.byte	108
 2281 0139 00        		.byte	0
 2282 013a D5        		.byte	-43
 2283 013b 31        		.byte	49
 2284 013c C2        		.byte	-62
 2285 013d FF        		.byte	-1
 2286 013e 67        		.byte	103
 2287 013f 5B        		.byte	91
 2288 0140 3B        		.byte	59
 2289 0141 0F        		.byte	15
 2290 0142 97        		.byte	-105
 2291 0143 43        		.byte	67
 2292 0144 A6        		.byte	-90
 2293 0145 89        		.byte	-119
 2294 0146 07        		.byte	7
 2295 0147 19        		.byte	25
 2296 0148 8C        		.byte	-116
 2297 0149 2A        		.byte	42
 2298 014a 99        		.byte	-103
 2299 014b 10        		.byte	16
 2300 014c AA        		.byte	-86
 2301 014d 47        		.byte	71
 2302 014e FC        		.byte	-4
 2303 014f 1E        		.byte	30
 2304 0150 5A        		.byte	90
 2305 0151 7C        		.byte	124
 2306 0152 BC        		.byte	-68
 2307 0153 35        		.byte	53
 2308 0154 7D        		.byte	125
 2309 0155 C4        		.byte	-60
 2310 0156 9B        		.byte	-101
 2311 0157 51        		.byte	81
 2312 0158 EA        		.byte	-22
 2313 0159 53        		.byte	83
 2314 015a 84        		.byte	-124
 2315 015b 1D        		.byte	29
 2316 015c 7C        		.byte	124
 2317 015d 03        		.byte	3
 2318 015e B0        		.byte	-80
 2319 015f 16        		.byte	22
 2320 0160 5F        		.byte	95
 2321 0161 3A        		.byte	58
 2322 0162 3E        		.byte	62
 2323 0163 66        		.byte	102
 2324 0164 3C        		.byte	60
 2325 0165 9D        		.byte	-99
 2326 0166 B8        		.byte	-72
 2327 0167 4A        		.byte	74
 2328 0168 6E        		.byte	110
 2329 0169 A8        		.byte	-88
 2330 016a 3E        		.byte	62
 2331 016b 7D        		.byte	125
 2332 016c 66        		.byte	102
 2333 016d 6A        		.byte	106
 2334 016e F4        		.byte	-12
 2335 016f DD        		.byte	-35
 2336 0170 1D        		.byte	29
 2337 0171 79        		.byte	121
 2338 0172 D7        		.byte	-41
 2339 0173 31        		.byte	49
 2340 0174 D6        		.byte	-42
 2341 0175 8C        		.byte	-116
 2342 0176 EC        		.byte	-20
 2343 0177 9C        		.byte	-100
 2344 0178 7B        		.byte	123
 2345 0179 F2        		.byte	-14
 2346 017a 45        		.byte	69
 2347 017b 32        		.byte	50
 2348 017c C6        		.byte	-58
 2349 017d 02        		.byte	2
 2350 017e 63        		.byte	99
 2351 017f C4        		.byte	-60
 2352 0180 2D        		.byte	45
 2353 0181 40        		.byte	64
 2354 0182 99        		.byte	-103
 2355 0183 B1        		.byte	-79
 2356 0184 F6        		.byte	-10
 2357 0185 D5        		.byte	-43
 2358 0186 AB        		.byte	-85
 2359 0187 21        		.byte	33
 2360 0188 64        		.byte	100
 2361 0189 9D        		.byte	-99
 2362 018a 5B        		.byte	91
 2363 018b F0        		.byte	-16
 2364 018c 3D        		.byte	61
 2365 018d 02        		.byte	2
 2366 018e D7        		.byte	-41
 2367 018f EB        		.byte	-21
 2368 0190 3D        		.byte	61
 2369 0191 65        		.byte	101
 2370 0192 F7        		.byte	-9
 2371 0193 F8        		.byte	-8
 2372 0194 03        		.byte	3
 2373 0195 11        		.byte	17
 2374 0196 5D        		.byte	93
 2375 0197 CC        		.byte	-52
 2376 0198 97        		.byte	-105
 2377 0199 C1        		.byte	-63
 2378 019a F5        		.byte	-11
 2379 019b 24        		.byte	36
 2380 019c 2F        		.byte	47
 2381 019d BD        		.byte	-67
 2382 019e B9        		.byte	-71
 2383 019f 85        		.byte	-123
 2384 01a0 7D        		.byte	125
 2385 01a1 D9        		.byte	-39
 2386 01a2 DD        		.byte	-35
 2387 01a3 BB        		.byte	-69
 2388 01a4 52        		.byte	82
 2389 01a5 5F        		.byte	95
 2390 01a6 C9        		.byte	-55
 2391 01a7 96        		.byte	-106
 2392 01a8 96        		.byte	-106
 2393 01a9 6D        		.byte	109
 2394 01aa 65        		.byte	101
 2395 01ab C5        		.byte	-59
 2396 01ac 42        		.byte	66
 2397 01ad AB        		.byte	-85
 2398 01ae DE        		.byte	-34
 2399 01af 94        		.byte	-108
 2400 01b0 4E        		.byte	78
 2401 01b1 DD        		.byte	-35
 2402 01b2 DB        		.byte	-37
 2403 01b3 5C        		.byte	92
 2404 01b4 FB        		.byte	-5
 2405 01b5 88        		.byte	-120
 2406 01b6 3A        		.byte	58
 2407 01b7 83        		.byte	-125
 2408 01b8 CC        		.byte	-52
 2409 01b9 19        		.byte	25
 2410 01ba CA        		.byte	-54
 2411 01bb EF        		.byte	-17
 2412 01bc F5        		.byte	-11
 2413 01bd 60        		.byte	96
 2414 01be D3        		.byte	-45
 2415 01bf 1C        		.byte	28
 2416 01c0 C0        		.byte	-64
 2417 01c1 AF        		.byte	-81
 2418 01c2 37        		.byte	55
 2419 01c3 67        		.byte	103
 2420 01c4 A8        		.byte	-88
 2421 01c5 29        		.byte	41
 2422 01c6 AD        		.byte	-83
 2423 01c7 AF        		.byte	-81
 2424 01c8 77        		.byte	119
 2425 01c9 49        		.byte	73
 2426 01ca 47        		.byte	71
 2427 01cb 47        		.byte	71
 2428 01cc E6        		.byte	-26
 2429 01cd 23        		.byte	35
 2430 01ce 0E        		.byte	14
 2431 01cf 52        		.byte	82
 2432 01d0 7D        		.byte	125
 2433 01d1 15        		.byte	21
 2434 01d2 5A        		.byte	90
 2435 01d3 A6        		.byte	-90
 2436 01d4 8E        		.byte	-114
 2437 01d5 40        		.byte	64
 2438 01d6 88        		.byte	-120
 2439 01d7 5E        		.byte	94
 2440 01d8 02        		.byte	2
 2441 01d9 52        		.byte	82
 2442 01da BC        		.byte	-68
 2443 01db 15        		.byte	21
 2444 01dc 90        		.byte	-112
 2445 01dd 16        		.byte	22
 2446 01de 47        		.byte	71
 2447 01df D5        		.byte	-43
 2448 01e0 49        		.byte	73
 2449 01e1 B1        		.byte	-79
 2450 01e2 66        		.byte	102
 2451 01e3 3B        		.byte	59
 2452 01e4 C7        		.byte	-57
 2453 01e5 F9        		.byte	-7
 2454 01e6 49        		.byte	73
 2455 01e7 CE        		.byte	-50
 2456 01e8 C6        		.byte	-58
 2457 01e9 E4        		.byte	-28
 2458 01ea 47        		.byte	71
 2459 01eb C6        		.byte	-58
 2460 01ec 0B        		.byte	11
 2461 01ed 6F        		.byte	111
 2462 01ee 1E        		.byte	30
 2463 01ef 7A        		.byte	122
 2464 01f0 2E        		.byte	46
 2465 01f1 31        		.byte	49
 2466 01f2 E6        		.byte	-26
 2467 01f3 30        		.byte	48
 2468 01f4 F4        		.byte	-12
 2469 01f5 53        		.byte	83
 2470 01f6 01        		.byte	1
 2471 01f7 39        		.byte	57
 2472 01f8 3E        		.byte	62
 2473 01f9 F4        		.byte	-12
 2474 01fa 2D        		.byte	45
 2475 01fb C4        		.byte	-60
 2476 01fc D4        		.byte	-44
 2477 01fd 2F        		.byte	47
 2478 01fe 84        		.byte	-124
 2479 01ff AE        		.byte	-82
 2480 0200 5D        		.byte	93
 2481 0201 78        		.byte	120
 2482 0202 58        		.byte	88
 2483 0203 E3        		.byte	-29
 2484 0204 E5        		.byte	-27
 2485 0205 AC        		.byte	-84
 2486 0206 09        		.byte	9
 2487 0207 72        		.byte	114
 2488 0208 90        		.byte	-112
 2489 0209 24        		.byte	36
 2490 020a 30        		.byte	48
 2491 020b C7        		.byte	-57
 2492 020c 54        		.byte	84
 2493 020d 0E        		.byte	14
 2494 020e 3C        		.byte	60
 2495 020f 9B        		.byte	-101
 2496 0210 BF        		.byte	-65
 2497 0211 68        		.byte	104
 2498 0212 25        		.byte	37
 2499 0213 E5        		.byte	-27
 2500 0214 EC        		.byte	-20
 2501 0215 B7        		.byte	-73
 2502 0216 14        		.byte	20
 2503 0217 5E        		.byte	94
 2504 0218 67        		.byte	103
 2505 0219 A8        		.byte	-88
 2506 021a 85        		.byte	-123
 2507 021b BB        		.byte	-69
 2508 021c 80        		.byte	-128
 2509 021d 59        		.byte	89
 2510 021e 30        		.byte	48
 2511 021f C3        		.byte	-61
 2512 0220 E5        		.byte	-27
 2513 0221 29        		.byte	41
 2514 0222 D0        		.byte	-48
 2515 0223 57        		.byte	87
 2516 0224 14        		.byte	20
 2517 0225 2F        		.byte	47
 2518 0226 9B        		.byte	-101
 2519 0227 86        		.byte	-122
 2520 0228 E4        		.byte	-28
 2521 0229 0D        		.byte	13
 2522 022a 2D        		.byte	45
 2523 022b 5B        		.byte	91
 2524 022c 1F        		.byte	31
 2525 022d 23        		.byte	35
 2526 022e B0        		.byte	-80
 2527 022f 63        		.byte	99
 2528 0230 57        		.byte	87
 2529 0231 1A        		.byte	26
 2530 0232 DD        		.byte	-35
 2531 0233 1D        		.byte	29
 2532 0234 ED        		.byte	-19
 2533 0235 FA        		.byte	-6
 2534 0236 D3        		.byte	-45
 2535 0237 E5        		.byte	-27
 2536 0238 5B        		.byte	91
 2537 0239 06        		.byte	6
 2538 023a A6        		.byte	-90
 2539 023b 9E        		.byte	-98
 2540 023c F6        		.byte	-10
 2541 023d EC        		.byte	-20
 2542 023e D9        		.byte	-39
 2543 023f 26        		.byte	38
 2544 0240 2B        		.byte	43
 2545 0241 64        		.byte	100
 2546 0242 A9        		.byte	-87
 2547 0243 E6        		.byte	-26
 2548 0244 2F        		.byte	47
 2549 0245 BD        		.byte	-67
 2550 0246 8C        		.byte	-116
 2551 0247 5E        		.byte	94
 2552 0248 62        		.byte	98
 2553 0249 E4        		.byte	-28
 2554 024a 4A        		.byte	74
 2555 024b 3C        		.byte	60
 2556 024c 2B        		.byte	43
 2557 024d 56        		.byte	86
 2558 024e D9        		.byte	-39
 2559 024f 40        		.byte	64
 2560 0250 70        		.byte	112
 2561 0251 85        		.byte	-123
 2562 0252 1D        		.byte	29
 2563 0253 D8        		.byte	-40
 2564 0254 B3        		.byte	-77
 2565 0255 6C        		.byte	108
 2566 0256 DD        		.byte	-35
 2567 0257 A6        		.byte	-90
 2568 0258 94        		.byte	-108
 2569 0259 AB        		.byte	-85
 2570 025a 74        		.byte	116
 2571 025b 82        		.byte	-126
 2572 025c 2B        		.byte	43
 2573 025d BF        		.byte	-65
 2574 025e 75        		.byte	117
 2575 025f 9F        		.byte	-97
 2576 0260 BA        		.byte	-70
 2577 0261 2D        		.byte	45
 2578 0262 E4        		.byte	-28
 2579 0263 06        		.byte	6
 2580 0264 31        		.byte	49
 2581 0265 3D        		.byte	61
 2582 0266 98        		.byte	-104
 2583 0267 72        		.byte	114
 2584 0268 03        		.byte	3
 2585 0269 42        		.byte	66
 2586 026a DF        		.byte	-33
 2587 026b 25        		.byte	37
 2588 026c C1        		.byte	-63
 2589 026d A1        		.byte	-95
 2590 026e F6        		.byte	-10
 2591 026f AC        		.byte	-84
 2592 0270 A9        		.byte	-87
 2593 0271 39        		.byte	57
 2594 0272 85        		.byte	-123
 2595 0273 81        		.byte	-127
 2596 0274 F1        		.byte	-15
 2597 0275 A2        		.byte	-94
 2598 0276 D3        		.byte	-45
 2599 0277 03        		.byte	3
 2600 0278 B1        		.byte	-79
 2601 0279 C8        		.byte	-56
 2602 027a 52        		.byte	82
 2603 027b 89        		.byte	-119
 2604 027c 2F        		.byte	47
 2605 027d 7A        		.byte	122
 2606 027e B3        		.byte	-77
 2607 027f 53        		.byte	83
 2608 0280 4B        		.byte	75
 2609 0281 45        		.byte	69
 2610 0282 8A        		.byte	-118
 2611 0283 83        		.byte	-125
 2612 0284 42        		.byte	66
 2613 0285 F2        		.byte	-14
 2614 0286 10        		.byte	16
 2615 0287 AC        		.byte	-84
 2616 0288 9B        		.byte	-101
 2617 0289 90        		.byte	-112
 2618 028a 6D        		.byte	109
 2619 028b E1        		.byte	-31
 2620 028c E2        		.byte	-30
 2621 028d 37        		.byte	55
 2622 028e F6        		.byte	-10
 2623 028f FF        		.byte	-1
 2624 0290 BF        		.byte	-65
 2625 0291 93        		.byte	-109
 2626 0292 D0        		.byte	-48
 2627 0293 C2        		.byte	-62
 2628 0294 A6        		.byte	-90
 2629 0295 64        		.byte	100
 2630 0296 5C        		.byte	92
 2631 0297 87        		.byte	-121
 2632 0298 0D        		.byte	13
 2633 0299 3B        		.byte	59
 2634 029a E7        		.byte	-25
 2635 029b 33        		.byte	51
 2636 029c 65        		.byte	101
 2637 029d 8B        		.byte	-117
 2638 029e F6        		.byte	-10
 2639 029f 7D        		.byte	125
 2640 02a0 09        		.byte	9
 2641 02a1 90        		.byte	-112
 2642 02a2 52        		.byte	82
 2643 02a3 76        		.byte	118
 2644 02a4 8A        		.byte	-118
 2645 02a5 2D        		.byte	45
 2646 02a6 DD        		.byte	-35
 2647 02a7 7B        		.byte	123
 2648 02a8 1B        		.byte	27
 2649 02a9 C0        		.byte	-64
 2650 02aa F2        		.byte	-14
 2651 02ab 07        		.byte	7
 2652 02ac 14        		.byte	20
 2653 02ad 29        		.byte	41
 2654 02ae 73        		.byte	115
 2655 02af 50        		.byte	80
 2656 02b0 05        		.byte	5
 2657 02b1 D7        		.byte	-41
 2658 02b2 12        		.byte	18
 2659 02b3 21        		.byte	33
 2660 02b4 FF        		.byte	-1
 2661 02b5 CC        		.byte	-52
 2662 02b6 07        		.byte	7
 2663 02b7 55        		.byte	85
 2664 02b8 C9        		.byte	-55
 2665 02b9 59        		.byte	89
 2666 02ba 7A        		.byte	122
 2667 02bb 3F        		.byte	63
 2668 02bc 12        		.byte	18
 2669 02bd CF        		.byte	-49
 2670 02be 15        		.byte	21
 2671 02bf C9        		.byte	-55
 2672 02c0 6B        		.byte	107
 2673 02c1 D1        		.byte	-47
 2674 02c2 63        		.byte	99
 2675 02c3 D9        		.byte	-39
 2676 02c4 E2        		.byte	-30
 2677 02c5 12        		.byte	18
 2678 02c6 E3        		.byte	-29
 2679 02c7 AD        		.byte	-83
 2680 02c8 7A        		.byte	122
 2681 02c9 EA        		.byte	-22
 2682 02ca A7        		.byte	-89
 2683 02cb 89        		.byte	-119
 2684 02cc D8        		.byte	-40
 2685 02cd A6        		.byte	-90
 2686 02ce 6C        		.byte	108
 2687 02cf 1E        		.byte	30
 2688 02d0 F5        		.byte	-11
 2689 02d1 CD        		.byte	-51
 2690 02d2 BB        		.byte	-69
 2691 02d3 C0        		.byte	-64
 2692 02d4 50        		.byte	80
 2693 02d5 41        		.byte	65
 2694 02d6 45        		.byte	69
 2695 02d7 6A        		.byte	106
 2696 02d8 64        		.byte	100
 2697 02d9 C2        		.byte	-62
 2698 02da 36        		.byte	54
 2699 02db DC        		.byte	-36
 2700 02dc 67        		.byte	103
 2701 02dd 06        		.byte	6
 2702 02de 4D        		.byte	77
 2703 02df 6C        		.byte	108
 2704 02e0 42        		.byte	66
 2705 02e1 A1        		.byte	-95
 2706 02e2 E5        		.byte	-27
 2707 02e3 71        		.byte	113
 2708 02e4 35        		.byte	53
 2709 02e5 F2        		.byte	-14
 2710 02e6 42        		.byte	66
 2711 02e7 56        		.byte	86
 2712 02e8 BB        		.byte	-69
 2713 02e9 37        		.byte	55
 2714 02ea 51        		.byte	81
 2715 02eb F0        		.byte	-16
 2716 02ec D2        		.byte	-46
 2717 02ed A3        		.byte	-93
 2718 02ee 6F        		.byte	111
 2719 02ef FA        		.byte	-6
 2720 02f0 D2        		.byte	-46
 2721 02f1 EB        		.byte	-21
 2722 02f2 4F        		.byte	79
 2723 02f3 F0        		.byte	-16
 2724 02f4 CB        		.byte	-53
 2725 02f5 97        		.byte	-105
 2726 02f6 DD        		.byte	-35
 2727 02f7 22        		.byte	34
 2728 02f8 72        		.byte	114
 2729 02f9 71        		.byte	113
 2730 02fa 59        		.byte	89
 2731 02fb 47        		.byte	71
 2732 02fc FB        		.byte	-5
 2733 02fd BA        		.byte	-70
 2734 02fe 6E        		.byte	110
 2735 02ff 5B        		.byte	91
 2736 0300 A8        		.byte	-88
 2737 0301 70        		.byte	112
 2738 0302 32        		.byte	50
 2739 0303 0D        		.byte	13
 2740 0304 59        		.byte	89
 2741 0305 E0        		.byte	-32
 2742 0306 39        		.byte	57
 2743 0307 F6        		.byte	-10
 2744 0308 50        		.byte	80
 2745 0309 36        		.byte	54
 2746 030a F2        		.byte	-14
 2747 030b 43        		.byte	67
 2748 030c 5C        		.byte	92
 2749 030d F4        		.byte	-12
 2750 030e 89        		.byte	-119
 2751 030f C7        		.byte	-57
 2752 0310 1C        		.byte	28
 2753 0311 6C        		.byte	108
 2754 0312 7F        		.byte	127
 2755 0313 24        		.byte	36
 2756 0314 3E        		.byte	62
 2757 0315 B5        		.byte	-75
 2758 0316 C2        		.byte	-62
 2759 0317 DB        		.byte	-37
 2760 0318 1F        		.byte	31
 2761 0319 82        		.byte	-126
 2762 031a CE        		.byte	-50
 2763 031b 3B        		.byte	59
 2764 031c 8D        		.byte	-115
 2765 031d BC        		.byte	-68
 2766 031e 39        		.byte	57
 2767 031f DB        		.byte	-37
 2768 0320 AB        		.byte	-85
 2769 0321 70        		.byte	112
 2770 0322 83        		.byte	-125
 2771 0323 05        		.byte	5
 2772 0324 23        		.byte	35
 2773 0325 4B        		.byte	75
 2774 0326 59        		.byte	89
 2775 0327 CD        		.byte	-51
 2776 0328 2A        		.byte	42
 2777 0329 22        		.byte	34
 2778 032a 51        		.byte	81
 2779 032b 13        		.byte	19
 2780 032c 89        		.byte	-119
 2781 032d A6        		.byte	-90
 2782 032e 4D        		.byte	77
 2783 032f 91        		.byte	-111
 2784 0330 B9        		.byte	-71
 2785 0331 8E        		.byte	-114
 2786 0332 30        		.byte	48
 2787 0333 40        		.byte	64
 2788 0334 8C        		.byte	-116
 2789 0335 AC        		.byte	-84
 2790 0336 84        		.byte	-124
 2791 0337 D7        		.byte	-41
 2792 0338 9B        		.byte	-101
 2793 0339 A3        		.byte	-93
 2794 033a 6C        		.byte	108
 2795 033b 4B        		.byte	75
 2796 033c A2        		.byte	-94
 2797 033d 6A        		.byte	106
 2798 033e 8A        		.byte	-118
 2799 033f 25        		.byte	37
 2800 0340 2F        		.byte	47
 2801 0341 09        		.byte	9
 2802 0342 27        		.byte	39
 2803 0343 EB        		.byte	-21
 2804 0344 F7        		.byte	-9
 2805 0345 F7        		.byte	-9
 2806 0346 16        		.byte	22
 2807 0347 7D        		.byte	125
 2808 0348 4C        		.byte	76
 2809 0349 8B        		.byte	-117
 2810 034a 7E        		.byte	126
 2811 034b 17        		.byte	23
 2812 034c 7A        		.byte	122
 2813 034d 43        		.byte	67
 2814 034e 00        		.byte	0
 2815 034f 0C        		.byte	12
 2816 0350 80        		.byte	-128
 2817 0351 B0        		.byte	-80
 2818 0352 16        		.byte	22
 2819 0353 58        		.byte	88
 2820 0354 01        		.byte	1
 2821 0355 9C        		.byte	-100
 2822 0356 F8        		.byte	-8
 2823 0357 A6        		.byte	-90
 2824 0358 0E        		.byte	14
 2825 0359 64        		.byte	100
 2826 035a 5F        		.byte	95
 2827 035b BF        		.byte	-65
 2828 035c F1        		.byte	-15
 2829 035d C4        		.byte	-60
 2830 035e 6D        		.byte	109
 2831 035f 1B        		.byte	27
 2832 0360 47        		.byte	71
 2833 0361 2D        		.byte	45
 2834 0362 DE        		.byte	-34
 2835 0363 2A        		.byte	42
 2836 0364 7A        		.byte	122
 2837 0365 04        		.byte	4
 2838 0366 FE        		.byte	-2
 2839 0367 E9        		.byte	-23
 2840 0368 C2        		.byte	-62
 2841 0369 9E        		.byte	-98
 2842 036a A6        		.byte	-90
 2843 036b BF        		.byte	-65
 2844 036c 90        		.byte	-112
 2845 036d 74        		.byte	116
 2846 036e 72        		.byte	114
 2847 036f D6        		.byte	-42
 2848 0370 A9        		.byte	-87
 2849 0371 53        		.byte	83
 2850 0372 65        		.byte	101
 2851 0373 F4        		.byte	-12
 2852 0374 69        		.byte	105
 2853 0375 D5        		.byte	-43
 2854 0376 58        		.byte	88
 2855 0377 90        		.byte	-112
 2856 0378 A8        		.byte	-88
 2857 0379 8D        		.byte	-115
 2858 037a 3C        		.byte	60
 2859 037b 3A        		.byte	58
 2860 037c 86        		.byte	-122
 2861 037d 49        		.byte	73
 2862 037e 6F        		.byte	111
 2863 037f DF        		.byte	-33
 2864 0380 A7        		.byte	-89
 2865 0381 33        		.byte	51
 2866 0382 B1        		.byte	-79
 2867 0383 68        		.byte	104
 2868 0384 39        		.byte	57
 2869 0385 51        		.byte	81
 2870 0386 82        		.byte	-126
 2871 0387 DE        		.byte	-34
 2872 0388 F2        		.byte	-14
 2873 0389 69        		.byte	105
 2874 038a AC        		.byte	-84
 2875 038b 9B        		.byte	-101
 2876 038c 93        		.byte	-109
 2877 038d 38        		.byte	56
 2878 038e 50        		.byte	80
 2879 038f 5B        		.byte	91
 2880 0390 19        		.byte	25
 2881 0391 5B        		.byte	91
 2882 0392 C2        		.byte	-62
 2883 0393 14        		.byte	20
 2884 0394 9C        		.byte	-100
 2885 0395 18        		.byte	24
 2886 0396 0E        		.byte	14
 2887 0397 4C        		.byte	76
 2888 0398 2F        		.byte	47
 2889 0399 F1        		.byte	-15
 2890 039a FA        		.byte	-6
 2891 039b D4        		.byte	-44
 2892 039c B6        		.byte	-74
 2893 039d 5F        		.byte	95
 2894 039e B9        		.byte	-71
 2895 039f B8        		.byte	-72
 2896 03a0 47        		.byte	71
 2897 03a1 A4        		.byte	-92
 2898 03a2 EB        		.byte	-21
 2899 03a3 DD        		.byte	-35
 2900 03a4 CE        		.byte	-50
 2901 03a5 46        		.byte	70
 2902 03a6 8D        		.byte	-115
 2903 03a7 21        		.byte	33
 2904 03a8 88        		.byte	-120
 2905 03a9 C3        		.byte	-61
 2906 03aa A6        		.byte	-90
 2907 03ab AE        		.byte	-82
 2908 03ac 07        		.byte	7
 2909 03ad 4E        		.byte	78
 2910 03ae BF        		.byte	-65
 2911 03af B6        		.byte	-74
 2912 03b0 8C        		.byte	-116
 2913 03b1 3A        		.byte	58
 2914 03b2 14        		.byte	20
 2915 03b3 BD        		.byte	-67
 2916 03b4 99        		.byte	-103
 2917 03b5 A0        		.byte	-96
 2918 03b6 34        		.byte	52
 2919 03b7 49        		.byte	73
 2920 03b8 E2        		.byte	-30
 2921 03b9 AD        		.byte	-83
 2922 03ba 68        		.byte	104
 2923 03bb B0        		.byte	-80
 2924 03bc 45        		.byte	69
 2925 03bd CF        		.byte	-49
 2926 03be BC        		.byte	-68
 2927 03bf 27        		.byte	39
 2928 03c0 66        		.byte	102
 2929 03c1 CC        		.byte	-52
 2930 03c2 EB        		.byte	-21
 2931 03c3 B9        		.byte	-71
 2932 03c4 14        		.byte	20
 2933 03c5 3C        		.byte	60
 2934 03c6 15        		.byte	21
 2935 03c7 B9        		.byte	-71
 2936 03c8 53        		.byte	83
 2937 03c9 37        		.byte	55
 2938 03ca 26        		.byte	38
 2939 03cb 3A        		.byte	58
 2940 03cc 61        		.byte	97
 2941 03cd 4E        		.byte	78
 2942 03ce 1E        		.byte	30
 2943 03cf 2F        		.byte	47
 2944 03d0 1F        		.byte	31
 2945 03d1 1B        		.byte	27
 2946 03d2 33        		.byte	51
 2947 03d3 54        		.byte	84
 2948 03d4 87        		.byte	-121
 2949 03d5 A1        		.byte	-95
 2950 03d6 17        		.byte	23
 2951 03d7 8C        		.byte	-116
 2952 03d8 DF        		.byte	-33
 2953 03d9 AA        		.byte	-86
 2954 03da 51        		.byte	81
 2955 03db 79        		.byte	121
 2956 03dc 55        		.byte	85
 2957 03dd F2        		.byte	-14
 2958 03de A5        		.byte	-91
 2959 03df 35        		.byte	53
 2960 03e0 38        		.byte	56
 2961 03e1 63        		.byte	99
 2962 03e2 87        		.byte	-121
 2963 03e3 2B        		.byte	43
 2964 03e4 93        		.byte	-109
 2965 03e5 04        		.byte	4
 2966 03e6 31        		.byte	49
 2967 03e7 54        		.byte	84
 2968 03e8 01        		.byte	1
 2969 03e9 04        		.byte	4
 2970 03ea 28        		.byte	40
 2971 03eb 2F        		.byte	47
 2972 03ec 0C        		.byte	12
 2973 03ed 2A        		.byte	42
 2974 03ee 34        		.byte	52
 2975 03ef 6C        		.byte	108
 2976 03f0 1D        		.byte	29
 2977 03f1 39        		.byte	57
 2978 03f2 3E        		.byte	62
 2979 03f3 53        		.byte	83
 2980 03f4 86        		.byte	-122
 2981 03f5 F2        		.byte	-14
 2982 03f6 B4        		.byte	-76
 2983 03f7 0E        		.byte	14
 2984 03f8 48        		.byte	72
 2985 03f9 1C        		.byte	28
 2986 03fa CA        		.byte	-54
 2987 03fb B4        		.byte	-76
 2988 03fc 57        		.byte	87
 2989 03fd 1D        		.byte	29
 2990 03fe 4C        		.byte	76
 2991 03ff 8D        		.byte	-115
 2992 0400 96        		.byte	-106
 2993 0401 6C        		.byte	108
 2994 0402 2C        		.byte	44
 2995 0403 99        		.byte	-103
 2996 0404 1E        		.byte	30
 2997 0405 E3        		.byte	-29
 2998 0406 73        		.byte	115
 2999 0407 DA        		.byte	-38
 3000 0408 C1        		.byte	-63
 3001 0409 7D        		.byte	125
 3002 040a 11        		.byte	17
 3003 040b 79        		.byte	121
 3004 040c 65        		.byte	101
 3005 040d E1        		.byte	-31
 3006 040e E2        		.byte	-30
 3007 040f EF        		.byte	-17
 3008 0410 A5        		.byte	-91
 3009 0411 B8        		.byte	-72
 3010 0412 7F        		.byte	127
 3011 0413 A2        		.byte	-94
 3012 0414 68        		.byte	104
 3013 0415 0F        		.byte	15
 3014 0416 8A        		.byte	-118
 3015 0417 59        		.byte	89
 3016 0418 BE        		.byte	-66
 3017 0419 F2        		.byte	-14
 3018 041a EE        		.byte	-18
 3019 041b 0D        		.byte	13
 3020 041c 8F        		.byte	-113
 3021 041d 70        		.byte	112
 3022 041e 0A        		.byte	10
 3023 041f 72        		.byte	114
 3024 0420 E7        		.byte	-25
 3025 0421 71        		.byte	113
 3026 0422 E9        		.byte	-23
 3027 0423 82        		.byte	-126
 3028 0424 08        		.byte	8
 3029 0425 78        		.byte	120
 3030 0426 A6        		.byte	-90
 3031 0427 6C        		.byte	108
 3032 0428 3B        		.byte	59
 3033 0429 FF        		.byte	-1
 3034 042a 8C        		.byte	-116
 3035 042b 3A        		.byte	58
 3036 042c 02        		.byte	2
 3037 042d FC        		.byte	-4
 3038 042e CB        		.byte	-53
 3039 042f 4F        		.byte	79
 3040 0430 94        		.byte	-108
 3041 0431 9A        		.byte	-102
 3042 0432 8F        		.byte	-113
 3043 0433 77        		.byte	119
 3044 0434 1F        		.byte	31
 3045 0435 65        		.byte	101
 3046 0436 26        		.byte	38
 3047 0437 27        		.byte	39
 3048 0438 AE        		.byte	-82
 3049 0439 E2        		.byte	-30
 3050 043a 6B        		.byte	107
 3051 043b 50        		.byte	80
 3052 043c 7A        		.byte	122
 3053 043d B8        		.byte	-72
 3054 043e 28        		.byte	40
 3055 043f F7        		.byte	-9
 3056 0440 4B        		.byte	75
 3057 0441 7E        		.byte	126
 3058 0442 5A        		.byte	90
 3059 0443 6E        		.byte	110
 3060 0444 D9        		.byte	-39
 3061 0445 3D        		.byte	61
 3062 0446 07        		.byte	7
 3063 0447 80        		.byte	-128
 3064 0448 20        		.byte	32
 3065 0449 66        		.byte	102
 3066 044a 0A        		.byte	10
 3067 044b 34        		.byte	52
 3068 044c CA        		.byte	-54
 3069 044d 66        		.byte	102
 3070 044e CD        		.byte	-51
 3071 044f D2        		.byte	-46
 3072 0450 B9        		.byte	-71
 3073 0451 54        		.byte	84
 3074 0452 EA        		.byte	-22
 3075 0453 26        		.byte	38
 3076 0454 E2        		.byte	-30
 3077 0455 AD        		.byte	-83
 3078 0456 5B        		.byte	91
 3079 0457 91        		.byte	-111
 3080 0458 61        		.byte	97
 3081 0459 11        		.byte	17
 3082 045a 26        		.byte	38
 3083 045b DB        		.byte	-37
 3084 045c DD        		.byte	-35
 3085 045d 7B        		.byte	123
 3086 045e 05        		.byte	5
 3087 045f 5E        		.byte	94
 3088 0460 FA        		.byte	-6
 3089 0461 2E        		.byte	46
 3090 0462 DB        		.byte	-37
 3091 0463 96        		.byte	-106
 3092 0464 CF        		.byte	-49
 3093 0465 57        		.byte	87
 3094 0466 DC        		.byte	-36
 3095 0467 DA        		.byte	-38
 3096 0468 C3        		.byte	-61
 3097 0469 CA        		.byte	-54
 3098 046a 00        		.byte	0
 3099 046b 01        		.byte	1
 3100 046c 5E        		.byte	94
 3101 046d C9        		.byte	-55
 3102 046e 25        		.byte	37
 3103 046f E2        		.byte	-30
 3104 0470 B3        		.byte	-77
 3105 0471 46        		.byte	70
 3106 0472 30        		.byte	48
 3107 0473 76        		.byte	118
 3108 0474 3A        		.byte	58
 3109 0475 BF        		.byte	-65
 3110 0476 BC        		.byte	-68
 3111 0477 7D        		.byte	125
 3112 0478 2D        		.byte	45
 3113 0479 02        		.byte	2
 3114 047a E1        		.byte	-31
 3115 047b 41        		.byte	65
 3116 047c B6        		.byte	-74
 3117 047d AA        		.byte	-86
 3118 047e 8E        		.byte	-114
 3119 047f 71        		.byte	113
 3120 0480 58        		.byte	88
 3121 0481 11        		.byte	17
 3122 0482 51        		.byte	81
 3123 0483 D7        		.byte	-41
 3124 0484 09        		.byte	9
 3125 0485 29        		.byte	41
 3126 0486 D4        		.byte	-44
 3127 0487 DF        		.byte	-33
 3128 0488 E3        		.byte	-29
 3129 0489 E6        		.byte	-26
 3130 048a 04        		.byte	4
 3131 048b 34        		.byte	52
 3132 048c 6F        		.byte	111
 3133 048d 7D        		.byte	125
 3134 048e 29        		.byte	41
 3135 048f 18        		.byte	24
 3136 0490 13        		.byte	19
 3137 0491 06        		.byte	6
 3138 0492 EB        		.byte	-21
 3139 0493 B4        		.byte	-76
 3140 0494 5A        		.byte	90
 3141 0495 B5        		.byte	-75
 3142 0496 9C        		.byte	-100
 3143 0497 7E        		.byte	126
 3144 0498 22        		.byte	34
 3145 0499 45        		.byte	69
 3146 049a 23        		.byte	35
 3147 049b 7A        		.byte	122
 3148 049c 02        		.byte	2
 3149 049d E6        		.byte	-26
 3150 049e 27        		.byte	39
 3151 049f 6C        		.byte	108
 3152 04a0 D9        		.byte	-39
 3153 04a1 60        		.byte	96
 3154 04a2 48        		.byte	72
 3155 04a3 C3        		.byte	-61
 3156 04a4 F6        		.byte	-10
 3157 04a5 BB        		.byte	-69
 3158 04a6 56        		.byte	86
 3159 04a7 B2        		.byte	-78
 3160 04a8 36        		.byte	54
 3161 04a9 5E        		.byte	94
 3162 04aa BD        		.byte	-67
 3163 04ab 7E        		.byte	126
 3164 04ac D8        		.byte	-40
 3165 04ad A3        		.byte	-93
 3166 04ae 0D        		.byte	13
 3167 04af FD        		.byte	-3
 3168 04b0 EA        		.byte	-22
 3169 04b1 4F        		.byte	79
 3170 04b2 7D        		.byte	125
 3171 04b3 E9        		.byte	-23
 3172 04b4 55        		.byte	85
 3173 04b5 69        		.byte	105
 3174 04b6 5C        		.byte	92
 3175 04b7 B2        		.byte	-78
 3176 04b8 44        		.byte	68
 3177 04b9 4D        		.byte	77
 3178 04ba BC        		.byte	-68
 3179 04bb EE        		.byte	-18
 3180 04bc 2D        		.byte	45
 3181 04bd 5B        		.byte	91
 3182 04be 96        		.byte	-106
 3183 04bf 28        		.byte	40
 3184 04c0 95        		.byte	-107
 3185 04c1 9D        		.byte	-99
 3186 04c2 A9        		.byte	-87
 3187 04c3 37        		.byte	55
 3188 04c4 53        		.byte	83
 3189 04c5 CE        		.byte	-50
 3190 04c6 2F        		.byte	47
 3191 04c7 65        		.byte	101
 3192 04c8 D8        		.byte	-40
 3193 04c9 5A        		.byte	90
 3194 04ca 01        		.byte	1
 3195 04cb D8        		.byte	-40
 3196 04cc 11        		.byte	17
 3197 04cd F6        		.byte	-10
 3198 04ce CC        		.byte	-52
 3199 04cf 69        		.byte	105
 3200 04d0 20        		.byte	32
 3201 04d1 57        		.byte	87
 3202 04d2 2F        		.byte	47
 3203 04d3 1D        		.byte	29
 3204 04d4 0F        		.byte	15
 3205 04d5 E2        		.byte	-30
 3206 04d6 8C        		.byte	-116
 3207 04d7 C7        		.byte	-57
 3208 04d8 57        		.byte	87
 3209 04d9 04        		.byte	4
 3210 04da 7F        		.byte	127
 3211 04db FE        		.byte	-2
 3212 04dc 3E        		.byte	62
 3213 04dd 5C        		.byte	92
 3214 04de 57        		.byte	87
 3215 04df 1E        		.byte	30
 3216 04e0 81        		.byte	-127
 3217 04e1 BA        		.byte	-70
 3218 04e2 5B        		.byte	91
 3219 04e3 39        		.byte	57
 3220 04e4 E9        		.byte	-23
 3221 04e5 2E        		.byte	46
 3222 04e6 4E        		.byte	78
 3223 04e7 8F        		.byte	-113
 3224 04e8 1F        		.byte	31
 3225 04e9 21        		.byte	33
 3226 04ea 33        		.byte	51
 3227 04eb 91        		.byte	-111
 3228 04ec 79        		.byte	121
 3229 04ed C0        		.byte	-64
 3230 04ee A0        		.byte	-96
 3231 04ef 3F        		.byte	63
 3232 04f0 2C        		.byte	44
 3233 04f1 9F        		.byte	-97
 3234 04f2 F4        		.byte	-12
 3235 04f3 FE        		.byte	-2
 3236 04f4 B7        		.byte	-73
 3237 04f5 AC        		.byte	-84
 3238 04f6 6E        		.byte	110
 3239 04f7 D3        		.byte	-45
 3240 04f8 86        		.byte	-122
 3241 04f9 2E        		.byte	46
 3242 04fa 2F        		.byte	47
 3243 04fb 2C        		.byte	44
 3244 04fc 79        		.byte	121
 3245 04fd 4F        		.byte	79
 3246 04fe DC        		.byte	-36
 3247 04ff 2B        		.byte	43
 3248 0500 56        		.byte	86
 3249 0501 1E        		.byte	30
 3250 0502 70        		.byte	112
 3251 0503 50        		.byte	80
 3252 0504 F1        		.byte	-15
 3253 0505 58        		.byte	88
 3254 0506 52        		.byte	82
 3255 0507 B8        		.byte	-72
 3256 0508 7D        		.byte	125
 3257 0509 B2        		.byte	-78
 3258 050a 9A        		.byte	-102
 3259 050b 86        		.byte	-122
 3260 050c 01        		.byte	1
 3261 050d 31        		.byte	49
 3262 050e E4        		.byte	-28
 3263 050f 16        		.byte	22
 3264 0510 0C        		.byte	12
 3265 0511 EC        		.byte	-20
 3266 0512 5E        		.byte	94
 3267 0513 0B        		.byte	11
 3268 0514 A6        		.byte	-90
 3269 0515 5E        		.byte	94
 3270 0516 6D        		.byte	109
 3271 0517 37        		.byte	55
 3272 0518 EE        		.byte	-18
 3273 0519 FC        		.byte	-4
 3274 051a 18        		.byte	24
 3275 051b 9E        		.byte	-98
 3276 051c 5E        		.byte	94
 3277 051d B8        		.byte	-72
 3278 051e 7E        		.byte	126
 3279 051f CA        		.byte	-54
 3280 0520 68        		.byte	104
 3281 0521 51        		.byte	81
 3282 0522 8C        		.byte	-116
 3283 0523 23        		.byte	35
 3284 0524 7E        		.byte	126
 3285 0525 03        		.byte	3
 3286 0526 CF        		.byte	-49
 3287 0527 9E        		.byte	-98
 3288 0528 AF        		.byte	-81
 3289 0529 53        		.byte	83
 3290 052a 36        		.byte	54
 3291 052b F9        		.byte	-7
 3292 052c B3        		.byte	-77
 3293 052d AB        		.byte	-85
 3294 052e 01        		.byte	1
 3295 052f DE        		.byte	-34
 3296 0530 25        		.byte	37
 3297 0531 65        		.byte	101
 3298 0532 55        		.byte	85
 3299 0533 F0        		.byte	-16
 3300 0534 7D        		.byte	125
 3301 0535 D3        		.byte	-45
 3302 0536 97        		.byte	-105
 3303 0537 2F        		.byte	47
 3304 0538 59        		.byte	89
 3305 0539 B9        		.byte	-71
 3306 053a D6        		.byte	-42
 3307 053b A1        		.byte	-95
 3308 053c D6        		.byte	-42
 3309 053d 6D        		.byte	109
 3310 053e A4        		.byte	-92
 3311 053f 18        		.byte	24
 3312 0540 C7        		.byte	-57
 3313 0541 15        		.byte	21
 3314 0542 F9        		.byte	-7
 3315 0543 B3        		.byte	-77
 3316 0544 78        		.byte	120
 3317 0545 A2        		.byte	-94
 3318 0546 62        		.byte	98
 3319 0547 0E        		.byte	14
 3320 0548 0A        		.byte	10
 3321 0549 1F        		.byte	31
 3322 054a CD        		.byte	-51
 3323 054b AD        		.byte	-83
 3324 054c 37        		.byte	55
 3325 054d B4        		.byte	-76
 3326 054e 28        		.byte	40
 3327 054f A2        		.byte	-94
 3328 0550 18        		.byte	24
 3329 0551 A3        		.byte	-93
 3330 0552 46        		.byte	70
 3331 0553 10        		.byte	16
 3332 0554 93        		.byte	-109
 3333 0555 D1        		.byte	-47
 3334 0556 18        		.byte	24
 3335 0557 33        		.byte	51
 3336 0558 47        		.byte	71
 3337 0559 88        		.byte	-120
 3338 055a BE        		.byte	-66
 3339 055b 17        		.byte	23
 3340 055c EE        		.byte	-18
 3341 055d 21        		.byte	33
 3342 055e 10        		.byte	16
 3343 055f 47        		.byte	71
 3344 0560 15        		.byte	21
 3345 0561 6A        		.byte	106
 3346 0562 C0        		.byte	-64
 3347 0563 A5        		.byte	-91
 3348 0564 1C        		.byte	28
 3349 0565 0C        		.byte	12
 3350 0566 4D        		.byte	77
 3351 0567 82        		.byte	-126
 3352 0568 09        		.byte	9
 3353 0569 33        		.byte	51
 3354 056a C3        		.byte	-61
 3355 056b 05        		.byte	5
 3356 056c B7        		.byte	-73
 3357 056d 50        		.byte	80
 3358 056e 84        		.byte	-124
 3359 056f BB        		.byte	-69
 3360 0570 36        		.byte	54
 3361 0571 EC        		.byte	-20
 3362 0572 FC        		.byte	-4
 3363 0573 14        		.byte	20
 3364 0574 E9        		.byte	-23
 3365 0575 18        		.byte	24
 3366 0576 BD        		.byte	-67
 3367 0577 69        		.byte	105
 3368 0578 F3        		.byte	-13
 3369 0579 60        		.byte	96
 3370 057a C7        		.byte	-57
 3371 057b 52        		.byte	82
 3372 057c 7B        		.byte	123
 3373 057d F3        		.byte	-13
 3374 057e 15        		.byte	21
 3375 057f EA        		.byte	-22
 3376 0580 37        		.byte	55
 3377 0581 2F        		.byte	47
 3378 0582 D3        		.byte	-45
 3379 0583 67        		.byte	103
 3380 0584 04        		.byte	4
 3381 0585 A4        		.byte	-92
 3382 0586 29        		.byte	41
 3383 0587 56        		.byte	86
 3384 0588 A5        		.byte	-91
 3385 0589 E4        		.byte	-28
 3386 058a 5A        		.byte	90
 3387 058b 86        		.byte	-122
 3388 058c C1        		.byte	-63
 3389 058d 25        		.byte	37
 3390 058e 94        		.byte	-108
 3391 058f E9        		.byte	-23
 3392 0590 25        		.byte	37
 3393 0591 EB        		.byte	-21
 3394 0592 80        		.byte	-128
 3395 0593 B0        		.byte	-80
 3396 0594 13        		.byte	19
 3397 0595 D6        		.byte	-42
 3398 0596 03        		.byte	3
 3399 0597 E3        		.byte	-29
 3400 0598 E6        		.byte	-26
 3401 0599 4D        		.byte	77
 3402 059a 55        		.byte	85
 3403 059b C8        		.byte	-56
 3404 059c D4        		.byte	-44
 3405 059d E0        		.byte	-32
 3406 059e E9        		.byte	-23
 3407 059f A8        		.byte	-88
 3408 05a0 59        		.byte	89
 3409 05a1 94        		.byte	-108
 3410 05a2 C6        		.byte	-58
 3411 05a3 53        		.byte	83
 3412 05a4 5A        		.byte	90
 3413 05a5 CC        		.byte	-52
 3414 05a6 E6        		.byte	-26
 3415 05a7 CC        		.byte	-52
 3416 05a8 CA        		.byte	-54
 3417 05a9 67        		.byte	103
 3418 05aa 16        		.byte	22
 3419 05ab 7F        		.byte	127
 3420 05ac 6E        		.byte	110
 3421 05ad D8        		.byte	-40
 3422 05ae 29        		.byte	41
 3423 05af 43        		.byte	67
 3424 05b0 36        		.byte	54
 3425 05b1 C1        		.byte	-63
 3426 05b2 39        		.byte	57
 3427 05b3 EF        		.byte	-17
 3428 05b4 B9        		.byte	-71
 3429 05b5 76        		.byte	118
 3430 05b6 3A        		.byte	58
 3431 05b7 85        		.byte	-123
 3432 05b8 81        		.byte	-127
 3433 05b9 1D        		.byte	29
 3434 05ba EE        		.byte	-18
 3435 05bb ED        		.byte	-19
 3436 05bc 3C        		.byte	60
 3437 05bd A9        		.byte	-87
 3438 05be AA        		.byte	-86
 3439 05bf 24        		.byte	36
 3440 05c0 12        		.byte	18
 3441 05c1 44        		.byte	68
 3442 05c2 3D        		.byte	61
 3443 05c3 5B        		.byte	91
 3444 05c4 04        		.byte	4
 3445 05c5 98        		.byte	-104
 3446 05c6 8E        		.byte	-114
 3447 05c7 C7        		.byte	-57
 3448 05c8 A9        		.byte	-87
 3449 05c9 CE        		.byte	-50
 3450 05ca BF        		.byte	-65
 3451 05cb 08        		.byte	8
 3452 05cc 10        		.byte	16
 3453 05cd A1        		.byte	-95
 3454 05ce D2        		.byte	-46
 3455 05cf C7        		.byte	-57
 3456 05d0 DD        		.byte	-35
 3457 05d1 23        		.byte	35
 3458 05d2 98        		.byte	-104
 3459 05d3 63        		.byte	99
 3460 05d4 D4        		.byte	-44
 3461 05d5 8A        		.byte	-118
 3462 05d6 E0        		.byte	-32
 3463 05d7 31        		.byte	49
 3464 05d8 AF        		.byte	-81
 3465 05d9 80        		.byte	-128
 3466 05da 00        		.byte	0
 3467 05db F1        		.byte	-15
 3468 05dc 01        		.byte	1
 3469 05dd 52        		.byte	82
 3470 05de BA        		.byte	-70
 3471 05df 54        		.byte	84
 3472 05e0 9E        		.byte	-98
 3473 05e1 79        		.byte	121
 3474 05e2 F1        		.byte	-15
 3475 05e3 65        		.byte	101
 3476 05e4 76        		.byte	118
 3477 05e5 05        		.byte	5
 3478 05e6 BE        		.byte	-66
 3479 05e7 FE        		.byte	-2
 3480 05e8 2A        		.byte	42
 3481 05e9 81        		.byte	-127
 3482 05ea 86        		.byte	-122
 3483 05eb 1E        		.byte	30
 3484 05ec BB        		.byte	-69
 3485 05ed 3D        		.byte	61
 3486 05ee 4D        		.byte	77
 3487 05ef 91        		.byte	-111
 3488 05f0 2E        		.byte	46
 3489 05f1 76        		.byte	118
 3490 05f2 2A        		.byte	42
 3491 05f3 9F        		.byte	-97
 3492 05f4 BA        		.byte	-70
 3493 05f5 EB        		.byte	-21
 3494 05f6 AC        		.byte	-84
 3495 05f7 73        		.byte	115
 3496 05f8 4C        		.byte	76
 3497 05f9 26        		.byte	38
 3498 05fa 16        		.byte	22
 3499 05fb D1        		.byte	-47
 3500 05fc CE        		.byte	-50
 3501 05fd 53        		.byte	83
 3502 05fe C3        		.byte	-61
 3503 05ff 0D        		.byte	13
 3504 0600 9D        		.byte	-99
 3505 0601 C1        		.byte	-63
 3506 0602 E0        		.byte	-32
 3507 0603 0A        		.byte	10
 3508 0604 D3        		.byte	-45
 3509 0605 C3        		.byte	-61
 3510 0606 0C        		.byte	12
 3511 0607 AE        		.byte	-82
 3512 0608 CA        		.byte	-54
 3513 0609 02        		.byte	2
 3514 060a D5        		.byte	-43
 3515 060b 9F        		.byte	-97
 3516 060c 12        		.byte	18
 3517 060d E5        		.byte	-27
 3518 060e 4D        		.byte	77
 3519 060f 28        		.byte	40
 3520 0610 D7        		.byte	-41
 3521 0611 45        		.byte	69
 3522 0612 8A        		.byte	-118
 3523 0613 2D        		.byte	45
 3524 0614 CB        		.byte	-53
 3525 0615 5C        		.byte	92
 3526 0616 05        		.byte	5
 3527 0617 B7        		.byte	-73
 3528 0618 63        		.byte	99
 3529 0619 4B        		.byte	75
 3530 061a 24        		.byte	36
 3531 061b 8B        		.byte	-117
 3532 061c E2        		.byte	-30
 3533 061d 31        		.byte	49
 3534 061e AD        		.byte	-83
 3535 061f 1D        		.byte	29
 3536 0620 CF        		.byte	-49
 3537 0621 66        		.byte	102
 3538 0622 CD        		.byte	-51
 3539 0623 7C        		.byte	124
 3540 0624 7B        		.byte	123
 3541 0625 6A        		.byte	106
 3542 0626 38        		.byte	56
 3543 0627 50        		.byte	80
 3544 0628 5A        		.byte	90
 3545 0629 6C        		.byte	108
 3546 062a 59        		.byte	89
 3547 062b 29        		.byte	41
 3548 062c BE        		.byte	-66
 3549 062d 20        		.byte	32
 3550 062e 6C        		.byte	108
 3551 062f F8        		.byte	-8
 3552 0630 1C        		.byte	28
 3553 0631 ED        		.byte	-19
 3554 0632 67        		.byte	103
 3555 0633 47        		.byte	71
 3556 0634 8E        		.byte	-114
 3557 0635 CA        		.byte	-54
 3558 0636 D7        		.byte	-41
 3559 0637 6D        		.byte	109
 3560 0638 10        		.byte	16
 3561 0639 A4        		.byte	-92
 3562 063a 2C        		.byte	44
 3563 063b AD        		.byte	-83
 3564 063c 6B        		.byte	107
 3565 063d 7B        		.byte	123
 3566 063e CF        		.byte	-49
 3567 063f DD        		.byte	-35
 3568 0640 79        		.byte	121
 3569 0641 FB        		.byte	-5
 3570 0642 54        		.byte	84
 3571 0643 B0        		.byte	-80
 3572 0644 40        		.byte	64
 3573 0645 7D        		.byte	125
 3574 0646 CC        		.byte	-52
 3575 0647 38        		.byte	56
 3576 0648 07        		.byte	7
 3577 0649 2E        		.byte	46
 3578 064a 27        		.byte	39
 3579 064b 55        		.byte	85
 3580 064c 14        		.byte	20
 3581 064d 00        		.byte	0
 3582 064e 01        		.byte	1
 3583 064f DA        		.byte	-38
 3584 0650 6A        		.byte	106
 3585 0651 69        		.byte	105
 3586 0652 7A        		.byte	122
 3587 0653 15        		.byte	21
 3588 0654 BC        		.byte	-68
 3589 0655 7B        		.byte	123
 3590 0656 35        		.byte	53
 3591 0657 81        		.byte	-127
 3592 0658 86        		.byte	-122
 3593 0659 E8        		.byte	-24
 3594 065a 25        		.byte	37
 3595 065b 9A        		.byte	-102
 3596 065c 87        		.byte	-121
 3597 065d 68        		.byte	104
 3598 065e F2        		.byte	-14
 3599 065f 06        		.byte	6
 3600 0660 C5        		.byte	-59
 3601 0661 09        		.byte	9
 3602 0662 0A        		.byte	10
 3603 0663 34        		.byte	52
 3604 0664 75        		.byte	117
 3605 0665 BF        		.byte	-65
 3606 0666 FF        		.byte	-1
 3607 0667 EA        		.byte	-22
 3608 0668 D5        		.byte	-43
 3609 0669 B1        		.byte	-79
 3610 066a 5B        		.byte	91
 3611 066b 01        		.byte	1
 3612 066c 03        		.byte	3
 3613 066d D3        		.byte	-45
 3614 066e 38        		.byte	56
 3615 066f 9E        		.byte	-98
 3616 0670 24        		.byte	36
 3617 0671 EE        		.byte	-18
 3618 0672 C5        		.byte	-59
 3619 0673 83        		.byte	-125
 3620 0674 A0        		.byte	-96
 3621 0675 5A        		.byte	90
 3622 0676 1D        		.byte	29
 3623 0677 15        		.byte	21
 3624 0678 94        		.byte	-108
 3625 0679 78        		.byte	120
 3626 067a 50        		.byte	80
 3627 067b 91        		.byte	-111
 3628 067c 23        		.byte	35
 3629 067d 10        		.byte	16
 3630 067e E1        		.byte	-31
 3631 067f 79        		.byte	121
 3632 0680 49        		.byte	73
 3633 0681 2F        		.byte	47
 3634 0682 B2        		.byte	-78
 3635 0683 25        		.byte	37
 3636 0684 97        		.byte	-105
 3637 0685 FA        		.byte	-6
 3638 0686 29        		.byte	41
 3639 0687 8F        		.byte	-113
 3640 0688 14        		.byte	20
 3641 0689 2A        		.byte	42
 3642 068a 55        		.byte	85
 3643 068b 66        		.byte	102
 3644 068c 3A        		.byte	58
 3645 068d 72        		.byte	114
 3646 068e CE        		.byte	-50
 3647 068f 0D        		.byte	13
 3648 0690 5A        		.byte	90
 3649 0691 C3        		.byte	-61
 3650 0692 87        		.byte	-121
 3651 0693 D3        		.byte	-45
 3652 0694 93        		.byte	-109
 3653 0695 41        		.byte	65
 3654 0696 F8        		.byte	-8
 3655 0697 02        		.byte	2
 3656 0698 05        		.byte	5
 3657 0699 27        		.byte	39
 3658 069a D9        		.byte	-39
 3659 069b A4        		.byte	-92
 3660 069c 9C        		.byte	-100
 3661 069d D7        		.byte	-41
 3662 069e EE        		.byte	-18
 3663 069f FF        		.byte	-1
 3664 06a0 D1        		.byte	-47
 3665 06a1 3D        		.byte	61
 3666 06a2 CB        		.byte	-53
 3667 06a3 77        		.byte	119
 3668 06a4 DD        		.byte	-35
 3669 06a5 9B        		.byte	-101
 3670 06a6 37        		.byte	55
 3671 06a7 B4        		.byte	-76
 3672 06a8 29        		.byte	41
 3673 06a9 8F        		.byte	-113
 3674 06aa FB        		.byte	-5
 3675 06ab E5        		.byte	-27
 3676 06ac EA        		.byte	-22
 3677 06ad 18        		.byte	24
 3678 06ae E7        		.byte	-25
 3679 06af 39        		.byte	57
 3680 06b0 A6        		.byte	-90
 3681 06b1 E3        		.byte	-29
 3682 06b2 84        		.byte	-124
 3683 06b3 B8        		.byte	-72
 3684 06b4 E8        		.byte	-24
 3685 06b5 1A        		.byte	26
 3686 06b6 B8        		.byte	-72
 3687 06b7 CE        		.byte	-50
 3688 06b8 38        		.byte	56
 3689 06b9 AC        		.byte	-84
 3690 06ba CC        		.byte	-52
 3691 06bb 7D        		.byte	125
 3692 06bc DA        		.byte	-38
 3693 06bd 75        		.byte	117
 3694 06be 44        		.byte	68
 3695 06bf 8B        		.byte	-117
 3696 06c0 33        		.byte	51
 3697 06c1 0F        		.byte	15
 3698 06c2 A7        		.byte	-89
 3699 06c3 75        		.byte	117
 3700 06c4 82        		.byte	-126
 3701 06c5 43        		.byte	67
 3702 06c6 F9        		.byte	-7
 3703 06c7 A6        		.byte	-90
 3704 06c8 EB        		.byte	-21
 3705 06c9 F4        		.byte	-12
 3706 06ca 13        		.byte	19
 3707 06cb 06        		.byte	6
 3708 06cc 30        		.byte	48
 3709 06cd A4        		.byte	-92
 3710 06ce BA        		.byte	-70
 3711 06cf 54        		.byte	84
 3712 06d0 45        		.byte	69
 3713 06d1 9D        		.byte	-99
 3714 06d2 2C        		.byte	44
 3715 06d3 AD        		.byte	-83
 3716 06d4 D4        		.byte	-44
 3717 06d5 FA        		.byte	-6
 3718 06d6 05        		.byte	5
 3719 06d7 B7        		.byte	-73
 3720 06d8 4E        		.byte	78
 3721 06d9 9D        		.byte	-99
 3722 06da C9        		.byte	-55
 3723 06db 1A        		.byte	26
 3724 06dc 27        		.byte	39
 3725 06dd 1E        		.byte	30
 3726 06de A8        		.byte	-88
 3727 06df 9C        		.byte	-100
 3728 06e0 A7        		.byte	-89
 3729 06e1 8B        		.byte	-117
 3730 06e2 AB        		.byte	-85
 3731 06e3 C2        		.byte	-62
 3732 06e4 80        		.byte	-128
 3733 06e5 20        		.byte	32
 3734 06e6 C1        		.byte	-63
 3735 06e7 4D        		.byte	77
 3736 06e8 F8        		.byte	-8
 3737 06e9 F4        		.byte	-12
 3738 06ea 81        		.byte	-127
 3739 06eb AB        		.byte	-85
 3740 06ec 4D        		.byte	77
 3741 06ed B2        		.byte	-78
 3742 06ee C2        		.byte	-62
 3743 06ef EB        		.byte	-21
 3744 06f0 A2        		.byte	-94
 3745 06f1 C2        		.byte	-62
 3746 06f2 C6        		.byte	-58
 3747 06f3 B7        		.byte	-73
 3748 06f4 5E        		.byte	94
 3749 06f5 87        		.byte	-121
 3750 06f6 35        		.byte	53
 3751 06f7 42        		.byte	66
 3752 06f8 86        		.byte	-122
 3753 06f9 C3        		.byte	-61
 3754 06fa 80        		.byte	-128
 3755 06fb D7        		.byte	-41
 3756 06fc A7        		.byte	-89
 3757 06fd A8        		.byte	-88
 3758 06fe 9F        		.byte	-97
 3759 06ff B1        		.byte	-79
 3760 0700 A4        		.byte	-92
 3761 0701 92        		.byte	-110
 3762 0702 8B        		.byte	-117
 3763 0703 EA        		.byte	-22
 3764 0704 CD        		.byte	-51
 3765 0705 85        		.byte	-123
 3766 0706 2B        		.byte	43
 3767 0707 1E        		.byte	30
 3768 0708 FB        		.byte	-5
 3769 0709 0F        		.byte	15
 3770 070a 6C        		.byte	108
 3771 070b 12        		.byte	18
 3772 070c 3E        		.byte	62
 3773 070d 78        		.byte	120
 3774 070e 94        		.byte	-108
 3775 070f 23        		.byte	35
 3776 0710 FB        		.byte	-5
 3777 0711 E7        		.byte	-25
 3778 0712 5D        		.byte	93
 3779 0713 98        		.byte	-104
 3780 0714 CA        		.byte	-54
 3781 0715 D3        		.byte	-45
 3782 0716 48        		.byte	72
 3783 0717 4D        		.byte	77
 3784 0718 F2        		.byte	-14
 3785 0719 23        		.byte	35
 3786 071a A8        		.byte	-88
 3787 071b 9F        		.byte	-97
 3788 071c 99        		.byte	-103
 3789 071d E8        		.byte	-24
 3790 071e 9E        		.byte	-98
 3791 071f C0        		.byte	-64
 3792 0720 19        		.byte	25
 3793 0721 6D        		.byte	109
 3794 0722 FB        		.byte	-5
 3795 0723 BE        		.byte	-66
 3796 0724 9A        		.byte	-102
 3797 0725 CC        		.byte	-52
 3798 0726 E8        		.byte	-24
 3799 0727 1A        		.byte	26
 3800 0728 0F        		.byte	15
 3801 0729 1A        		.byte	26
 3802 072a 6A        		.byte	106
 3803 072b E9        		.byte	-23
 3804 072c 6F        		.byte	111
 3805 072d EE        		.byte	-18
 3806 072e 6E        		.byte	110
 3807 072f DA        		.byte	-38
 3808 0730 94        		.byte	-108
 3809 0731 B9        		.byte	-71
 3810 0732 AE        		.byte	-82
 3811 0733 85        		.byte	-123
 3812 0734 7A        		.byte	122
 3813 0735 DF        		.byte	-33
 3814 0736 85        		.byte	-123
 3815 0737 2F        		.byte	47
 3816 0738 12        		.byte	18
 3817 0739 3D        		.byte	61
 3818 073a C7        		.byte	-57
 3819 073b B3        		.byte	-77
 3820 073c 7E        		.byte	126
 3821 073d CE        		.byte	-50
 3822 073e 40        		.byte	64
 3823 073f 91        		.byte	-111
 3824 0740 90        		.byte	-112
 3825 0741 07        		.byte	7
 3826 0742 DB        		.byte	-37
 3827 0743 65        		.byte	101
 3828 0744 E8        		.byte	-24
 3829 0745 EA        		.byte	-22
 3830 0746 93        		.byte	-109
 3831 0747 E9        		.byte	-23
 3832 0748 84        		.byte	-124
 3833 0749 09        		.byte	9
 3834 074a 25        		.byte	37
 3835 074b A9        		.byte	-87
 3836 074c D1        		.byte	-47
 3837 074d 81        		.byte	-127
 3838 074e 68        		.byte	104
 3839 074f E3        		.byte	-29
 3840 0750 D0        		.byte	-48
 3841 0751 0D        		.byte	13
 3842 0752 1A        		.byte	26
 3843 0753 7B        		.byte	123
 3844 0754 96        		.byte	-106
 3845 0755 EB        		.byte	-21
 3846 0756 22        		.byte	34
 3847 0757 2C        		.byte	44
 3848 0758 BE        		.byte	-66
 3849 0759 F5        		.byte	-11
 3850 075a 69        		.byte	105
 3851 075b 54        		.byte	84
 3852 075c 72        		.byte	114
 3853 075d 23        		.byte	35
 3854 075e 47        		.byte	71
 3855 075f 6C        		.byte	108
 3856 0760 72        		.byte	114
 3857 0761 78        		.byte	120
 3858 0762 FD        		.byte	-3
 3859 0763 BB        		.byte	-69
 3860 0764 93        		.byte	-109
 3861 0765 82        		.byte	-126
 3862 0766 E4        		.byte	-28
 3863 0767 32        		.byte	50
 3864 0768 98        		.byte	-104
 3865 0769 34        		.byte	52
 3866 076a A5        		.byte	-91
 3867 076b F1        		.byte	-15
 3868 076c FB        		.byte	-5
 3869 076d B9        		.byte	-71
 3870 076e E9        		.byte	-23
 3871 076f 92        		.byte	-110
 3872 0770 B1        		.byte	-79
 3873 0771 F9        		.byte	-7
 3874 0772 14        		.byte	20
 3875 0773 AD        		.byte	-83
 3876 0774 7A        		.byte	122
 3877 0775 11        		.byte	17
 3878 0776 86        		.byte	-122
 3879 0777 2B        		.byte	43
 3880 0778 2C        		.byte	44
 3881 0779 18        		.byte	24
 3882 077a AD        		.byte	-83
 3883 077b 3E        		.byte	62
 3884 077c 00        		.byte	0
 3885 077d 7D        		.byte	125
 3886 077e 32        		.byte	50
 3887 077f C3        		.byte	-61
 3888 0780 BD        		.byte	-67
 3889 0781 C8        		.byte	-56
 3890 0782 CC        		.byte	-52
 3891 0783 D4        		.byte	-44
 3892 0784 BA        		.byte	-70
 3893 0785 64        		.byte	100
 3894 0786 67        		.byte	103
 3895 0787 31        		.byte	49
 3896 0788 B9        		.byte	-71
 3897 0789 02        		.byte	2
 3898 078a D8        		.byte	-40
 3899 078b B9        		.byte	-71
 3900 078c B5        		.byte	-75
 3901 078d 19        		.byte	25
 3902 078e 85        		.byte	-123
 3903 078f 8C        		.byte	-116
 3904 0790 C2        		.byte	-62
 3905 0791 32        		.byte	50
 3906 0792 CE        		.byte	-50
 3907 0793 97        		.byte	-105
 3908 0794 46        		.byte	70
 3909 0795 6A        		.byte	106
 3910 0796 9C        		.byte	-100
 3911 0797 B9        		.byte	-71
 3912 0798 D5        		.byte	-43
 3913 0799 70        		.byte	112
 3914 079a 46        		.byte	70
 3915 079b A0        		.byte	-96
 3916 079c 39        		.byte	57
 3917 079d EA        		.byte	-22
 3918 079e 66        		.byte	102
 3919 079f 65        		.byte	101
 3920 07a0 EA        		.byte	-22
 3921 07a1 AD        		.byte	-83
 3922 07a2 04        		.byte	4
 3923 07a3 BF        		.byte	-65
 3924 07a4 9D        		.byte	-99
 3925 07a5 DD        		.byte	-35
 3926 07a6 7B        		.byte	123
 3927 07a7 7E        		.byte	126
 3928 07a8 E1        		.byte	-31
 3929 07a9 34        		.byte	52
 3930 07aa 6B        		.byte	107
 3931 07ab 33        		.byte	51
 3932 07ac 2D        		.byte	45
 3933 07ad 78        		.byte	120
 3934 07ae C2        		.byte	-62
 3935 07af CD        		.byte	-51
 3936 07b0 9F        		.byte	-97
 3937 07b1 61        		.byte	97
 3938 07b2 EA        		.byte	-22
 3939 07b3 F4        		.byte	-12
 3940 07b4 3A        		.byte	58
 3941 07b5 FC        		.byte	-4
 3942 07b6 EB        		.byte	-21
 3943 07b7 BE        		.byte	-66
 3944 07b8 7A        		.byte	122
 3945 07b9 B5        		.byte	-75
 3946 07ba 74        		.byte	116
 3947 07bb BA        		.byte	-70
 3948 07bc 67        		.byte	103
 3949 07bd AE        		.byte	-82
 3950 07be 79        		.byte	121
 3951 07bf D6        		.byte	-42
 3952 07c0 8E        		.byte	-114
 3953 07c1 32        		.byte	50
 3954 07c2 38        		.byte	56
 3955 07c3 73        		.byte	115
 3956 07c4 04        		.byte	4
 3957 07c5 C0        		.byte	-64
 3958 07c6 09        		.byte	9
 3959 07c7 4B        		.byte	75
 3960 07c8 47        		.byte	71
 3961 07c9 2F        		.byte	47
 3962 07ca 33        		.byte	51
 3963 07cb AE        		.byte	-82
 3964 07cc 4D        		.byte	77
 3965 07cd B9        		.byte	-71
 3966 07ce 14        		.byte	20
 3967 07cf F4        		.byte	-12
 3968 07d0 EA        		.byte	-22
 3969 07d1 81        		.byte	-127
 3970 07d2 06        		.byte	6
 3971 07d3 8D        		.byte	-115
 3972 07d4 0A        		.byte	10
 3973 07d5 37        		.byte	55
 3974 07d6 1B        		.byte	27
 3975 07d7 B2        		.byte	-78
 3976 07d8 FE        		.byte	-2
 3977 07d9 4E        		.byte	78
 3978 07da 3E        		.byte	62
 3979 07db 7B        		.byte	123
 3980 07dc 7A        		.byte	122
 3981 07dd 2E        		.byte	46
 3982 07de 41        		.byte	65
 3983 07df CD        		.byte	-51
 3984 07e0 57        		.byte	87
 3985 07e1 35        		.byte	53
 3986 07e2 96        		.byte	-106
 3987 07e3 6E        		.byte	110
 3988 07e4 E1        		.byte	-31
 3989 07e5 9F        		.byte	-97
 3990 07e6 F4        		.byte	-12
 3991 07e7 84        		.byte	-124
 3992 07e8 93        		.byte	-109
 3993 07e9 17        		.byte	23
 3994 07ea 3A        		.byte	58
 3995 07eb 18        		.byte	24
 3996 07ec 88        		.byte	-120
 3997 07ed 45        		.byte	69
 3998 07ee 94        		.byte	-108
 3999 07ef 25        		.byte	37
 4000 07f0 23        		.byte	35
 4001 07f1 8C        		.byte	-116
 4002 07f2 6A        		.byte	106
 4003 07f3 D0        		.byte	-48
 4004 07f4 49        		.byte	73
 4005 07f5 85        		.byte	-123
 4006 07f6 38        		.byte	56
 4007 07f7 A2        		.byte	-94
 4008 07f8 CE        		.byte	-50
 4009 07f9 AB        		.byte	-85
 4010 07fa F9        		.byte	-7
 4011 07fb B3        		.byte	-77
 4012 07fc FA        		.byte	-6
 4013 07fd 38        		.byte	56
 4014 07fe 66        		.byte	102
 4015 07ff 33        		.byte	51
 4016 0800 C1        		.byte	-63
 4017 0801 58        		.byte	88
 4018 0802 63        		.byte	99
 4019 0803 1A        		.byte	26
 4020 0804 E8        		.byte	-24
 4021 0805 1C        		.byte	28
 4022 0806 93        		.byte	-109
 4023 0807 F3        		.byte	-13
 4024 0808 76        		.byte	118
 4025 0809 38        		.byte	56
 4026 080a 9F        		.byte	-97
 4027 080b 02        		.byte	2
 4028 080c 82        		.byte	-126
 4029 080d 15        		.byte	21
 4030 080e 35        		.byte	53
 4031 080f 81        		.byte	-127
 4032 0810 23        		.byte	35
 4033 0811 74        		.byte	116
 4034 0812 2E        		.byte	46
 4035 0813 E7        		.byte	-25
 4036 0814 59        		.byte	89
 4037 0815 01        		.byte	1
 4038 0816 72        		.byte	114
 4039 0817 A5        		.byte	-91
 4040 0818 D9        		.byte	-39
 4041 0819 38        		.byte	56
 4042 081a EC        		.byte	-20
 4043 081b C4        		.byte	-60
 4044 081c AE        		.byte	-82
 4045 081d 76        		.byte	118
 4046 081e FB        		.byte	-5
 4047 081f A2        		.byte	-94
 4048 0820 A6        		.byte	-90
 4049 0821 EB        		.byte	-21
 4050 0822 2D        		.byte	45
 4051 0823 5E        		.byte	94
 4052 0824 6C        		.byte	108
 4053 0825 F2        		.byte	-14
 4054 0826 A3        		.byte	-93
 4055 0827 B7        		.byte	-73
 4056 0828 83        		.byte	-125
 4057 0829 C5        		.byte	-59
 4058 082a 29        		.byte	41
 4059 082b 72        		.byte	114
 4060 082c 16        		.byte	22
 4061 082d 70        		.byte	112
 4062 082e 9E        		.byte	-98
 4063 082f 66        		.byte	102
 4064 0830 FA        		.byte	-6
 4065 0831 E9        		.byte	-23
 4066 0832 BD        		.byte	-67
 4067 0833 8C        		.byte	-116
 4068 0834 49        		.byte	73
 4069 0835 84        		.byte	-124
 4070 0836 80        		.byte	-128
 4071 0837 22        		.byte	34
 4072 0838 C2        		.byte	-62
 4073 0839 5E        		.byte	94
 4074 083a D9        		.byte	-39
 4075 083b C7        		.byte	-57
 4076 083c 83        		.byte	-125
 4077 083d DA        		.byte	-38
 4078 083e 3E        		.byte	62
 4079 083f 9B        		.byte	-101
 4080 0840 2B        		.byte	43
 4081 0841 37        		.byte	55
 4082 0842 5F        		.byte	95
 4083 0843 1E        		.byte	30
 4084 0844 DA        		.byte	-38
 4085 0845 6D        		.byte	109
 4086 0846 80        		.byte	-128
 4087 0847 63        		.byte	99
 4088 0848 2A        		.byte	42
 4089 0849 A8        		.byte	-88
 4090 084a 73        		.byte	115
 4091 084b C6        		.byte	-58
 4092 084c 6B        		.byte	107
 4093 084d B4        		.byte	-76
 4094 084e D5        		.byte	-43
 4095 084f B6        		.byte	-74
 4096 0850 39        		.byte	57
 4097 0851 0B        		.byte	11
 4098 0852 FD        		.byte	-3
 4099 0853 74        		.byte	116
 4100 0854 2D        		.byte	45
 4101 0855 00        		.byte	0
 4102 0856 C2        		.byte	-62
 4103 0857 7C        		.byte	124
 4104 0858 1B        		.byte	27
 4105 0859 91        		.byte	-111
 4106 085a F8        		.byte	-8
 4107 085b 43        		.byte	67
 4108 085c 3D        		.byte	61
 4109 085d 5A        		.byte	90
 4110 085e B2        		.byte	-78
 4111 085f 37        		.byte	55
 4112 0860 6D        		.byte	109
 4113 0861 3F        		.byte	63
 4114 0862 60        		.byte	96
 4115 0863 C1        		.byte	-63
 4116 0864 65        		.byte	101
 4117 0865 A8        		.byte	-88
 4118 0866 E7        		.byte	-25
 4119 0867 94        		.byte	-108
 4120 0868 AF        		.byte	-81
 4121 0869 56        		.byte	86
 4122 086a 7D        		.byte	125
 4123 086b 19        		.byte	25
 4124 086c 79        		.byte	121
 4125 086d 10        		.byte	16
 4126 086e A2        		.byte	-94
 4127 086f A7        		.byte	-89
 4128 0870 E9        		.byte	-23
 4129 0871 15        		.byte	21
 4130 0872 36        		.byte	54
 4131 0873 4C        		.byte	76
 4132 0874 0C        		.byte	12
 4133 0875 5E        		.byte	94
 4134 0876 3D        		.byte	61
 4135 0877 CB        		.byte	-53
 4136 0878 39        		.byte	57
 4137 0879 BA        		.byte	-70
 4138 087a 5A        		.byte	90
 4139 087b FE        		.byte	-2
 4140 087c DB        		.byte	-37
 4141 087d 6D        		.byte	109
 4142 087e AA        		.byte	-86
 4143 087f C2        		.byte	-62
 4144 0880 0C        		.byte	12
 4145 0881 1B        		.byte	27
 4146 0882 70        		.byte	112
 4147 0883 3A        		.byte	58
 4148 0884 73        		.byte	115
 4149 0885 21        		.byte	33
 4150 0886 AF        		.byte	-81
 4151 0887 8C        		.byte	-116
 4152 0888 2E        		.byte	46
 4153 0889 7C        		.byte	124
 4154 088a 6C        		.byte	108
 4155 088b BF        		.byte	-65
 4156 088c 19        		.byte	25
 4157 088d 69        		.byte	105
 4158 088e B1        		.byte	-79
 4159 088f 80        		.byte	-128
 4160 0890 BF        		.byte	-65
 4161 0891 D4        		.byte	-44
 4162 0892 75        		.byte	117
 4163 0893 BD        		.byte	-67
 4164 0894 A0        		.byte	-96
 4165 0895 92        		.byte	-110
 4166 0896 C2        		.byte	-62
 4167 0897 76        		.byte	118
 4168 0898 89        		.byte	-119
 4169 0899 27        		.byte	39
 4170 089a 0C        		.byte	12
 4171 089b 1D        		.byte	29
 4172 089c E0        		.byte	-32
 4173 089d C1        		.byte	-63
 4174 089e 16        		.byte	22
 4175 089f 9B        		.byte	-101
 4176 08a0 2E        		.byte	46
 4177 08a1 3D        		.byte	61
 4178 08a2 AF        		.byte	-81
 4179 08a3 E0        		.byte	-32
 4180 08a4 6F        		.byte	111
 4181 08a5 58        		.byte	88
 4182 08a6 6A        		.byte	106
 4183 08a7 F2        		.byte	-14
 4184 08a8 25        		.byte	37
 4185 08a9 BA        		.byte	-70
 4186 08aa 84        		.byte	-124
 4187 08ab A5        		.byte	-91
 4188 08ac 2F        		.byte	47
 4189 08ad 5F        		.byte	95
 4190 08ae 17        		.byte	23
 4191 08af 12        		.byte	18
 4192 08b0 D2        		.byte	-46
 4193 08b1 27        		.byte	39
 4194 08b2 DE        		.byte	-34
 4195 08b3 E8        		.byte	-24
 4196 08b4 D4        		.byte	-44
 4197 08b5 CF        		.byte	-49
 4198 08b6 8A        		.byte	-118
 4199 08b7 B3        		.byte	-77
 4200 08b8 86        		.byte	-122
 4201 08b9 DC        		.byte	-36
 4202 08ba 43        		.byte	67
 4203 08bb 5A        		.byte	90
 4204 08bc 59        		.byte	89
 4205 08bd E3        		.byte	-29
 4206 08be C6        		.byte	-58
 4207 08bf ED        		.byte	-19
 4208 08c0 D1        		.byte	-47
 4209 08c1 34        		.byte	52
 4210 08c2 1A        		.byte	26
 4211 08c3 C0        		.byte	-64
 4212 08c4 A4        		.byte	-92
 4213 08c5 1E        		.byte	30
 4214 08c6 2E        		.byte	46
 4215 08c7 B9        		.byte	-71
 4216 08c8 5A        		.byte	90
 4217 08c9 B6        		.byte	-74
 4218 08ca 2C        		.byte	44
 4219 08cb DA        		.byte	-38
 4220 08cc FB        		.byte	-5
 4221 08cd 60        		.byte	96
 4222 08ce 93        		.byte	-109
 4223 08cf D2        		.byte	-46
 4224 08d0 A1        		.byte	-95
 4225 08d1 F5        		.byte	-11
 4226 08d2 99        		.byte	-103
 4227 08d3 36        		.byte	54
 4228 08d4 69        		.byte	105
 4229 08d5 8E        		.byte	-114
 4230 08d6 AE        		.byte	-82
 4231 08d7 6D        		.byte	109
 4232 08d8 94        		.byte	-108
 4233 08d9 10        		.byte	16
 4234 08da FD        		.byte	-3
 4235 08db 6B        		.byte	107
 4236 08dc 81        		.byte	-127
 4237 08dd 03        		.byte	3
 4238 08de F9        		.byte	-7
 4239 08df A0        		.byte	-96
 4240 08e0 B6        		.byte	-74
 4241 08e1 6C        		.byte	108
 4242 08e2 36        		.byte	54
 4243 08e3 1A        		.byte	26
 4244 08e4 31        		.byte	49
 4245 08e5 B5        		.byte	-75
 4246 08e6 37        		.byte	55
 4247 08e7 94        		.byte	-108
 4248 08e8 54        		.byte	84
 4249 08e9 4F        		.byte	79
 4250 08ea D9        		.byte	-39
 4251 08eb 68        		.byte	104
 4252 08ec D0        		.byte	-48
 4253 08ed 0F        		.byte	15
 4254 08ee 99        		.byte	-103
 4255 08ef 82        		.byte	-126
 4256 08f0 22        		.byte	34
 4257 08f1 46        		.byte	70
 4258 08f2 49        		.byte	73
 4259 08f3 C4        		.byte	-60
 4260 08f4 A9        		.byte	-87
 4261 08f5 B9        		.byte	-71
 4262 08f6 3D        		.byte	61
 4263 08f7 29        		.byte	41
 4264 08f8 E0        		.byte	-32
 4265 08f9 E7        		.byte	-25
 4266 08fa 1E        		.byte	30
 4267 08fb 17        		.byte	23
 4268 08fc 2E        		.byte	46
 4269 08fd DB        		.byte	-37
 4270 08fe 2F        		.byte	47
 4271 08ff BD        		.byte	-67
 4272 0900 BE        		.byte	-66
 4273 0901 C3        		.byte	-61
 4274 0902 15        		.byte	21
 4275 0903 7F        		.byte	127
 4276 0904 DE        		.byte	-34
 4277 0905 DD        		.byte	-35
 4278 0906 3F        		.byte	63
 4279 0907 16        		.byte	22
 4280 0908 F6        		.byte	-10
 4281 0909 CC        		.byte	-52
 4282 090a 0C        		.byte	12
 4283 090b 6F        		.byte	111
 4284 090c 4F        		.byte	79
 4285 090d 83        		.byte	-125
 4286 090e A1        		.byte	-95
 4287 090f 9B        		.byte	-101
 4288 0910 64        		.byte	100
 4289 0911 11        		.byte	17
 4290 0912 3F        		.byte	63
 4291 0913 44        		.byte	68
 4292 0914 75        		.byte	117
 4293 0915 1F        		.byte	31
 4294 0916 82        		.byte	-126
 4295 0917 75        		.byte	117
 4296 0918 1F        		.byte	31
 4297 0919 D1        		.byte	-47
 4298 091a 1C        		.byte	28
 4299 091b BF        		.byte	-65
 4300 091c A4        		.byte	-92
 4301 091d 0B        		.byte	11
 4302 091e 85        		.byte	-123
 4303 091f B0        		.byte	-80
 4304 0920 AE        		.byte	-82
 4305 0921 CF        		.byte	-49
 4306 0922 04        		.byte	4
 4307 0923 41        		.byte	65
 4308 0924 71        		.byte	113
 4309 0925 00        		.byte	0
 4310 0926 DD        		.byte	-35
 4311 0927 6B        		.byte	107
 4312 0928 15        		.byte	21
 4313 0929 9B        		.byte	-101
 4314 092a 0E        		.byte	14
 4315 092b 34        		.byte	52
 4316 092c 0E        		.byte	14
 4317 092d B9        		.byte	-71
 4318 092e 19        		.byte	25
 4319 092f D8        		.byte	-40
 4320 0930 D2        		.byte	-46
 4321 0931 FB        		.byte	-5
 4322 0932 9C        		.byte	-100
 4323 0933 6E        		.byte	110
 4324 0934 16        		.byte	22
 4325 0935 4C        		.byte	76
 4326 0936 22        		.byte	34
 4327 0937 A4        		.byte	-92
 4328 0938 7C        		.byte	124
 4329 0939 75        		.byte	117
 4330 093a B2        		.byte	-78
 4331 093b 4C        		.byte	76
 4332 093c 9F        		.byte	-97
 4333 093d FA        		.byte	-6
 4334 093e 9F        		.byte	-97
 4335 093f B5        		.byte	-75
 4336 0940 29        		.byte	41
 4337 0941 2C        		.byte	44
 4338 0942 12        		.byte	18
 4339 0943 51        		.byte	81
 4340 0944 28        		.byte	40
 4341 0945 30        		.byte	48
 4342 0946 FB        		.byte	-5
 4343 0947 D6        		.byte	-42
 4344 0948 98        		.byte	-104
 4345 0949 46        		.byte	70
 4346 094a 35        		.byte	53
 4347 094b 5B        		.byte	91
 4348 094c 72        		.byte	114
 4349 094d 9F        		.byte	-97
 4350 094e 11        		.byte	17
 4351 094f 16        		.byte	22
 4352 0950 77        		.byte	119
 4353 0951 C2        		.byte	-62
 4354 0952 72        		.byte	114
 4355 0953 9F        		.byte	-97
 4356 0954 13        		.byte	19
 4357 0955 37        		.byte	55
 4358 0956 35        		.byte	53
 4359 0957 44        		.byte	68
 4360 0958 8E        		.byte	-114
 4361 0959 3D        		.byte	61
 4362 095a FE        		.byte	-2
 4363 095b BA        		.byte	-70
 4364 095c 15        		.byte	21
 4365 095d 69        		.byte	105
 4366 095e 13        		.byte	19
 4367 095f 07        		.byte	7
 4368 0960 2E        		.byte	46
 4369 0961 5D        		.byte	93
 4370 0962 29        		.byte	41
 4371 0963 73        		.byte	115
 4372 0964 41        		.byte	65
 4373 0965 E1        		.byte	-31
 4374 0966 80        		.byte	-128
 4375 0967 87        		.byte	-121
 4376 0968 CF        		.byte	-49
 4377 0969 BF        		.byte	-65
 4378 096a 1C        		.byte	28
 4379 096b 7D        		.byte	125
 4380 096c 9A        		.byte	-102
 4381 096d 94        		.byte	-108
 4382 096e 81        		.byte	-127
 4383 096f 7E        		.byte	126
 4384 0970 3C        		.byte	60
 4385 0971 BA        		.byte	-70
 4386 0972 8E        		.byte	-114
 4387 0973 5B        		.byte	91
 4388 0974 7A        		.byte	122
 4389 0975 74        		.byte	116
 4390 0976 BC        		.byte	-68
 4391 0977 7C        		.byte	124
 4392 0978 8F        		.byte	-113
 4393 0979 1E        		.byte	30
 4394 097a 93        		.byte	-109
 4395 097b 50        		.byte	80
 4396 097c E7        		.byte	-25
 4397 097d 1E        		.byte	30
 4398 097e 28        		.byte	40
 4399 097f 01        		.byte	1
 4400 0980 A3        		.byte	-93
 4401 0981 77        		.byte	119
 4402 0982 1B        		.byte	27
 4403 0983 63        		.byte	99
 4404 0984 6F        		.byte	111
 4405 0985 1E        		.byte	30
 4406 0986 FB        		.byte	-5
 4407 0987 BA        		.byte	-70
 4408 0988 3A        		.byte	58
 4409 0989 34        		.byte	52
 4410 098a E3        		.byte	-29
 4411 098b 2E        		.byte	46
 4412 098c E8        		.byte	-24
 4413 098d 5C        		.byte	92
 4414 098e 79        		.byte	121
 4415 098f 42        		.byte	66
 4416 0990 5E        		.byte	94
 4417 0991 BF        		.byte	-65
 4418 0992 EC        		.byte	-20
 4419 0993 BF        		.byte	-65
 4420 0994 A4        		.byte	-92
 4421 0995 48        		.byte	72
 4422 0996 1B        		.byte	27
 4423 0997 7B        		.byte	123
 4424 0998 37        		.byte	55
 4425 0999 2A        		.byte	42
 4426 099a DE        		.byte	-34
 4427 099b BE        		.byte	-66
 4428 099c 5D        		.byte	93
 4429 099d 31        		.byte	49
 4430 099e 3B        		.byte	59
 4431 099f CC        		.byte	-52
 4432 09a0 59        		.byte	89
 4433 09a1 02        		.byte	2
 4434 09a2 3E        		.byte	62
 4435 09a3 AE        		.byte	-82
 4436 09a4 8F        		.byte	-113
 4437 09a5 1E        		.byte	30
 4438 09a6 A9        		.byte	-87
 4439 09a7 86        		.byte	-122
 4440 09a8 B8        		.byte	-72
 4441 09a9 1D        		.byte	29
 4442 09aa FB        		.byte	-5
 4443 09ab 46        		.byte	70
 4444 09ac A7        		.byte	-89
 4445 09ad FC        		.byte	-4
 4446 09ae 0A        		.byte	10
 4447 09af 35        		.byte	53
 4448 09b0 C4        		.byte	-60
 4449 09b1 89        		.byte	-119
 4450 09b2 58        		.byte	88
 4451 09b3 C0        		.byte	-64
 4452 09b4 62        		.byte	98
 4453 09b5 52        		.byte	82
 4454 09b6 7F        		.byte	127
 4455 09b7 DF        		.byte	-33
 4456 09b8 09        		.byte	9
 4457 09b9 54        		.byte	84
 4458 09ba EF        		.byte	-17
 4459 09bb A5        		.byte	-91
 4460 09bc B9        		.byte	-71
 4461 09bd 80        		.byte	-128
 4462 09be 00        		.byte	0
 4463 09bf 74        		.byte	116
 4464 09c0 A8        		.byte	-88
 4465 09c1 C7        		.byte	-57
 4466 09c2 45        		.byte	69
 4467 09c3 19        		.byte	25
 4468 09c4 C0        		.byte	-64
 4469 09c5 A1        		.byte	-95
 4470 09c6 CD        		.byte	-51
 4471 09c7 0F        		.byte	15
 4472 09c8 39        		.byte	57
 4473 09c9 29        		.byte	41
 4474 09ca 64        		.byte	100
 4475 09cb 50        		.byte	80
 4476 09cc 99        		.byte	-103
 4477 09cd F3        		.byte	-13
 4478 09ce A6        		.byte	-90
 4479 09cf B9        		.byte	-71
 4480 09d0 30        		.byte	48
 4481 09d1 F6        		.byte	-10
 4482 09d2 56        		.byte	86
 4483 09d3 1A        		.byte	26
 4484 09d4 F4        		.byte	-12
 4485 09d5 63        		.byte	99
 4486 09d6 DB        		.byte	-37
 4487 09d7 01        		.byte	1
 4488 09d8 B9        		.byte	-71
 4489 09d9 A7        		.byte	-89
 4490 09da 4E        		.byte	78
 4491 09db EB        		.byte	-21
 4492 09dc 90        		.byte	-112
 4493 09dd 97        		.byte	-105
 4494 09de 94        		.byte	-108
 4495 09df 7F        		.byte	127
 4496 09e0 BE        		.byte	-66
 4497 09e1 C8        		.byte	-56
 4498 09e2 D0        		.byte	-48
 4499 09e3 17        		.byte	23
 4500 09e4 F4        		.byte	-12
 4501 09e5 5C        		.byte	92
 4502 09e6 99        		.byte	-103
 4503 09e7 B8        		.byte	-72
 4504 09e8 0E        		.byte	14
 4505 09e9 9D        		.byte	-99
 4506 09ea AA        		.byte	-86
 4507 09eb DB        		.byte	-37
 4508 09ec 5D        		.byte	93
 4509 09ed 8B        		.byte	-117
 4510 09ee 35        		.byte	53
 4511 09ef F5        		.byte	-11
 4512 09f0 1E        		.byte	30
 4513 09f1 EE        		.byte	-18
 4514 09f2 63        		.byte	99
 4515 09f3 10        		.byte	16
 4516 09f4 C5        		.byte	-59
 4517 09f5 A2        		.byte	-94
 4518 09f6 53        		.byte	83
 4519 09f7 3F        		.byte	63
 4520 09f8 67        		.byte	103
 4521 09f9 DC        		.byte	-36
 4522 09fa 01        		.byte	1
 4523 09fb F9        		.byte	-7
 4524 09fc 76        		.byte	118
 4525 09fd E9        		.byte	-23
 4526 09fe 39        		.byte	57
 4527 09ff 54        		.byte	84
 4528 0a00 3E        		.byte	62
 4529 0a01 CE        		.byte	-50
 4530 0a02 8C        		.byte	-116
 4531 0a03 57        		.byte	87
 4532 0a04 31        		.byte	49
 4533 0a05 41        		.byte	65
 4534 0a06 C6        		.byte	-58
 4535 0a07 39        		.byte	57
 4536 0a08 AD        		.byte	-83
 4537 0a09 6E        		.byte	110
 4538 0a0a E8        		.byte	-24
 4539 0a0b 11        		.byte	17
 4540 0a0c 9B        		.byte	-101
 4541 0a0d E0        		.byte	-32
 4542 0a0e 1C        		.byte	28
 4543 0a0f E7        		.byte	-25
 4544 0a10 0A        		.byte	10
 4545 0a11 47        		.byte	71
 4546 0a12 3F        		.byte	63
 4547 0a13 05        		.byte	5
 4548 0a14 6D        		.byte	109
 4549 0a15 5C        		.byte	92
 4550 0a16 43        		.byte	67
 4551 0a17 E4        		.byte	-28
 4552 0a18 50        		.byte	80
 4553 0a19 99        		.byte	-103
 4554 0a1a 07        		.byte	7
 4555 0a1b 9D        		.byte	-99
 4556 0a1c BD        		.byte	-67
 4557 0a1d B8        		.byte	-72
 4558 0a1e C3        		.byte	-61
 4559 0a1f E3        		.byte	-29
 4560 0a20 E1        		.byte	-31
 4561 0a21 7C        		.byte	124
 4562 0a22 38        		.byte	56
 4563 0a23 D1        		.byte	-47
 4564 0a24 76        		.byte	118
 4565 0a25 33        		.byte	51
 4566 0a26 52        		.byte	82
 4567 0a27 50        		.byte	80
 4568 0a28 61        		.byte	97
 4569 0a29 5A        		.byte	90
 4570 0a2a 8C        		.byte	-116
 4571 0a2b FB        		.byte	-5
 4572 0a2c C8        		.byte	-56
 4573 0a2d 75        		.byte	117
 4574 0a2e B9        		.byte	-71
 4575 0a2f C3        		.byte	-61
 4576 0a30 FD        		.byte	-3
 4577 0a31 7C        		.byte	124
 4578 0a32 5F        		.byte	95
 4579 0a33 64        		.byte	100
 4580 0a34 8B        		.byte	-117
 4581 0a35 8E        		.byte	-114
 4582 0a36 07        		.byte	7
 4583 0a37 38        		.byte	56
 4584 0a38 13        		.byte	19
 4585 0a39 D7        		.byte	-41
 4586 0a3a 8E        		.byte	-114
 4587 0a3b C3        		.byte	-61
 4588 0a3c 56        		.byte	86
 4589 0a3d DE        		.byte	-34
 4590 0a3e BC        		.byte	-68
 4591 0a3f 0C        		.byte	12
 4592 0a40 59        		.byte	89
 4593 0a41 47        		.byte	71
 4594 0a42 D6        		.byte	-42
 4595 0a43 1D        		.byte	29
 4596 0a44 CC        		.byte	-52
 4597 0a45 32        		.byte	50
 4598 0a46 25        		.byte	37
 4599 0a47 FD        		.byte	-3
 4600 0a48 38        		.byte	56
 4601 0a49 62        		.byte	98
 4602 0a4a E3        		.byte	-29
 4603 0a4b 1A        		.byte	26
 4604 0a4c E0        		.byte	-32
 4605 0a4d 4E        		.byte	78
 4606 0a4e 5F        		.byte	95
 4607 0a4f 1E        		.byte	30
 4608 0a50 FC        		.byte	-4
 4609 0a51 F3        		.byte	-13
 4610 0a52 B7        		.byte	-73
 4611 0a53 76        		.byte	118
 4612 0a54 59        		.byte	89
 4613 0a55 2C        		.byte	44
 4614 0a56 16        		.byte	22
 4615 0a57 63        		.byte	99
 4616 0a58 40        		.byte	64
 4617 0a59 BB        		.byte	-69
 4618 0a5a 71        		.byte	113
 4619 0a5b 25        		.byte	37
 4620 0a5c 1D        		.byte	29
 4621 0a5d 0F        		.byte	15
 4622 0a5e C0        		.byte	-64
 4623 0a5f 82        		.byte	-126
 4624 0a60 22        		.byte	34
 4625 0a61 A2        		.byte	-94
 4626 0a62 FF        		.byte	-1
 4627 0a63 BD        		.byte	-67
 4628 0a64 29        		.byte	41
 4629 0a65 47        		.byte	71
 4630 0a66 7D        		.byte	125
 4631 0a67 A2        		.byte	-94
 4632 0a68 56        		.byte	86
 4633 0a69 8D        		.byte	-115
 4634 0a6a A1        		.byte	-95
 4635 0a6b 6D        		.byte	109
 4636 0a6c AE        		.byte	-82
 4637 0a6d 07        		.byte	7
 4638 0a6e 22        		.byte	34
 4639 0a6f 32        		.byte	50
 4640 0a70 1F        		.byte	31
 4641 0a71 13        		.byte	19
 4642 0a72 16        		.byte	22
 4643 0a73 77        		.byte	119
 4644 0a74 C0        		.byte	-64
 4645 0a75 82        		.byte	-126
 4646 0a76 9C        		.byte	-100
 4647 0a77 1E        		.byte	30
 4648 0a78 16        		.byte	22
 4649 0a79 57        		.byte	87
 4650 0a7a 85        		.byte	-123
 4651 0a7b 17        		.byte	23
 4652 0a7c 75        		.byte	117
 4653 0a7d A3        		.byte	-93
 4654 0a7e 4C        		.byte	76
 4655 0a7f B9        		.byte	-71
 4656 0a80 FC        		.byte	-4
 4657 0a81 AF        		.byte	-81
 4658 0a82 E3        		.byte	-29
 4659 0a83 DA        		.byte	-38
 4660 0a84 E3        		.byte	-29
 4661 0a85 8C        		.byte	-116
 4662 0a86 8C        		.byte	-116
 4663 0a87 39        		.byte	57
 4664 0a88 DE        		.byte	-34
 4665 0a89 ED        		.byte	-19
 4666 0a8a EC        		.byte	-20
 4667 0a8b 5C        		.byte	92
 4668 0a8c E4        		.byte	-28
 4669 0a8d 8C        		.byte	-116
 4670 0a8e E6        		.byte	-26
 4671 0a8f 06        		.byte	6
 4672 0a90 76        		.byte	118
 4673 0a91 0E        		.byte	14
 4674 0a92 1C        		.byte	28
 4675 0a93 95        		.byte	-107
 4676 0a94 58        		.byte	88
 4677 0a95 B7        		.byte	-73
 4678 0a96 A4        		.byte	-92
 4679 0a97 52        		.byte	82
 4680 0a98 46        		.byte	70
 4681 0a99 B0        		.byte	-80
 4682 0a9a 2F        		.byte	47
 4683 0a9b 5E        		.byte	94
 4684 0a9c 30        		.byte	48
 4685 0a9d 36        		.byte	54
 4686 0a9e 28        		.byte	40
 4687 0a9f 5B        		.byte	91
 4688 0aa0 77        		.byte	119
 4689 0aa1 EE        		.byte	-18
 4690 0aa2 78        		.byte	120
 4691 0aa3 B9        		.byte	-71
 4692 0aa4 74        		.byte	116
 4693 0aa5 68        		.byte	104
 4694 0aa6 15        		.byte	21
 4695 0aa7 41        		.byte	65
 4696 0aa8 E2        		.byte	-30
 4697 0aa9 63        		.byte	99
 4698 0aaa 8E        		.byte	-114
 4699 0aab 9E        		.byte	-98
 4700 0aac BB        		.byte	-69
 4701 0aad F0        		.byte	-16
 4702 0aae 63        		.byte	99
 4703 0aaf 02        		.byte	2
 4704 0ab0 74        		.byte	116
 4705 0ab1 A8        		.byte	-88
 4706 0ab2 BE        		.byte	-66
 4707 0ab3 08        		.byte	8
 4708 0ab4 C2        		.byte	-62
 4709 0ab5 A5        		.byte	-91
 4710 0ab6 C3        		.byte	-61
 4711 0ab7 0F        		.byte	15
 4712 0ab8 93        		.byte	-109
 4713 0ab9 B9        		.byte	-71
 4714 0aba E2        		.byte	-30
 4715 0abb 60        		.byte	96
 4716 0abc 1E        		.byte	30
 4717 0abd 31        		.byte	49
 4718 0abe AD        		.byte	-83
 4719 0abf 99        		.byte	-103
 4720 0ac0 D7        		.byte	-41
 4721 0ac1 E6        		.byte	-26
 4722 0ac2 EB        		.byte	-21
 4723 0ac3 96        		.byte	-106
 4724 0ac4 B7        		.byte	-73
 4725 0ac5 2F        		.byte	47
 4726 0ac6 7F        		.byte	127
 4727 0ac7 77        		.byte	119
 4728 0ac8 B7        		.byte	-73
 4729 0ac9 D3        		.byte	-45
 4730 0aca 2B        		.byte	43
 4731 0acb 77        		.byte	119
 4732 0acc 47        		.byte	71
 4733 0acd 15        		.byte	21
 4734 0ace DD        		.byte	-35
 4735 0acf 34        		.byte	52
 4736 0ad0 CD        		.byte	-51
 4737 0ad1 98        		.byte	-104
 4738 0ad2 11        		.byte	17
 4739 0ad3 A8        		.byte	-88
 4740 0ad4 4F        		.byte	79
 4741 0ad5 B9        		.byte	-71
 4742 0ad6 29        		.byte	41
 4743 0ad7 91        		.byte	-111
 4744 0ad8 A5        		.byte	-91
 4745 0ad9 26        		.byte	38
 4746 0ada 77        		.byte	119
 4747 0adb CF        		.byte	-49
 4748 0adc F5        		.byte	-11
 4749 0add A5        		.byte	-91
 4750 0ade 99        		.byte	-103
 4751 0adf F2        		.byte	-14
 4752 0ae0 4C        		.byte	76
 4753 0ae1 E0        		.byte	-32
 4754 0ae2 12        		.byte	18
 4755 0ae3 E4        		.byte	-28
 4756 0ae4 40        		.byte	64
 4757 0ae5 EA        		.byte	-22
 4758 0ae6 73        		.byte	115
 4759 0ae7 1D        		.byte	29
 4760 0ae8 FA        		.byte	-6
 4761 0ae9 7A        		.byte	122
 4762 0aea 92        		.byte	-110
 4763 0aeb 64        		.byte	100
 4764 0aec 9E        		.byte	-98
 4765 0aed 1D        		.byte	29
 4766 0aee B4        		.byte	-76
 4767 0aef 3F        		.byte	63
 4768 0af0 19        		.byte	25
 4769 0af1 69        		.byte	105
 4770 0af2 B3        		.byte	-77
 4771 0af3 64        		.byte	100
 4772 0af4 12        		.byte	18
 4773 0af5 75        		.byte	117
 4774 0af6 21        		.byte	33
 4775 0af7 50        		.byte	80
 4776 0af8 80        		.byte	-128
 4777 0af9 01        		.byte	1
 4778 0afa BC        		.byte	-68
 4779 0afb 2A        		.byte	42
 4780 0afc 51        		.byte	81
 4781 0afd D5        		.byte	-43
 4782 0afe 8C        		.byte	-116
 4783 0aff 38        		.byte	56
 4784 0b00 87        		.byte	-121
 4785 0b01 CC        		.byte	-52
 4786 0b02 FF        		.byte	-1
 4787 0b03 DD        		.byte	-35
 4788 0b04 F9        		.byte	-7
 4789 0b05 E1        		.byte	-31
 4790 0b06 E2        		.byte	-30
 4791 0b07 8A        		.byte	-118
 4792 0b08 D1        		.byte	-47
 4793 0b09 89        		.byte	-119
 4794 0b0a 41        		.byte	65
 4795 0b0b C0        		.byte	-64
 4796 0b0c 51        		.byte	81
 4797 0b0d F8        		.byte	-8
 4798 0b0e 7C        		.byte	124
 4799 0b0f F4        		.byte	-12
 4800 0b10 77        		.byte	119
 4801 0b11 6B        		.byte	107
 4802 0b12 EB        		.byte	-21
 4803 0b13 71        		.byte	113
 4804 0b14 80        		.byte	-128
 4805 0b15 1A        		.byte	26
 4806 0b16 0C        		.byte	12
 4807 0b17 69        		.byte	105
 4808 0b18 C5        		.byte	-59
 4809 0b19 AA        		.byte	-86
 4810 0b1a E3        		.byte	-29
 4811 0b1b 25        		.byte	37
 4812 0b1c 5C        		.byte	92
 4813 0b1d 84        		.byte	-124
 4814 0b1e 94        		.byte	-108
 4815 0b1f 6A        		.byte	106
 4816 0b20 E4        		.byte	-28
 4817 0b21 67        		.byte	103
 4818 0b22 6A        		.byte	106
 4819 0b23 18        		.byte	24
 4820 0b24 8E        		.byte	-114
 4821 0b25 B8        		.byte	-72
 4822 0b26 8D        		.byte	-115
 4823 0b27 80        		.byte	-128
 4824 0b28 AB        		.byte	-85
 4825 0b29 2C        		.byte	44
 4826 0b2a F2        		.byte	-14
 4827 0b2b E6        		.byte	-26
 4828 0b2c 63        		.byte	99
 4829 0b2d C9        		.byte	-55
 4830 0b2e 54        		.byte	84
 4831 0b2f 2A        		.byte	42
 4832 0b30 D6        		.byte	-42
 4833 0b31 2E        		.byte	46
 4834 0b32 BF        		.byte	-65
 4835 0b33 DD        		.byte	-35
 4836 0b34 19        		.byte	25
 4837 0b35 B0        		.byte	-80
 4838 0b36 E2        		.byte	-30
 4839 0b37 27        		.byte	39
 4840 0b38 AD        		.byte	-83
 4841 0b39 B9        		.byte	-71
 4842 0b3a F0        		.byte	-16
 4843 0b3b 43        		.byte	67
 4844 0b3c E5        		.byte	-27
 4845 0b3d 29        		.byte	41
 4846 0b3e B1        		.byte	-79
 4847 0b3f E0        		.byte	-32
 4848 0b40 42        		.byte	66
 4849 0b41 E7        		.byte	-25
 4850 0b42 2D        		.byte	45
 4851 0b43 D8        		.byte	-40
 4852 0b44 32        		.byte	50
 4853 0b45 E6        		.byte	-26
 4854 0b46 4E        		.byte	78
 4855 0b47 1E        		.byte	30
 4856 0b48 BE        		.byte	-66
 4857 0b49 DF        		.byte	-33
 4858 0b4a 1D        		.byte	29
 4859 0b4b 99        		.byte	-103
 4860 0b4c B0        		.byte	-80
 4861 0b4d C3        		.byte	-61
 4862 0b4e E5        		.byte	-27
 4863 0b4f 48        		.byte	72
 4864 0b50 12        		.byte	18
 4865 0b51 A6        		.byte	-90
 4866 0b52 CE        		.byte	-50
 4867 0b53 1E        		.byte	30
 4868 0b54 BE        		.byte	-66
 4869 0b55 DF        		.byte	-33
 4870 0b56 3C        		.byte	60
 4871 0b57 FA        		.byte	-6
 4872 0b58 57        		.byte	87
 4873 0b59 0D        		.byte	13
 4874 0b5a 98        		.byte	-104
 4875 0b5b B2        		.byte	-78
 4876 0b5c C7        		.byte	-57
 4877 0b5d ED        		.byte	-19
 4878 0b5e 39        		.byte	57
 4879 0b5f F0        		.byte	-16
 4880 0b60 62        		.byte	98
 4881 0b61 46        		.byte	70
 4882 0b62 EF        		.byte	-17
 4883 0b63 5C        		.byte	92
 4884 0b64 1B        		.byte	27
 4885 0b65 B4        		.byte	-76
 4886 0b66 CB        		.byte	-53
 4887 0b67 F5        		.byte	-11
 4888 0b68 68        		.byte	104
 4889 0b69 33        		.byte	51
 4890 0b6a C5        		.byte	-59
 4891 0b6b E9        		.byte	-23
 4892 0b6c 50        		.byte	80
 4893 0b6d 03        		.byte	3
 4894 0b6e 65        		.byte	101
 4895 0b6f 48        		.byte	72
 4896 0b70 F3        		.byte	-13
 4897 0b71 45        		.byte	69
 4898 0b72 08        		.byte	8
 4899 0b73 92        		.byte	-110
 4900 0b74 87        		.byte	-121
 4901 0b75 6D        		.byte	109
 4902 0b76 58        		.byte	88
 4903 0b77 13        		.byte	19
 4904 0b78 A4        		.byte	-92
 4905 0b79 CA        		.byte	-54
 4906 0b7a 16        		.byte	22
 4907 0b7b AE        		.byte	-82
 4908 0b7c DE        		.byte	-34
 4909 0b7d 3E        		.byte	62
 4910 0b7e FE        		.byte	-2
 4911 0b7f 7E        		.byte	126
 4912 0b80 5F        		.byte	95
 4913 0b81 3C        		.byte	60
 4914 0b82 FA        		.byte	-6
 4915 0b83 57        		.byte	87
 4916 0b84 2C        		.byte	44
 4917 0b85 DA        		.byte	-38
 4918 0b86 17        		.byte	23
 4919 0b87 8D        		.byte	-115
 4920 0b88 79        		.byte	121
 4921 0b89 70        		.byte	112
 4922 0b8a 62        		.byte	98
 4923 0b8b 46        		.byte	70
 4924 0b8c 0E        		.byte	14
 4925 0b8d 9E        		.byte	-98
 4926 0b8e BE        		.byte	-66
 4927 0b8f FE        		.byte	-2
 4928 0b90 5F        		.byte	95
 4929 0b91 1D        		.byte	29
 4930 0b92 99        		.byte	-103
 4931 0b93 91        		.byte	-111
 4932 0b94 81        		.byte	-127
 4933 0b95 61        		.byte	97
 4934 0b96 40        		.byte	64
 4935 0b97 E3        		.byte	-29
 4936 0b98 44        		.byte	68
 4937 0b99 EB        		.byte	-21
 4938 0b9a 54        		.byte	84
 4939 0b9b 0B        		.byte	11
 4940 0b9c 75        		.byte	117
 4941 0b9d 49        		.byte	73
 4942 0b9e F1        		.byte	-15
 4943 0b9f 41        		.byte	65
 4944 0ba0 00        		.byte	0
 4945 0ba1 63        		.byte	99
 4946 0ba2 25        		.byte	37
 4947 0ba3 A9        		.byte	-87
 4948 0ba4 B1        		.byte	-79
 4949 0ba5 C1        		.byte	-63
 4950 0ba6 00        		.byte	0
 4951 0ba7 82        		.byte	-126
 4952 0ba8 86        		.byte	-122
 4953 0ba9 6F        		.byte	111
 4954 0baa 3D        		.byte	61
 4955 0bab F8        		.byte	-8
 4956 0bac 53        		.byte	83
 4957 0bad 05        		.byte	5
 4958 0bae 88        		.byte	-120
 4959 0baf 73        		.byte	115
 4960 0bb0 45        		.byte	69
 4961 0bb1 08        		.byte	8
 4962 0bb2 73        		.byte	115
 4963 0bb3 64        		.byte	100
 4964 0bb4 4A        		.byte	74
 4965 0bb5 F7        		.byte	-9
 4966 0bb6 6C        		.byte	108
 4967 0bb7 5A        		.byte	90
 4968 0bb8 17        		.byte	23
 4969 0bb9 AC        		.byte	-84
 4970 0bba DA        		.byte	-38
 4971 0bbb 17        		.byte	23
 4972 0bbc 8D        		.byte	-115
 4973 0bbd 79        		.byte	121
 4974 0bbe 51        		.byte	81
 4975 0bbf 20        		.byte	32
 4976 0bc0 C2        		.byte	-62
 4977 0bc1 E7        		.byte	-25
 4978 0bc2 2D        		.byte	45
 4979 0bc3 D8        		.byte	-40
 4980 0bc4 13        		.byte	19
 4981 0bc5 A4        		.byte	-92
 4982 0bc6 CA        		.byte	-54
 4983 0bc7 F7        		.byte	-9
 4984 0bc8 4D        		.byte	77
 4985 0bc9 18        		.byte	24
 4986 0bca 93        		.byte	-109
 4987 0bcb 85        		.byte	-123
 4988 0bcc 69        		.byte	105
 4989 0bcd 31        		.byte	49
 4990 0bce E0        		.byte	-32
 4991 0bcf 23        		.byte	35
 4992 0bd0 C4        		.byte	-60
 4993 0bd1 0A        		.byte	10
 4994 0bd2 77        		.byte	119
 4995 0bd3 6C        		.byte	108
 4996 0bd4 5A        		.byte	90
 4997 0bd5 36        		.byte	54
 4998 0bd6 CF        		.byte	-49
 4999 0bd7 FD        		.byte	-3
 5000 0bd8 59        		.byte	89
 5001 0bd9 11        		.byte	17
 5002 0bda 81        		.byte	-127
 5003 0bdb 80        		.byte	-128
 5004 0bdc 82        		.byte	-126
 5005 0bdd 86        		.byte	-122
 5006 0bde 8E        		.byte	-114
 5007 0bdf 7F        		.byte	127
 5008 0be0 7C        		.byte	124
 5009 0be1 5B        		.byte	91
 5010 0be2 34        		.byte	52
 5011 0be3 EA        		.byte	-22
 5012 0be4 56        		.byte	86
 5013 0be5 2E        		.byte	46
 5014 0be6 BF        		.byte	-65
 5015 0be7 FC        		.byte	-4
 5016 0be8 7A        		.byte	122
 5017 0be9 76        		.byte	118
 5018 0bea 4F        		.byte	79
 5019 0beb FD        		.byte	-3
 5020 0bec 59        		.byte	89
 5021 0bed 30        		.byte	48
 5022 0bee E2        		.byte	-30
 5023 0bef 46        		.byte	70
 5024 0bf0 EF        		.byte	-17
 5025 0bf1 5C        		.byte	92
 5026 0bf2 3A        		.byte	58
 5027 0bf3 D7        		.byte	-41
 5028 0bf4 0D        		.byte	13
 5029 0bf5 79        		.byte	121
 5030 0bf6 51        		.byte	81
 5031 0bf7 20        		.byte	32
 5032 0bf8 A3        		.byte	-93
 5033 0bf9 A5        		.byte	-91
 5034 0bfa C8        		.byte	-56
 5035 0bfb F3        		.byte	-13
 5036 0bfc 64        		.byte	100
 5037 0bfd 2B        		.byte	43
 5038 0bfe B5        		.byte	-75
 5039 0bff E8        		.byte	-24
 5040 0c00 52        		.byte	82
 5041 0c01 07        		.byte	7
 5042 0c02 8C        		.byte	-116
 5043 0c03 9A        		.byte	-102
 5044 0c04 97        		.byte	-105
 5045 0c05 8D        		.byte	-115
 5046 0c06 98        		.byte	-104
 5047 0c07 B2        		.byte	-78
 5048 0c08 C7        		.byte	-57
 5049 0c09 0C        		.byte	12
 5050 0c0a 7B        		.byte	123
 5051 0c0b 74        		.byte	116
 5052 0c0c 4B        		.byte	75
 5053 0c0d F5        		.byte	-11
 5054 0c0e 68        		.byte	104
 5055 0c0f 52        		.byte	82
 5056 0c10 07        		.byte	7
 5057 0c11 6D        		.byte	109
 5058 0c12 39        		.byte	57
 5059 0c13 F0        		.byte	-16
 5060 0c14 62        		.byte	98
 5061 0c15 27        		.byte	39
 5062 0c16 AD        		.byte	-83
 5063 0c17 D8        		.byte	-40
 5064 0c18 13        		.byte	19
 5065 0c19 85        		.byte	-123
 5066 0c1a 88        		.byte	-120
 5067 0c1b 73        		.byte	115
 5068 0c1c 45        		.byte	69
 5069 0c1d E9        		.byte	-23
 5070 0c1e 50        		.byte	80
 5071 0c1f 03        		.byte	3
 5072 0c20 84        		.byte	-124
 5073 0c21 8A        		.byte	-118
 5074 0c22 77        		.byte	119
 5075 0c23 6C        		.byte	108
 5076 0c24 5A        		.byte	90
 5077 0c25 17        		.byte	23
 5078 0c26 8D        		.byte	-115
 5079 0c27 98        		.byte	-104
 5080 0c28 93        		.byte	-109
 5081 0c29 85        		.byte	-123
 5082 0c2a 88        		.byte	-120
 5083 0c2b 92        		.byte	-110
 5084 0c2c A6        		.byte	-90
 5085 0c2d AF        		.byte	-81
 5086 0c2e DC        		.byte	-36
 5087 0c2f 3A        		.byte	58
 5088 0c30 D7        		.byte	-41
 5089 0c31 0D        		.byte	13
 5090 0c32 98        		.byte	-104
 5091 0c33 B2        		.byte	-78
 5092 0c34 E6        		.byte	-26
 5093 0c35 2F        		.byte	47
 5094 0c36 DC        		.byte	-36
 5095 0c37 1B        		.byte	27
 5096 0c38 B4        		.byte	-76
 5097 0c39 CB        		.byte	-53
 5098 0c3a F5        		.byte	-11
 5099 0c3b 68        		.byte	104
 5100 0c3c 52        		.byte	82
 5101 0c3d 07        		.byte	7
 5102 0c3e 6D        		.byte	109
 5103 0c3f 39        		.byte	57
 5104 0c40 D1        		.byte	-47
 5105 0c41 01        		.byte	1
 5106 0c42 80        		.byte	-128
 5107 0c43 63        		.byte	99
 5108 0c44 44        		.byte	68
 5109 0c45 EB        		.byte	-21
 5110 0c46 35        		.byte	53
 5111 0c47 C9        		.byte	-55
 5112 0c48 F1        		.byte	-15
 5113 0c49 60        		.byte	96
 5114 0c4a 42        		.byte	66
 5115 0c4b 06        		.byte	6
 5116 0c4c 8E        		.byte	-114
 5117 0c4d 9E        		.byte	-98
 5118 0c4e BE        		.byte	-66
 5119 0c4f FE        		.byte	-2
 5120 0c50 7E        		.byte	126
 5121 0c51 7E        		.byte	126
 5122 0c52 5F        		.byte	95
 5123 0c53 1D        		.byte	29
 5124 0c54 99        		.byte	-103
 5125 0c55 B0        		.byte	-80
 5126 0c56 E2        		.byte	-30
 5127 0c57 46        		.byte	70
 5128 0c58 EF        		.byte	-17
 5129 0c59 5C        		.byte	92
 5130 0c5a 1B        		.byte	27
 5131 0c5b 95        		.byte	-107
 5132 0c5c A8        		.byte	-88
 5133 0c5d D2        		.byte	-46
 5134 0c5e 26        		.byte	38
 5135 0c5f CE        		.byte	-50
 5136 0c60 FF        		.byte	-1
 5137 0c61 5D        		.byte	93
 5138 0c62 19        		.byte	25
 5139 0c63 B0        		.byte	-80
 5140 0c64 E2        		.byte	-30
 5141 0c65 46        		.byte	70
 5142 0c66 0E        		.byte	14
 5143 0c67 7F        		.byte	127
 5144 0c68 5D        		.byte	93
 5145 0c69 38        		.byte	56
 5146 0c6a F2        		.byte	-14
 5147 0c6b 47        		.byte	71
 5148 0c6c 0C        		.byte	12
 5149 0c6d 7B        		.byte	123
 5150 0c6e 74        		.byte	116
 5151 0c6f 4B        		.byte	75
 5152 0c70 F5        		.byte	-11
 5153 0c71 68        		.byte	104
 5154 0c72 52        		.byte	82
 5155 0c73 26        		.byte	38
 5156 0c74 CE        		.byte	-50
 5157 0c75 FF        		.byte	-1
 5158 0c76 7C        		.byte	124
 5159 0c77 7A        		.byte	122
 5160 0c78 57        		.byte	87
 5161 0c79 2C        		.byte	44
 5162 0c7a BB        		.byte	-69
 5163 0c7b D5        		.byte	-43
 5164 0c7c 09        		.byte	9
 5165 0c7d 90        		.byte	-112
 5166 0c7e 83        		.byte	-125
 5167 0c7f 84        		.byte	-124
 5168 0c80 6B        		.byte	107
 5169 0c81 54        		.byte	84
 5170 0c82 2A        		.byte	42
 5171 0c83 B7        		.byte	-73
 5172 0c84 CD        		.byte	-51
 5173 0c85 F9        		.byte	-7
 5174 0c86 51        		.byte	81
 5175 0c87 01        		.byte	1
 5176 0c88 80        		.byte	-128
 5177 0c89 82        		.byte	-126
 5178 0c8a 86        		.byte	-122
 5179 0c8b 8E        		.byte	-114
 5180 0c8c 7F        		.byte	127
 5181 0c8d 5D        		.byte	93
 5182 0c8e 38        		.byte	56
 5183 0c8f F2        		.byte	-14
 5184 0c90 47        		.byte	71
 5185 0c91 0C        		.byte	12
 5186 0c92 9A        		.byte	-102
 5187 0c93 97        		.byte	-105
 5188 0c94 AC        		.byte	-84
 5189 0c95 DA        		.byte	-38
 5190 0c96 17        		.byte	23
 5191 0c97 8D        		.byte	-115
 5192 0c98 79        		.byte	121
 5193 0c99 51        		.byte	81
 5194 0c9a 01        		.byte	1
 5195 0c9b 61        		.byte	97
 5196 0c9c 40        		.byte	64
 5197 0c9d E3        		.byte	-29
 5198 0c9e 44        		.byte	68
 5199 0c9f EB        		.byte	-21
 5200 0ca0 54        		.byte	84
 5201 0ca1 0B        		.byte	11
 5202 0ca2 75        		.byte	117
 5203 0ca3 68        		.byte	104
 5204 0ca4 33        		.byte	51
 5205 0ca5 C5        		.byte	-59
 5206 0ca6 08        		.byte	8
 5207 0ca7 73        		.byte	115
 5208 0ca8 45        		.byte	69
 5209 0ca9 E9        		.byte	-23
 5210 0caa 31        		.byte	49
 5211 0cab E0        		.byte	-32
 5212 0cac 23        		.byte	35
 5213 0cad C4        		.byte	-60
 5214 0cae EB        		.byte	-21
 5215 0caf 35        		.byte	53
 5216 0cb0 E8        		.byte	-24
 5217 0cb1 33        		.byte	51
 5218 0cb2 C5        		.byte	-59
 5219 0cb3 E9        		.byte	-23
 5220 0cb4 31        		.byte	49
 5221 0cb5 C1        		.byte	-63
 5222 0cb6 E1        		.byte	-31
 5223 0cb7 40        		.byte	64
 5224 0cb8 02        		.byte	2
 5225 0cb9 86        		.byte	-122
 5226 0cba 8E        		.byte	-114
 5227 0cbb 7F        		.byte	127
 5228 0cbc 7C        		.byte	124
 5229 0cbd 7A        		.byte	122
 5230 0cbe 76        		.byte	118
 5231 0cbf 6E        		.byte	110
 5232 0cc0 3F        		.byte	63
 5233 0cc1 DD        		.byte	-35
 5234 0cc2 19        		.byte	25
 5235 0cc3 B0        		.byte	-80
 5236 0cc4 E2        		.byte	-30
 5237 0cc5 46        		.byte	70
 5238 0cc6 0E        		.byte	14
 5239 0cc7 9E        		.byte	-98
 5240 0cc8 9F        		.byte	-97
 5241 0cc9 BC        		.byte	-68
 5242 0cca DB        		.byte	-37
 5243 0ccb 15        		.byte	21
 5244 0ccc A8        		.byte	-88
 5245 0ccd D2        		.byte	-46
 5246 0cce 07        		.byte	7
 5247 0ccf 6D        		.byte	109
 5248 0cd0 39        		.byte	57
 5249 0cd1 F0        		.byte	-16
 5250 0cd2 43        		.byte	67
 5251 0cd3 E5        		.byte	-27
 5252 0cd4 29        		.byte	41
 5253 0cd5 B1        		.byte	-79
 5254 0cd6 E0        		.byte	-32
 5255 0cd7 23        		.byte	35
 5256 0cd8 A5        		.byte	-91
 5257 0cd9 C8        		.byte	-56
 5258 0cda 12        		.byte	18
 5259 0cdb A6        		.byte	-90
 5260 0cdc CE        		.byte	-50
 5261 0cdd 1E        		.byte	30
 5262 0cde 9F        		.byte	-97
 5263 0cdf BC        		.byte	-68
 5264 0ce0 FA        		.byte	-6
 5265 0ce1 76        		.byte	118
 5266 0ce2 6E        		.byte	110
 5267 0ce3 3F        		.byte	63
 5268 0ce4 FC        		.byte	-4
 5269 0ce5 5B        		.byte	91
 5270 0ce6 34        		.byte	52
 5271 0ce7 EA        		.byte	-22
 5272 0ce8 56        		.byte	86
 5273 0ce9 0F        		.byte	15
 5274 0cea 9C        		.byte	-100
 5275 0ceb BA        		.byte	-70
 5276 0cec D7        		.byte	-41
 5277 0ced 0D        		.byte	13
 5278 0cee 79        		.byte	121
 5279 0cef 51        		.byte	81
 5280 0cf0 01        		.byte	1
 5281 0cf1 80        		.byte	-128
 5282 0cf2 63        		.byte	99
 5283 0cf3 25        		.byte	37
 5284 0cf4 C8        		.byte	-56
 5285 0cf5 12        		.byte	18
 5286 0cf6 87        		.byte	-121
 5287 0cf7 6D        		.byte	109
 5288 0cf8 39        		.byte	57
 5289 0cf9 F0        		.byte	-16
 5290 0cfa 62        		.byte	98
 5291 0cfb 46        		.byte	70
 5292 0cfc EF        		.byte	-17
 5293 0cfd 3D        		.byte	61
 5294 0cfe D9        		.byte	-39
 5295 0cff 30        		.byte	48
 5296 0d00 E2        		.byte	-30
 5297 0d01 27        		.byte	39
 5298 0d02 AD        		.byte	-83
 5299 0d03 D8        		.byte	-40
 5300 0d04 32        		.byte	50
 5301 0d05 E6        		.byte	-26
 5302 0d06 4E        		.byte	78
 5303 0d07 FF        		.byte	-1
 5304 0d08 7C        		.byte	124
 5305 0d09 7A        		.byte	122
 5306 0d0a 76        		.byte	118
 5307 0d0b 6E        		.byte	110
 5308 0d0c 5E        		.byte	94
 5309 0d0d 1F        		.byte	31
 5310 0d0e BC        		.byte	-68
 5311 0d0f DB        		.byte	-37
 5312 0d10 15        		.byte	21
 5313 0d11 A8        		.byte	-88
 5314 0d12 D2        		.byte	-46
 5315 0d13 26        		.byte	38
 5316 0d14 CE        		.byte	-50
 5317 0d15 1E        		.byte	30
 5318 0d16 9F        		.byte	-97
 5319 0d17 9D        		.byte	-99
 5320 0d18 99        		.byte	-103
 5321 0d19 91        		.byte	-111
 5322 0d1a A0        		.byte	-96
 5323 0d1b C2        		.byte	-62
 5324 0d1c E7        		.byte	-25
 5325 0d1d 2D        		.byte	45
 5326 0d1e D8        		.byte	-40
 5327 0d1f 13        		.byte	19
 5328 0d20 85        		.byte	-123
 5329 0d21 69        		.byte	105
 5330 0d22 50        		.byte	80
 5331 0d23 22        		.byte	34
 5332 0d24 A7        		.byte	-89
 5333 0d25 CC        		.byte	-52
 5334 0d26 1A        		.byte	26
 5335 0d27 B6        		.byte	-74
 5336 0d28 CF        		.byte	-49
 5337 0d29 1C        		.byte	28
 5338 0d2a BA        		.byte	-70
 5339 0d2b F6        		.byte	-10
 5340 0d2c 6E        		.byte	110
 5341 0d2d 5E        		.byte	94
 5342 0d2e 3E        		.byte	62
 5343 0d2f DF        		.byte	-33
 5344 0d30 1D        		.byte	29
 5345 0d31 B8        		.byte	-72
 5346 0d32 D3        		.byte	-45
 5347 0d33 24        		.byte	36
 5348 0d34 AB        		.byte	-85
 5349 0d35 D4        		.byte	-44
 5350 0d36 2A        		.byte	42
 5351 0d37 D6        		.byte	-42
 5352 0d38 0F        		.byte	15
 5353 0d39 7D        		.byte	125
 5354 0d3a 59        		.byte	89
 5355 0d3b 11        		.byte	17
 5356 0d3c A0        		.byte	-96
 5357 0d3d C2        		.byte	-62
 5358 0d3e E7        		.byte	-25
 5359 0d3f 4C        		.byte	76
 5360 0d40 1A        		.byte	26
 5361 0d41 97        		.byte	-105
 5362 0d42 8D        		.byte	-115
 5363 0d43 98        		.byte	-104
 5364 0d44 93        		.byte	-109
 5365 0d45 A4        		.byte	-92
 5366 0d46 CA        		.byte	-54
 5367 0d47 F7        		.byte	-9
 5368 0d48 6C        		.byte	108
 5369 0d49 5A        		.byte	90
 5370 0d4a 17        		.byte	23
 5371 0d4b AC        		.byte	-84
 5372 0d4c BB        		.byte	-69
 5373 0d4d F4        		.byte	-12
 5374 0d4e 6A        		.byte	106
 5375 0d4f 56        		.byte	86
 5376 0d50 0F        		.byte	15
 5377 0d51 9C        		.byte	-100
 5378 0d52 BA        		.byte	-70
 5379 0d53 D7        		.byte	-41
 5380 0d54 0D        		.byte	13
 5381 0d55 98        		.byte	-104
 5382 0d56 93        		.byte	-109
 5383 0d57 A4        		.byte	-92
 5384 0d58 CA        		.byte	-54
 5385 0d59 F7        		.byte	-9
 5386 0d5a 6C        		.byte	108
 5387 0d5b 3B        		.byte	59
 5388 0d5c D5        		.byte	-43
 5389 0d5d 09        		.byte	9
 5390 0d5e 71        		.byte	113
 5391 0d5f 60        		.byte	96
 5392 0d60 42        		.byte	66
 5393 0d61 06        		.byte	6
 5394 0d62 6F        		.byte	111
 5395 0d63 3D        		.byte	61
 5396 0d64 D9        		.byte	-39
 5397 0d65 30        		.byte	48
 5398 0d66 C3        		.byte	-61
 5399 0d67 04        		.byte	4
 5400 0d68 8A        		.byte	-118
 5401 0d69 96        		.byte	-106
 5402 0d6a 8F        		.byte	-113
 5403 0d6b 7D        		.byte	125
 5404 0d6c 78        		.byte	120
 5405 0d6d 53        		.byte	83
 5406 0d6e 24        		.byte	36
 5407 0d6f CA        		.byte	-54
 5408 0d70 F7        		.byte	-9
 5409 0d71 4D        		.byte	77
 5410 0d72 18        		.byte	24
 5411 0d73 B2        		.byte	-78
 5412 0d74 E6        		.byte	-26
 5413 0d75 4E        		.byte	78
 5414 0d76 FF        		.byte	-1
 5415 0d77 5D        		.byte	93
 5416 0d78 38        		.byte	56
 5417 0d79 D3        		.byte	-45
 5418 0d7a 05        		.byte	5
 5419 0d7b 69        		.byte	105
 5420 0d7c 50        		.byte	80
 5421 0d7d 03        		.byte	3
 5422 0d7e 84        		.byte	-124
 5423 0d7f 8A        		.byte	-118
 5424 0d80 96        		.byte	-106
 5425 0d81 8F        		.byte	-113
 5426 0d82 9C        		.byte	-100
 5427 0d83 9B        		.byte	-101
 5428 0d84 B4        		.byte	-76
 5429 0d85 EA        		.byte	-22
 5430 0d86 37        		.byte	55
 5431 0d87 EC        		.byte	-20
 5432 0d88 5A        		.byte	90
 5433 0d89 17        		.byte	23
 5434 0d8a AC        		.byte	-84
 5435 0d8b BB        		.byte	-69
 5436 0d8c F4        		.byte	-12
 5437 0d8d 6A        		.byte	106
 5438 0d8e 37        		.byte	55
 5439 0d8f CD        		.byte	-51
 5440 0d90 F9        		.byte	-7
 5441 0d91 70        		.byte	112
 5442 0d92 43        		.byte	67
 5443 0d93 E5        		.byte	-27
 5444 0d94 48        		.byte	72
 5445 0d95 F3        		.byte	-13
 5446 0d96 45        		.byte	69
 5447 0d97 08        		.byte	8
 5448 0d98 92        		.byte	-110
 5449 0d99 87        		.byte	-121
 5450 0d9a 8C        		.byte	-116
 5451 0d9b 7B        		.byte	123
 5452 0d9c 74        		.byte	116
 5453 0d9d 4B        		.byte	75
 5454 0d9e F5        		.byte	-11
 5455 0d9f 49        		.byte	73
 5456 0da0 F1        		.byte	-15
 5457 0da1 41        		.byte	65
 5458 0da2 E1        		.byte	-31
 5459 0da3 40        		.byte	64
 5460 0da4 02        		.byte	2
 5461 0da5 86        		.byte	-122
 5462 0da6 6F        		.byte	111
 5463 0da7 3D        		.byte	61
 5464 0da8 D9        		.byte	-39
 5465 0da9 11        		.byte	17
 5466 0daa 81        		.byte	-127
 5467 0dab 61        		.byte	97
 5468 0dac 40        		.byte	64
 5469 0dad 02        		.byte	2
 5470 0dae 86        		.byte	-122
 5471 0daf 6F        		.byte	111
 5472 0db0 3D        		.byte	61
 5473 0db1 F8        		.byte	-8
 5474 0db2 53        		.byte	83
 5475 0db3 24        		.byte	36
 5476 0db4 CA        		.byte	-54
 5477 0db5 16        		.byte	22
 5478 0db6 AE        		.byte	-82
 5479 0db7 DE        		.byte	-34
 5480 0db8 3E        		.byte	62
 5481 0db9 DF        		.byte	-33
 5482 0dba 1D        		.byte	29
 5483 0dbb 99        		.byte	-103
 5484 0dbc 91        		.byte	-111
 5485 0dbd A0        		.byte	-96
 5486 0dbe A3        		.byte	-93
 5487 0dbf C4        		.byte	-60
 5488 0dc0 EB        		.byte	-21
 5489 0dc1 35        		.byte	53
 5490 0dc2 E8        		.byte	-24
 5491 0dc3 52        		.byte	82
 5492 0dc4 07        		.byte	7
 5493 0dc5 8C        		.byte	-116
 5494 0dc6 7B        		.byte	123
 5495 0dc7 74        		.byte	116
 5496 0dc8 6A        		.byte	106
 5497 0dc9 37        		.byte	55
 5498 0dca CD        		.byte	-51
 5499 0dcb F9        		.byte	-7
 5500 0dcc 51        		.byte	81
 5501 0dcd 20        		.byte	32
 5502 0dce C2        		.byte	-62
 5503 0dcf 06        		.byte	6
 5504 0dd0 8E        		.byte	-114
 5505 0dd1 7F        		.byte	127
 5506 0dd2 7C        		.byte	124
 5507 0dd3 7A        		.byte	122
 5508 0dd4 57        		.byte	87
 5509 0dd5 0D        		.byte	13
 5510 0dd6 79        		.byte	121
 5511 0dd7 51        		.byte	81
 5512 0dd8 20        		.byte	32
 5513 0dd9 C2        		.byte	-62
 5514 0dda 06        		.byte	6
 5515 0ddb 8E        		.byte	-114
 5516 0ddc 7F        		.byte	127
 5517 0ddd 5D        		.byte	93
 5518 0dde 19        		.byte	25
 5519 0ddf B0        		.byte	-80
 5520 0de0 C3        		.byte	-61
 5521 0de1 E5        		.byte	-27
 5522 0de2 29        		.byte	41
 5523 0de3 D0        		.byte	-48
 5524 0de4 22        		.byte	34
 5525 0de5 A7        		.byte	-89
 5526 0de6 CC        		.byte	-52
 5527 0de7 FB        		.byte	-5
 5528 0de8 55        		.byte	85
 5529 0de9 28        		.byte	40
 5530 0dea B3        		.byte	-77
 5531 0deb C5        		.byte	-59
 5532 0dec E9        		.byte	-23
 5533 0ded 50        		.byte	80
 5534 0dee 22        		.byte	34
 5535 0def A7        		.byte	-89
 5536 0df0 CC        		.byte	-52
 5537 0df1 1A        		.byte	26
 5538 0df2 B6        		.byte	-74
 5539 0df3 CF        		.byte	-49
 5540 0df4 1C        		.byte	28
 5541 0df5 9B        		.byte	-101
 5542 0df6 B4        		.byte	-76
 5543 0df7 EA        		.byte	-22
 5544 0df8 56        		.byte	86
 5545 0df9 2E        		.byte	46
 5546 0dfa BF        		.byte	-65
 5547 0dfb DD        		.byte	-35
 5548 0dfc 19        		.byte	25
 5549 0dfd B0        		.byte	-80
 5550 0dfe E2        		.byte	-30
 5551 0dff 46        		.byte	70
 5552 0e00 EF        		.byte	-17
 5553 0e01 5C        		.byte	92
 5554 0e02 3A        		.byte	58
 5555 0e03 D7        		.byte	-41
 5556 0e04 0D        		.byte	13
 5557 0e05 79        		.byte	121
 5558 0e06 70        		.byte	112
 5559 0e07 62        		.byte	98
 5560 0e08 27        		.byte	39
 5561 0e09 AD        		.byte	-83
 5562 0e0a D8        		.byte	-40
 5563 0e0b 13        		.byte	19
 5564 0e0c A4        		.byte	-92
 5565 0e0d AB        		.byte	-85
 5566 0e0e D4        		.byte	-44
 5567 0e0f 2A        		.byte	42
 5568 0e10 B7        		.byte	-73
 5569 0e11 EC        		.byte	-20
 5570 0e12 5A        		.byte	90
 5571 0e13 17        		.byte	23
 5572 0e14 8D        		.byte	-115
 5573 0e15 79        		.byte	121
 5574 0e16 70        		.byte	112
 5575 0e17 43        		.byte	67
 5576 0e18 04        		.byte	4
 5577 0e19 8A        		.byte	-118
 5578 0e1a 77        		.byte	119
 5579 0e1b 4D        		.byte	77
 5580 0e1c F9        		.byte	-7
 5581 0e1d 70        		.byte	112
 5582 0e1e 62        		.byte	98
 5583 0e1f 27        		.byte	39
 5584 0e20 CC        		.byte	-52
 5585 0e21 1A        		.byte	26
 5586 0e22 B6        		.byte	-74
 5587 0e23 EE        		.byte	-18
 5588 0e24 3F        		.byte	63
 5589 0e25 DD        		.byte	-35
 5590 0e26 38        		.byte	56
 5591 0e27 F2        		.byte	-14
 5592 0e28 47        		.byte	71
 5593 0e29 0C        		.byte	12
 5594 0e2a 7B        		.byte	123
 5595 0e2b 55        		.byte	85
 5596 0e2c 28        		.byte	40
 5597 0e2d D2        		.byte	-46
 5598 0e2e 07        		.byte	7
 5599 0e2f 8C        		.byte	-116
 5600 0e30 9A        		.byte	-102
 5601 0e31 B6        		.byte	-74
 5602 0e32 CF        		.byte	-49
 5603 0e33 1C        		.byte	28
 5604 0e34 9B        		.byte	-101
 5605 0e35 95        		.byte	-107
 5606 0e36 89        		.byte	-119
 5607 0e37 71        		.byte	113
 5608 0e38 60        		.byte	96
 5609 0e39 42        		.byte	66
 5610 0e3a E7        		.byte	-25
 5611 0e3b 2D        		.byte	45
 5612 0e3c D8        		.byte	-40
 5613 0e3d 13        		.byte	19
 5614 0e3e 85        		.byte	-123
 5615 0e3f 88        		.byte	-120
 5616 0e40 92        		.byte	-110
 5617 0e41 A6        		.byte	-90
 5618 0e42 CE        		.byte	-50
 5619 0e43 1E        		.byte	30
 5620 0e44 BE        		.byte	-66
 5621 0e45 FE        		.byte	-2
 5622 0e46 7E        		.byte	126
 5623 0e47 7E        		.byte	126
 5624 0e48 7E        		.byte	126
 5625 0e49 7E        		.byte	126
 5626 0e4a 7E        		.byte	126
 5627 0e4b 7E        		.byte	126
 5628 0e4c 5F        		.byte	95
 5629 0e4d 3C        		.byte	60
 5630 0e4e DB        		.byte	-37
 5631 0e4f 34        		.byte	52
 5632 0e50 EA        		.byte	-22
 5633 0e51 56        		.byte	86
 5634 0e52 2E        		.byte	46
 5635 0e53 DE        		.byte	-34
 5636 0e54 1F        		.byte	31
 5637 0e55 BC        		.byte	-68
 5638 0e56 FA        		.byte	-6
 5639 0e57 76        		.byte	118
 5640 0e58 4F        		.byte	79
 5641 0e59 1C        		.byte	28
 5642 0e5a 9B        		.byte	-101
 5643 0e5b 95        		.byte	-107
 5644 0e5c 89        		.byte	-119
 5645 0e5d 71        		.byte	113
 5646 0e5e 60        		.byte	96
 5647 0e5f 23        		.byte	35
 5648 0e60 A5        		.byte	-91
 5649 0e61 C8        		.byte	-56
 5650 0e62 F3        		.byte	-13
 5651 0e63 64        		.byte	100
 5652 0e64 4A        		.byte	74
 5653 0e65 16        		.byte	22
 5654 0e66 AE        		.byte	-82
 5655 0e67 BF        		.byte	-65
 5656 0e68 FC        		.byte	-4
 5657 0e69 7A        		.byte	122
 5658 0e6a 76        		.byte	118
 5659 0e6b 6E        		.byte	110
 5660 0e6c 3F        		.byte	63
 5661 0e6d DD        		.byte	-35
 5662 0e6e 19        		.byte	25
 5663 0e6f 91        		.byte	-111
 5664 0e70 A0        		.byte	-96
 5665 0e71 A3        		.byte	-93
 5666 0e72 C4        		.byte	-60
 5667 0e73 0A        		.byte	10
 5668 0e74 77        		.byte	119
 5669 0e75 4D        		.byte	77
 5670 0e76 18        		.byte	24
 5671 0e77 B2        		.byte	-78
 5672 0e78 E6        		.byte	-26
 5673 0e79 2F        		.byte	47
 5674 0e7a DC        		.byte	-36
 5675 0e7b 1B        		.byte	27
 5676 0e7c 95        		.byte	-107
 5677 0e7d A8        		.byte	-88
 5678 0e7e B3        		.byte	-77
 5679 0e7f C5        		.byte	-59
 5680 0e80 E9        		.byte	-23
 5681 0e81 50        		.byte	80
 5682 0e82 22        		.byte	34
 5683 0e83 C6        		.byte	-58
 5684 0e84 0E        		.byte	14
 5685 0e85 9E        		.byte	-98
 5686 0e86 9F        		.byte	-97
 5687 0e87 9D        		.byte	-99
 5688 0e88 B8        		.byte	-72
 5689 0e89 F2        		.byte	-14
 5690 0e8a 47        		.byte	71
 5691 0e8b ED        		.byte	-19
 5692 0e8c 58        		.byte	88
 5693 0e8d 13        		.byte	19
 5694 0e8e 85        		.byte	-123
 5695 0e8f 69        		.byte	105
 5696 0e90 50        		.byte	80
 5697 0e91 22        		.byte	34
 5698 0e92 A7        		.byte	-89
 5699 0e93 AD        		.byte	-83
 5700 0e94 B9        		.byte	-71
 5701 0e95 D1        		.byte	-47
 5702 0e96 01        		.byte	1
 5703 0e97 80        		.byte	-128
 5704 0e98 82        		.byte	-126
 5705 0e99 86        		.byte	-122
 5706 0e9a 8E        		.byte	-114
 5707 0e9b 7F        		.byte	127
 5708 0e9c 5D        		.byte	93
 5709 0e9d 19        		.byte	25
 5710 0e9e 91        		.byte	-111
 5711 0e9f 81        		.byte	-127
 5712 0ea0 80        		.byte	-128
 5713 0ea1 82        		.byte	-126
 5714 0ea2 67        		.byte	103
 5715 0ea3 4C        		.byte	76
 5716 0ea4 FB        		.byte	-5
 5717 0ea5 55        		.byte	85
 5718 0ea6 28        		.byte	40
 5719 0ea7 B3        		.byte	-77
 5720 0ea8 E4        		.byte	-28
 5721 0ea9 2B        		.byte	43
 5722 0eaa D4        		.byte	-44
 5723 0eab 2A        		.byte	42
 5724 0eac D6        		.byte	-42
 5725 0ead 2E        		.byte	46
 5726 0eae DE        		.byte	-34
 5727 0eaf 3E        		.byte	62
 5728 0eb0 FE        		.byte	-2
 5729 0eb1 5F        		.byte	95
 5730 0eb2 1D        		.byte	29
 5731 0eb3 B8        		.byte	-72
 5732 0eb4 D3        		.byte	-45
 5733 0eb5 24        		.byte	36
 5734 0eb6 AB        		.byte	-85
 5735 0eb7 B5        		.byte	-75
 5736 0eb8 E8        		.byte	-24
 5737 0eb9 52        		.byte	82
 5738 0eba 26        		.byte	38
 5739 0ebb AF        		.byte	-81
 5740 0ebc BD        		.byte	-67
 5741 0ebd D9        		.byte	-39
 5742 0ebe 30        		.byte	48
 5743 0ebf C3        		.byte	-61
 5744 0ec0 04        		.byte	4
 5745 0ec1 6B        		.byte	107
 5746 0ec2 54        		.byte	84
 5747 0ec3 2A        		.byte	42
 5748 0ec4 B7        		.byte	-73
 5749 0ec5 CD        		.byte	-51
 5750 0ec6 F9        		.byte	-7
 5751 0ec7 70        		.byte	112
 5752 0ec8 43        		.byte	67
 5753 0ec9 E5        		.byte	-27
 5754 0eca 48        		.byte	72
 5755 0ecb 12        		.byte	18
 5756 0ecc A6        		.byte	-90
 5757 0ecd AF        		.byte	-81
 5758 0ece DC        		.byte	-36
 5759 0ecf 1B        		.byte	27
 5760 0ed0 B4        		.byte	-76
 5761 0ed1 CB        		.byte	-53
 5762 0ed2 14        		.byte	20
 5763 0ed3 8B        		.byte	-117
 5764 0ed4 75        		.byte	117
 5765 0ed5 49        		.byte	73
 5766 0ed6 10        		.byte	16
 5767 0ed7 83        		.byte	-125
 5768 0ed8 65        		.byte	101
 5769 0ed9 29        		.byte	41
 5770 0eda B1        		.byte	-79
 5771 0edb C1        		.byte	-63
 5772 0edc 00        		.byte	0
 5773 0edd 63        		.byte	99
 5774 0ede 44        		.byte	68
 5775 0edf EB        		.byte	-21
 5776 0ee0 54        		.byte	84
 5777 0ee1 0B        		.byte	11
 5778 0ee2 94        		.byte	-108
 5779 0ee3 8B        		.byte	-117
 5780 0ee4 75        		.byte	117
 5781 0ee5 68        		.byte	104
 5782 0ee6 33        		.byte	51
 5783 0ee7 C5        		.byte	-59
 5784 0ee8 E9        		.byte	-23
 5785 0ee9 31        		.byte	49
 5786 0eea E0        		.byte	-32
 5787 0eeb 42        		.byte	66
 5788 0eec 06        		.byte	6
 5789 0eed 8E        		.byte	-114
 5790 0eee 7F        		.byte	127
 5791 0eef 7C        		.byte	124
 5792 0ef0 7A        		.byte	122
 5793 0ef1 57        		.byte	87
 5794 0ef2 0D        		.byte	13
 5795 0ef3 79        		.byte	121
 5796 0ef4 70        		.byte	112
 5797 0ef5 62        		.byte	98
 5798 0ef6 46        		.byte	70
 5799 0ef7 0E        		.byte	14
 5800 0ef8 9E        		.byte	-98
 5801 0ef9 9F        		.byte	-97
 5802 0efa 9D        		.byte	-99
 5803 0efb B8        		.byte	-72
 5804 0efc D3        		.byte	-45
 5805 0efd 05        		.byte	5
 5806 0efe 69        		.byte	105
 5807 0eff 31        		.byte	49
 5808 0f00 C1        		.byte	-63
 5809 0f01 E1        		.byte	-31
 5810 0f02 21        		.byte	33
 5811 0f03 A1        		.byte	-95
 5812 0f04 C0        		.byte	-64
 5813 0f05 02        		.byte	2
 5814 0f06 67        		.byte	103
 5815 0f07 2D        		.byte	45
 5816 0f08 D8        		.byte	-40
 5817 0f09 13        		.byte	19
 5818 0f0a A4        		.byte	-92
 5819 0f0b CA        		.byte	-54
 5820 0f0c 16        		.byte	22
 5821 0f0d 8F        		.byte	-113
 5822 0f0e 7D        		.byte	125
 5823 0f0f 78        		.byte	120
 5824 0f10 53        		.byte	83
 5825 0f11 05        		.byte	5
 5826 0f12 69        		.byte	105
 5827 0f13 50        		.byte	80
 5828 0f14 03        		.byte	3
 5829 0f15 65        		.byte	101
 5830 0f16 48        		.byte	72
 5831 0f17 12        		.byte	18
 5832 0f18 87        		.byte	-121
 5833 0f19 6D        		.byte	109
 5834 0f1a 39        		.byte	57
 5835 0f1b F0        		.byte	-16
 5836 0f1c 43        		.byte	67
 5837 0f1d E5        		.byte	-27
 5838 0f1e 48        		.byte	72
 5839 0f1f 12        		.byte	18
 5840 0f20 87        		.byte	-121
 5841 0f21 8C        		.byte	-116
 5842 0f22 9A        		.byte	-102
 5843 0f23 97        		.byte	-105
 5844 0f24 8D        		.byte	-115
 5845 0f25 79        		.byte	121
 5846 0f26 51        		.byte	81
 5847 0f27 20        		.byte	32
 5848 0f28 C2        		.byte	-62
 5849 0f29 06        		.byte	6
 5850 0f2a 6F        		.byte	111
 5851 0f2b 5C        		.byte	92
 5852 0f2c 3A        		.byte	58
 5853 0f2d F6        		.byte	-10
 5854 0f2e 6E        		.byte	110
 5855 0f2f 3F        		.byte	63
 5856 0f30 DD        		.byte	-35
 5857 0f31 19        		.byte	25
 5858 0f32 B0        		.byte	-80
 5859 0f33 C3        		.byte	-61
 5860 0f34 E5        		.byte	-27
 5861 0f35 29        		.byte	41
 5862 0f36 B1        		.byte	-79
 5863 0f37 C1        		.byte	-63
 5864 0f38 00        		.byte	0
 5865 0f39 63        		.byte	99
 5866 0f3a 25        		.byte	37
 5867 0f3b A9        		.byte	-87
 5868 0f3c B1        		.byte	-79
 5869 0f3d E0        		.byte	-32
 5870 0f3e 42        		.byte	66
 5871 0f3f E7        		.byte	-25
 5872 0f40 2D        		.byte	45
 5873 0f41 B9        		.byte	-71
 5874 0f42 D1        		.byte	-47
 5875 0f43 20        		.byte	32
 5876 0f44 A3        		.byte	-93
 5877 0f45 C4        		.byte	-60
 5878 0f46 EB        		.byte	-21
 5879 0f47 54        		.byte	84
 5880 0f48 2A        		.byte	42
 5881 0f49 D6        		.byte	-42
 5882 0f4a 0F        		.byte	15
 5883 0f4b 7D        		.byte	125
 5884 0f4c 78        		.byte	120
 5885 0f4d 72        		.byte	114
 5886 0f4e 66        		.byte	102
 5887 0f4f 2F        		.byte	47
 5888 0f50 DC        		.byte	-36
 5889 0f51 3A        		.byte	58
 5890 0f52 F6        		.byte	-10
 5891 0f53 4F        		.byte	79
 5892 0f54 1C        		.byte	28
 5893 0f55 BA        		.byte	-70
 5894 0f56 F6        		.byte	-10
 5895 0f57 6E        		.byte	110
 5896 0f58 3F        		.byte	63
 5897 0f59 FC        		.byte	-4
 5898 0f5a 5B        		.byte	91
 5899 0f5b 15        		.byte	21
 5900 0f5c 89        		.byte	-119
 5901 0f5d 71        		.byte	113
 5902 0f5e 60        		.byte	96
 5903 0f5f 23        		.byte	35
 5904 0f60 A5        		.byte	-91
 5905 0f61 C8        		.byte	-56
 5906 0f62 12        		.byte	18
 5907 0f63 87        		.byte	-121
 5908 0f64 6D        		.byte	109
 5909 0f65 58        		.byte	88
 5910 0f66 32        		.byte	50
 5911 0f67 C7        		.byte	-57
 5912 0f68 0C        		.byte	12
 5913 0f69 9A        		.byte	-102
 5914 0f6a 97        		.byte	-105
 5915 0f6b 8D        		.byte	-115
 5916 0f6c 98        		.byte	-104
 5917 0f6d B2        		.byte	-78
 5918 0f6e E6        		.byte	-26
 5919 0f6f 4E        		.byte	78
 5920 0f70 1E        		.byte	30
 5921 0f71 9F        		.byte	-97
 5922 0f72 9D        		.byte	-99
 5923 0f73 99        		.byte	-103
 5924 0f74 B0        		.byte	-80
 5925 0f75 E2        		.byte	-30
 5926 0f76 46        		.byte	70
 5927 0f77 EF        		.byte	-17
 5928 0f78 5C        		.byte	92
 5929 0f79 3A        		.byte	58
 5930 0f7a D7        		.byte	-41
 5931 0f7b 0D        		.byte	13
 5932 0f7c 98        		.byte	-104
 5933 0f7d B2        		.byte	-78
 5934 0f7e E6        		.byte	-26
 5935 0f7f 2F        		.byte	47
 5936 0f80 BD        		.byte	-67
 5937 0f81 F8        		.byte	-8
 5938 0f82 72        		.byte	114
 5939 0f83 47        		.byte	71
 5940 0f84 ED        		.byte	-19
 5941 0f85 58        		.byte	88
 5942 0f86 13        		.byte	19
 5943 0f87 A4        		.byte	-92
 5944 0f88 CA        		.byte	-54
 5945 0f89 16        		.byte	22
 5946 0f8a 8F        		.byte	-113
 5947 0f8b 9C        		.byte	-100
 5948 0f8c 9B        		.byte	-101
 5949 0f8d 95        		.byte	-107
 5950 0f8e A8        		.byte	-88
 5951 0f8f B3        		.byte	-77
 5952 0f90 E4        		.byte	-28
 5953 0f91 2B        		.byte	43
 5954 0f92 D4        		.byte	-44
 5955 0f93 2A        		.byte	42
 5956 0f94 B7        		.byte	-73
 5957 0f95 CD        		.byte	-51
 5958 0f96 18        		.byte	24
 5959 0f97 93        		.byte	-109
 5960 0f98 A4        		.byte	-92
 5961 0f99 AB        		.byte	-85
 5962 0f9a B5        		.byte	-75
 5963 0f9b C9        		.byte	-55
 5964 0f9c 10        		.byte	16
 5965 0f9d 83        		.byte	-125
 5966 0f9e 65        		.byte	101
 5967 0f9f 48        		.byte	72
 5968 0fa0 12        		.byte	18
 5969 0fa1 87        		.byte	-121
 5970 0fa2 6D        		.byte	109
 5971 0fa3 39        		.byte	57
 5972 0fa4 D1        		.byte	-47
 5973 0fa5 01        		.byte	1
 5974 0fa6 80        		.byte	-128
 5975 0fa7 82        		.byte	-126
 5976 0fa8 86        		.byte	-122
 5977 0fa9 6F        		.byte	111
 5978 0faa 5C        		.byte	92
 5979 0fab 1B        		.byte	27
 5980 0fac B4        		.byte	-76
 5981 0fad CB        		.byte	-53
 5982 0fae F5        		.byte	-11
 5983 0faf 68        		.byte	104
 5984 0fb0 33        		.byte	51
 5985 0fb1 E4        		.byte	-28
 5986 0fb2 4A        		.byte	74
 5987 0fb3 16        		.byte	22
 5988 0fb4 8F        		.byte	-113
 5989 0fb5 7D        		.byte	125
 5990 0fb6 78        		.byte	120
 5991 0fb7 53        		.byte	83
 5992 0fb8 24        		.byte	36
 5993 0fb9 AB        		.byte	-85
 5994 0fba B5        		.byte	-75
 5995 0fbb E8        		.byte	-24
 5996 0fbc 33        		.byte	51
 5997 0fbd E4        		.byte	-28
 5998 0fbe 4A        		.byte	74
 5999 0fbf F7        		.byte	-9
 6000 0fc0 6C        		.byte	108
 6001 0fc1 5A        		.byte	90
 6002 0fc2 17        		.byte	23
 6003 0fc3 AC        		.byte	-84
 6004 0fc4 BB        		.byte	-69
 6005 0fc5 D5        		.byte	-43
 6006 0fc6 28        		.byte	40
 6007 0fc7 B3        		.byte	-77
 6008 0fc8 C5        		.byte	-59
 6009 0fc9 08        		.byte	8
 6010 0fca 92        		.byte	-110
 6011 0fcb 87        		.byte	-121
 6012 0fcc 6D        		.byte	109
 6013 0fcd 39        		.byte	57
 6014 0fce D1        		.byte	-47
 6015 0fcf 20        		.byte	32
 6016 0fd0 A3        		.byte	-93
 6017 0fd1 A5        		.byte	-91
 6018 0fd2 C8        		.byte	-56
 6019 0fd3 12        		.byte	18
 6020 0fd4 A6        		.byte	-90
 6021 0fd5 AF        		.byte	-81
 6022 0fd6 DC        		.byte	-36
 6023 0fd7 1B        		.byte	27
 6024 0fd8 B4        		.byte	-76
 6025 0fd9 CB        		.byte	-53
 6026 0fda 14        		.byte	20
 6027 0fdb AA        		.byte	-86
 6028 0fdc B7        		.byte	-73
 6029 0fdd CD        		.byte	-51
 6030 0fde 18        		.byte	24
 6031 0fdf 93        		.byte	-109
 6032 0fe0 85        		.byte	-123
 6033 0fe1 69        		.byte	105
 6034 0fe2 50        		.byte	80
 6035 0fe3 03        		.byte	3
 6036 0fe4 65        		.byte	101
 6037 0fe5 29        		.byte	41
 6038 0fe6 B1        		.byte	-79
 6039 0fe7 C1        		.byte	-63
 6040 0fe8 00        		.byte	0
 6041 0fe9 82        		.byte	-126
 6042 0fea 86        		.byte	-122
 6043 0feb 6F        		.byte	111
 6044 0fec 3D        		.byte	61
 6045 0fed D9        		.byte	-39
 6046 0fee 30        		.byte	48
 6047 0fef C3        		.byte	-61
 6048 0ff0 04        		.byte	4
 6049 0ff1 6B        		.byte	107
 6050 0ff2 35        		.byte	53
 6051 0ff3 E8        		.byte	-24
 6052 0ff4 33        		.byte	51
 6053 0ff5 E4        		.byte	-28
 6054 0ff6 2B        		.byte	43
 6055 0ff7 D4        		.byte	-44
 6056 0ff8 0B        		.byte	11
 6057 0ff9 75        		.byte	117
 6058 0ffa A9        		.byte	-87
 6059 0ffb 6B        		.byte	107
 6060 0ffc BB        		.byte	-69
 6061 0ffd FF        		.byte	-1
 6062               		.text
 6063               	.Letext0:
 6064               		.file 2 "/usr/lib/avr/include/stdint.h"
 6065               		.file 3 "srom_3360_0x03.h"
 6066               		.file 4 "usb_mouse.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccYpBOlW.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYpBOlW.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYpBOlW.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYpBOlW.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYpBOlW.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYpBOlW.s:16     .text.startup.main:0000000000000000 main
     /tmp/ccYpBOlW.s:1967   .progmem.data:0000000000000000 srom

UNDEFINED SYMBOLS
__addsf3
__fixunssfsi
__floatsisf
usb_init
usb_configured
